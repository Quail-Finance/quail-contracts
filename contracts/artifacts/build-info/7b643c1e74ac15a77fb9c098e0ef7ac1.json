{
	"id": "7b643c1e74ac15a77fb9c098e0ef7ac1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/"
			]
		},
		"sources": {
			"contracts/QuailFinance.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\n//0x98046Bd286715D3B0BC227Dd7a956b83D8978603\n//0x6CC14824Ea2918f5De5C2f75A9Da968ad4BD6344\n//0xE4860D3973802C7C42450D7b9741921C7711D039\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./IERC20Rebasing.sol\";\nimport \"./IBlast.sol\";\nimport \"./IBlastPoints.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport \"@pythnetwork/entropy-sdk-solidity/IEntropy.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\ncontract QuailFinance is Initializable, OwnableUpgradeable {\n    IEntropy private entropy;\n    address private entropyProvider;\n    address public admin;\n    using ECDSA for bytes32;\n    bytes32 public merkleRoot; // The Merkle Root representing all valid claims\n    uint256 private nextPotId = 1; // Start pot IDs at 1\n    IBlast public constant BLAST = IBlast(0x4200000000000000000000000000000000000022);\n    uint256 public totalRevenue;\n    uint256 public potCreationFee;\n    uint256 public totalYielDeposited;\n    IERC20 public usdbToken; // USDC token interface\n    mapping(address => uint256) public hasClaimed;\n    mapping(uint256 => Pot) public pots;\n    // Additional mapping to track earned yield per user\n    mapping(address => uint256) private userYield;\n    mapping(uint256 => mapping(uint256 => mapping(address => bool))) public hasJoinedPot;\n    /*\n    * Represents the structure of a pot within Quail Finance.\n    * Each pot allows participants to deposit USDB tokens, which are then rotated or distributed based on the pot's configuration.\n    * \n    * Fields:\n    * - amount: The fixed amount of USDB tokens required from each participant to join the pot. This ensures uniform contributions from all participants.\n    * - rotationCycleInSeconds: The duration in seconds between each rotation.\n    * - lastRotationTime: Timestamp of the last rotation, used to calculate the next eligible rotation time.\n    * - interestNumerator and interestDenominator: Parts of the fractional interest rate for risk calculations. \n    *   The actual interest rate is derived from interestNumerator / interestDenominator.\n    * - numParticipants: The total number of participants allowed in the pot. This limit is set at pot creation.\n    * - currentRound: Tracks the current round of the pot, incrementing after each rotation. It represents the progression through the pot's lifecycle.\n    * - potCreator: The address of the user who created the pot, who may have special privileges, such as initiating rotations.\n    * - participants: A dynamic array of addresses representing participants who have joined the pot.\n    *\n    * The `rotationCycleInSeconds` determines the frequency of rotations, enabling dynamic adjustment of the pot's rotation schedule. The `currentRound` is incremented after each rotation, serving as a counter for the total number of rotations, which is essential for calculating and distributing the pot's funds, including the handling of the risk pool towards the end of the pot's lifecycle.\n    */\n    struct Pot {\n        string name;\n        uint256 amount;\n        uint256 riskPoolBalance;\n        uint256 useRiskPoolBalance;\n        uint256 rotationCycleInSeconds;\n        uint256 lastRotationTime;\n        uint256 interestNumerator;\n        uint256 interestDenominator;\n        uint256 numParticipants;\n        uint256 currentRound;\n        uint64 sequenceNumber;\n        address potCreator;\n        address[] participants;\n        address[] winners;\n        mapping(address => uint256) amountWon; // Mapping to store amount won by each winner\n        mapping(address => bool) hasWon;\n    }\n\n    // Events\n    event PotCreated(uint256 potId, string name, address creator, uint256 amount, uint256 rotationCycleInSeconds, uint256 _interestDenominator, uint256 _interestNumerator, uint256 _numParticipants, uint64 sequenceNumber, bytes32 userCommitment);\n    event ParticipantJoined(uint256 potId, string name, address participant, uint256 amount, uint256 rotationCycleInSeconds, uint256 _interestDenominator, uint256 _interestNumerator, uint256 _numParticipants);\n    event ParticipantRemoved(uint256 potId, address participant);\n    event RotationCompleted(uint256 potId, address winner, uint256 round, uint64 sequenceNumber,bytes32 userCommitment, uint256 usedRiskPoolBalance, uint256 amount);\n    event RewardClaimed(uint256 potId, address winner, uint256 amount);\n\n    IERC20Rebasing public constant USDB = IERC20Rebasing(0x4200000000000000000000000000000000000022);\n    function initialize(address _entropy) public initializer {\n    // constructor(address _entropy, address _entropyProvider, address adminSigner) Ownable(msg.sender){\n        __Ownable_init(msg.sender);\n        USDB.configure(YieldMode.CLAIMABLE); //configure claimable yield for USDB\n        usdbToken = IERC20(0x4200000000000000000000000000000000000022);\n        BLAST.configureClaimableGas();\n        // To do change operator address while going to mainnet\n        IBlastPoints(0x2fc95838c71e76ec69ff817983BFf17c710F34E0).configurePointsOperator(0xE4860D3973802C7C42450D7b9741921C7711D039);\n        //0x98046Bd286715D3B0BC227Dd7a956b83D8978603\n        //0x6CC14824Ea2918f5De5C2f75A9Da968ad4BD6344\n        //0xE4860D3973802C7C42450D7b9741921C7711D039\n        entropy = IEntropy(_entropy);\n        entropyProvider = 0x6CC14824Ea2918f5De5C2f75A9Da968ad4BD6344;\n        admin = 0xE4860D3973802C7C42450D7b9741921C7711D039;\n        potCreationFee = 1000000000000000;\n\t}\n    /*\n    * Create a new Quail Pot\n    * Allows users to create a new pot within Quail Finance, specifying parameters such as pot name, rotation cycle duration,\n    * interest rates, number of participants, and initial deposit amount. The creator must deposit an initial usdb for pot creation.\n    * Upon successful creation, emits a PotCreated event containing details of the newly created pot.\n    * Parameters:\n    * - _name: The name or identifier for the pot.\n    * - userCommitment: Commitment generated by the admin for entropy.\n    * - _rotationCycleInSeconds: The duration in seconds between each rotation.\n    * - _interestDenominator: The denominator for the fractional interest rate.\n    * - _interestNumerator: The numerator for the fractional interest rate.\n    * - _numParticipants: The total number of participants allowed in the pot.\n    * - _amount: The initial deposit amount required from the creator.\n    * Modifiers:\n    *Payable: Requires the sender to attach a fee for entropy generation to the Pyth network.\n    */\n    function createPot(string memory _name, bytes32 userCommitment, uint256 _rotationCycleInSeconds, uint256 _interestDenominator, uint256 _interestNumerator, uint256 _numParticipants, uint256 _amount) public payable {\n        uint256 fee = entropy.getFee(entropyProvider);\n        require(msg.value == fee+potCreationFee, \"Insufficient fee\");\n\n        require(_rotationCycleInSeconds > 0, \"Rotation cycle must be positive\");\n        require(_interestDenominator > 0, \"Interest denominator must be positive\");\n        require(_interestNumerator <= _interestDenominator, \"Numerator must be less than or equal to denominator\");\n        uint256 potId = nextPotId++;\n        require(usdbToken.transferFrom(msg.sender, address(this), _amount), \"Creator should deposit the initial amount\");\n        uint64 sequenceNumber = entropy.request{value: fee}(\n            entropyProvider,\n            userCommitment,\n            false\n        );\n        // Assign values individually\n        Pot storage newPot = pots[potId];\n        newPot.name = _name;\n        newPot.amount = _amount;\n        newPot.riskPoolBalance = 0;\n        newPot.sequenceNumber = sequenceNumber;\n        newPot.potCreator = msg.sender;\n        newPot.rotationCycleInSeconds = _rotationCycleInSeconds;\n        newPot.interestNumerator = _interestNumerator;\n        newPot.interestDenominator = _interestDenominator;\n        newPot.lastRotationTime = block.timestamp;\n        newPot.numParticipants = _numParticipants;\n        newPot.currentRound = 1;\n        newPot.participants.push(msg.sender);\n        hasJoinedPot[potId][newPot.currentRound][msg.sender] = true;\n        emit PotCreated(potId, _name, msg.sender, _amount, _rotationCycleInSeconds, _interestNumerator, _interestDenominator,_numParticipants,sequenceNumber,userCommitment);\n        emit ParticipantJoined(potId, _name, msg.sender, _amount, _rotationCycleInSeconds, _interestNumerator, _interestDenominator, _numParticipants);\n    }\n\n    /*\n    * Join a Quail Pot\n    * Allows users to join an existing pot within Quail Finance by providing a valid signature and nonce for authentication.\n    * Participants must transfer the required amount of USDB tokens to the pot's contract address upon joining.\n    * If the participant has not yet won in the pot, they are added to the list of participants.\n    * Emits a ParticipantJoined event upon successful participation.\n    * Parameters:\n    * - _potId: The ID of the pot to join.\n    * - signature: Signature for authentication of the join request.\n    * - nonce: Nonce used for generating the message hash for signature verification.\n    */\n    function joinPot(uint256 _potId, bytes memory signature, uint256 nonce) external {\n        Pot storage pot = pots[_potId];\n        require(pot.participants.length < pot.numParticipants, \"Pot is full\");\n        require(!hasJoinedPot[_potId][pot.currentRound][msg.sender], \"You have already joined this pot in the current round\");\n        bytes32 messageHash = keccak256(abi.encodePacked(_potId, msg.sender, pot.currentRound, nonce));\n        bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\n        require(admin == ethSignedMessageHash.recover(signature), \"Signature verification failed\");\n        hasJoinedPot[_potId][pot.currentRound][msg.sender] = true;\n        // Transfer usdb to the contract\n        require(usdbToken.transferFrom(msg.sender, address(this), pot.amount), \"Transfer failed\");\n        if (!pot.hasWon[msg.sender]){\n            pot.participants.push(msg.sender);\n        }\n        emit ParticipantJoined(_potId, pot.name, msg.sender, pot.amount, pot.rotationCycleInSeconds, pot.interestNumerator, pot.interestDenominator, pot.numParticipants);\n    }\n\n    /*\n    * Rotate liquidity turn-by-turn\n    * Allows the pot creator / public to rotate liquidity within the pot, determining the winner of the current round.\n    * The rotation occurs at intervals specified by the rotation cycle duration.\n    * The pot creator must provide valid random numbers (userRandom and providerRandom) generated from Pyth's entropy.\n    * The winner is chosen randomly among the participants using the generated random number.\n    * The winner receives the pot's funds after deducting the risk pool and revenue amount.\n    * If the winner is not the last participant, their position in the participants' list is swapped with the last participant.\n    * Emits a RotationCompleted event upon successful rotation.\n    *\n    * Parameters:\n    * - _potId: The ID of the pot to rotate liquidity.\n    * - userRandom: Random number generated by the admin for entropy.\n    * - providerRandom: Random number provided by the entropy provider (Pyth).\n    */\n    function rotateLiquidity(uint256 _potId, bytes32 userCommitment, bytes32 userRandom, bytes32 providerRandom) external payable  {\n        Pot storage pot = pots[_potId];\n        // this is temporary fix\n        // require(block.timestamp >= pot.lastRotationTime + pot.rotationCycleInSeconds || pot.numParticipants == pot.participants.length+pot.winners.length, \"Next rotation not yet due\");\n        bytes32 randomNumber = entropy.reveal(entropyProvider, pot.sequenceNumber, userRandom, providerRandom);\n        uint256 winnerIndex = uint256(randomNumber) % pot.participants.length;\n        address winner = pot.participants[winnerIndex];\n        pot.winners.push(winner);\n        // Transfer usdb to the winner. This will deduct the risk percentage amount set by the creator\n        uint256 totalPotAmount = pot.participants.length * pot.amount;\n        uint256 amountAfterRevenue = deductRevenue(totalPotAmount);\n        // To-do check risk pool integration\n        uint256 riskPoolBalance = calculateRiskPoolBalance(_potId,amountAfterRevenue);\n        uint256 currentlyUsingRiskPoolBalance = pot.useRiskPoolBalance;\n        uint256 totalWinningAmount = (amountAfterRevenue-riskPoolBalance)+currentlyUsingRiskPoolBalance;\n        pot.amountWon[winner] = totalWinningAmount;\n        pot.riskPoolBalance += riskPoolBalance;\n        pot.useRiskPoolBalance = 0;\n        pot.hasWon[winner] = true;\n        pot.lastRotationTime = block.timestamp;\n        uint256 fee = entropy.getFee(entropyProvider);\n        require(msg.value == fee, \"Insufficient fee\");\n        uint64 sequenceNumber = entropy.request{value: fee}(\n            entropyProvider,\n            userCommitment,\n            false\n        );\n        pot.sequenceNumber = sequenceNumber;\n        emit RotationCompleted(_potId, winner, pot.currentRound, sequenceNumber,userCommitment,currentlyUsingRiskPoolBalance,totalWinningAmount);\n         // Increment round only if there are participants left\n        if (pot.participants.length > 0) {\n            pot.currentRound++;\n        }\n        delete pot.participants;\n    }\n    /*\n    * Use Risk Pool\n    * Allows the pot creator or an authorized signer to use funds from the risk pool to supplement the winner's prize amount.\n    * Parameters:\n    * - _potId: The ID of the pot where the risk pool funds will be used.\n    * - _amount: The amount of USDB tokens to be used from the risk pool.\n    * - signature: Signature for authentication of the risk pool usage request.\n    * - nonce: Nonce used for generating the message hash for signature verification.\n    */\n    function useRiskPool(uint256 _potId, uint256 _amount, bytes memory signature, uint256 nonce) public {\n        Pot storage pot = pots[_potId];\n        bytes32 messageHash = keccak256(abi.encodePacked(_potId, msg.sender, _amount, nonce));\n        bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\n        require(admin == ethSignedMessageHash.recover(signature), \"Signature verification failed\");\n        require(pot.riskPoolBalance >= _amount, \"amount should be less than or equal to risk pool balance\");\n        pot.useRiskPoolBalance = _amount;\n        pot.riskPoolBalance  -= _amount;\n    }\n\n    function withdrawFromPot(uint256 _potId, uint256 _index, bool _isWinner) public{\n        Pot storage pot = pots[_potId];\n        require(hasJoinedPot[_potId][pot.currentRound][msg.sender], \"You have not joined this pot\");\n        require((_isWinner && _index < pot.winners.length) || (!_isWinner && _index < pot.participants.length), \"Invalid index for participants\");\n        if (_isWinner) {\n            if (_index != pot.winners.length - 1) {\n                pot.winners[_index] = pot.winners[pot.winners.length - 1];\n            }\n            pot.winners.pop();\n        } else {\n            if (_index != pot.participants.length - 1) {\n                pot.participants[_index] = pot.participants[pot.participants.length - 1];\n            }\n            pot.participants.pop();\n        }\n        \n        emit ParticipantRemoved(_potId, msg.sender);\n    }\n    function claimReward(uint256 _potId) external {\n        Pot storage pot = pots[_potId];\n        require(pot.amountWon[msg.sender] > 0, \"No reward to claim\");\n\n        // Transfer the amount won to the winner\n        uint256 amountToClaim = pot.amountWon[msg.sender];\n        // Clear the amount won for the winner\n        pot.amountWon[msg.sender] = 0;\n        require(usdbToken.transfer(msg.sender, amountToClaim), \"Transfer failed\");\n        emit RewardClaimed(_potId,msg.sender,amountToClaim);\n    }\n\n    // Function to calculate interest for a given amount\n    function calculateRiskPoolBalance(uint256 _potId, uint256 _amount) public view returns (uint256) {\n        Pot storage pot = pots[_potId];\n        return _amount * pot.interestNumerator / pot.interestDenominator;\n    }\n\n    function deductRevenue(uint256 _amount) private returns (uint256 netAmount) {\n        uint256 revenue = _amount / 100;\n        netAmount = _amount - revenue;\n        totalRevenue += revenue;\n        return (netAmount);\n    }\n\n    function withdrawRevenue(bool _isUsdb) external onlyOwner {\n        // Transfer the revenueAmount to the owner's address or a specified wallet\n        if (_isUsdb){\n            uint256 revenueAmount = totalRevenue;\n            require(revenueAmount > 0, \"No revenue to withdraw\");\n            totalRevenue = 0; // Reset totalRevenue to zero\n            require(usdbToken.transfer(msg.sender, revenueAmount), \"Transfer failed\");\n        }\n        else {\n            payable(msg.sender).transfer(address(this).balance);\n        }\n    }\n\n    // Function to claim gas\n    function claimMyContractsGas() external onlyOwner{\n        BLAST.claimAllGas(address(this), msg.sender);\n    }\n\n    // function claimAllYield() external onlyOwner {\n\t// \tBLAST.claim(recipient, USDB.getClaimableAmount(address(this)));\n    // }\n\n    function setMerkleRoot(bytes32 _merkleRoot, uint256 _amount) external onlyOwner payable{\n        merkleRoot = _merkleRoot;\n        payable(msg.sender).transfer(_amount);\n        totalYielDeposited += _amount;\n    }\n\n    function changeAdminSigner(address newAdmin) external onlyOwner{\n        admin = newAdmin;\n    }\n\n    function updatePotCreationFee(uint256 _amount) external onlyOwner{\n        potCreationFee = _amount;\n    }\n\n    function claimFunds(uint256 claimAmount, bytes32[] calldata merkleProof) external {\n        // Verify the Merkle Proof\n        bytes32 leaf = keccak256(abi.encodePacked(msg.sender, claimAmount));\n        require(MerkleProof.verify(merkleProof, merkleRoot, leaf), \"Invalid proof.\");\n        uint256 alreadyClaimed = hasClaimed[msg.sender];\n        require(alreadyClaimed < claimAmount, \"No funds left to claim or already claimed.\");\n        uint256 claimableAmount = claimAmount - alreadyClaimed;\n        require(totalYielDeposited >= claimableAmount, \"No funds in the vault\");\n        // Update the claimed amount\n        hasClaimed[msg.sender] = claimAmount;\n        totalYielDeposited -= claimableAmount;\n        // Handle the fund transfer logic here\n        require(usdbToken.transfer(msg.sender, claimableAmount), \"Yield transfer failed\");\n    }\n\n    function getEthSignedMessageHash(bytes32 _messageHash)\n        public\n        pure\n        returns (bytes32)\n    {\n        /*\n        Signature is produced by signing a keccak256 hash with the following format:\n        \"\\x19Ethereum Signed Message\\n\" + len(msg) + msg\n        */\n        return keccak256(\n            abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _messageHash)\n        );\n    }\n\n    function getEntropyFee() public view returns (uint256 fee) {\n        fee = entropy.getFee(entropyProvider);\n    }\n    function getRiskPoolBalance(uint256 potId) public view returns (uint256 riskPoolBalance) {\n        Pot storage pot = pots[potId];\n        riskPoolBalance =  pot.riskPoolBalance;\n        return riskPoolBalance;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@pythnetwork/entropy-sdk-solidity/IEntropy.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\npragma solidity ^0.8.0;\n\nimport \"./EntropyEvents.sol\";\n\ninterface IEntropy is EntropyEvents {\n    // Register msg.sender as a randomness provider. The arguments are the provider's configuration parameters\n    // and initial commitment. Re-registering the same provider rotates the provider's commitment (and updates\n    // the feeInWei).\n    //\n    // chainLength is the number of values in the hash chain *including* the commitment, that is, chainLength >= 1.\n    function register(\n        uint128 feeInWei,\n        bytes32 commitment,\n        bytes calldata commitmentMetadata,\n        uint64 chainLength,\n        bytes calldata uri\n    ) external;\n\n    // Withdraw a portion of the accumulated fees for the provider msg.sender.\n    // Calling this function will transfer `amount` wei to the caller (provided that they have accrued a sufficient\n    // balance of fees in the contract).\n    function withdraw(uint128 amount) external;\n\n    // As a user, request a random number from `provider`. Prior to calling this method, the user should\n    // generate a random number x and keep it secret. The user should then compute hash(x) and pass that\n    // as the userCommitment argument. (You may call the constructUserCommitment method to compute the hash.)\n    //\n    // This method returns a sequence number. The user should pass this sequence number to\n    // their chosen provider (the exact method for doing so will depend on the provider) to retrieve the provider's\n    // number. The user should then call fulfillRequest to construct the final random number.\n    //\n    // This method will revert unless the caller provides a sufficient fee (at least getFee(provider)) as msg.value.\n    // Note that excess value is *not* refunded to the caller.\n    function request(\n        address provider,\n        bytes32 userCommitment,\n        bool useBlockHash\n    ) external payable returns (uint64 assignedSequenceNumber);\n\n    // Request a random number. The method expects the provider address and a secret random number\n    // in the arguments. It returns a sequence number.\n    //\n    // The address calling this function should be a contract that inherits from the IEntropyConsumer interface.\n    // The `entropyCallback` method on that interface will receive a callback with the generated random number.\n    //\n    // This method will revert unless the caller provides a sufficient fee (at least getFee(provider)) as msg.value.\n    // Note that excess value is *not* refunded to the caller.\n    function requestWithCallback(\n        address provider,\n        bytes32 userRandomNumber\n    ) external payable returns (uint64 assignedSequenceNumber);\n\n    // Fulfill a request for a random number. This method validates the provided userRandomness and provider's proof\n    // against the corresponding commitments in the in-flight request. If both values are validated, this function returns\n    // the corresponding random number.\n    //\n    // Note that this function can only be called once per in-flight request. Calling this function deletes the stored\n    // request information (so that the contract doesn't use a linear amount of storage in the number of requests).\n    // If you need to use the returned random number more than once, you are responsible for storing it.\n    function reveal(\n        address provider,\n        uint64 sequenceNumber,\n        bytes32 userRevelation,\n        bytes32 providerRevelation\n    ) external returns (bytes32 randomNumber);\n\n    // Fulfill a request for a random number. This method validates the provided userRandomness\n    // and provider's revelation against the corresponding commitment in the in-flight request. If both values are validated\n    // and the requestor address is a contract address, this function calls the requester's entropyCallback method with the\n    // sequence number, provider address and the random number as arguments. Else if the requestor is an EOA, it won't call it.\n    //\n    // Note that this function can only be called once per in-flight request. Calling this function deletes the stored\n    // request information (so that the contract doesn't use a linear amount of storage in the number of requests).\n    // If you need to use the returned random number more than once, you are responsible for storing it.\n    //\n    // Anyone can call this method to fulfill a request, but the callback will only be made to the original requester.\n    function revealWithCallback(\n        address provider,\n        uint64 sequenceNumber,\n        bytes32 userRandomNumber,\n        bytes32 providerRevelation\n    ) external;\n\n    function getProviderInfo(\n        address provider\n    ) external view returns (EntropyStructs.ProviderInfo memory info);\n\n    function getDefaultProvider() external view returns (address provider);\n\n    function getRequest(\n        address provider,\n        uint64 sequenceNumber\n    ) external view returns (EntropyStructs.Request memory req);\n\n    function getFee(address provider) external view returns (uint128 feeAmount);\n\n    function getAccruedPythFees()\n        external\n        view\n        returns (uint128 accruedPythFeesInWei);\n\n    function setProviderFee(uint128 newFeeInWei) external;\n\n    function setProviderUri(bytes calldata newUri) external;\n\n    function constructUserCommitment(\n        bytes32 userRandomness\n    ) external pure returns (bytes32 userCommitment);\n\n    function combineRandomValues(\n        bytes32 userRandomness,\n        bytes32 providerRandomness,\n        bytes32 blockHash\n    ) external pure returns (bytes32 combinedRandomness);\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Sorts the pair (a, b) and hashes the result.\n     */\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"
			},
			"contracts/IBlastPoints.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\ninterface IBlastPoints {\n\tfunction configurePointsOperator(address operator) external;\n}"
			},
			"contracts/IBlast.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\ninterface IBlast {\n  // Note: the full interface for IBlast can be found below\n  function configureClaimableGas() external;\n  function claimAllGas(address contractAddress, address recipient) external returns (uint256);\n}"
			},
			"contracts/IERC20Rebasing.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nenum YieldMode {\n  AUTOMATIC,\n  VOID,\n  CLAIMABLE\n}\n\ninterface IERC20Rebasing {\n  // changes the yield mode of the caller and update the balance\n  // to reflect the configuration\n  function configure(YieldMode) external returns (uint256);\n  // \"claimable\" yield mode accounts can call this this claim their yield\n  // to another address\n  function claim(address recipient, uint256 amount) external returns (uint256);\n  // read the claimable amount for an account\n  function getClaimableAmount(address account) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./EntropyStructs.sol\";\n\ninterface EntropyEvents {\n    event Registered(EntropyStructs.ProviderInfo provider);\n\n    event Requested(EntropyStructs.Request request);\n    event RequestedWithCallback(\n        address indexed provider,\n        address indexed requestor,\n        uint64 indexed sequenceNumber,\n        bytes32 userRandomNumber,\n        EntropyStructs.Request request\n    );\n\n    event Revealed(\n        EntropyStructs.Request request,\n        bytes32 userRevelation,\n        bytes32 providerRevelation,\n        bytes32 blockHash,\n        bytes32 randomNumber\n    );\n    event RevealedWithCallback(\n        EntropyStructs.Request request,\n        bytes32 userRandomNumber,\n        bytes32 providerRevelation,\n        bytes32 randomNumber\n    );\n\n    event ProviderFeeUpdated(address provider, uint128 oldFee, uint128 newFee);\n\n    event ProviderUriUpdated(address provider, bytes oldUri, bytes newUri);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\ncontract EntropyStructs {\n    struct ProviderInfo {\n        uint128 feeInWei;\n        uint128 accruedFeesInWei;\n        // The commitment that the provider posted to the blockchain, and the sequence number\n        // where they committed to this. This value is not advanced after the provider commits,\n        // and instead is stored to help providers track where they are in the hash chain.\n        bytes32 originalCommitment;\n        uint64 originalCommitmentSequenceNumber;\n        // Metadata for the current commitment. Providers may optionally use this field to to help\n        // manage rotations (i.e., to pick the sequence number from the correct hash chain).\n        bytes commitmentMetadata;\n        // Optional URI where clients can retrieve revelations for the provider.\n        // Client SDKs can use this field to automatically determine how to retrieve random values for each provider.\n        // TODO: specify the API that must be implemented at this URI\n        bytes uri;\n        // The first sequence number that is *not* included in the current commitment (i.e., an exclusive end index).\n        // The contract maintains the invariant that sequenceNumber <= endSequenceNumber.\n        // If sequenceNumber == endSequenceNumber, the provider must rotate their commitment to add additional random values.\n        uint64 endSequenceNumber;\n        // The sequence number that will be assigned to the next inbound user request.\n        uint64 sequenceNumber;\n        // The current commitment represents an index/value in the provider's hash chain.\n        // These values are used to verify requests for future sequence numbers. Note that\n        // currentCommitmentSequenceNumber < sequenceNumber.\n        //\n        // The currentCommitment advances forward through the provider's hash chain as values\n        // are revealed on-chain.\n        bytes32 currentCommitment;\n        uint64 currentCommitmentSequenceNumber;\n    }\n\n    struct Request {\n        // Storage slot 1 //\n        address provider;\n        uint64 sequenceNumber;\n        // The number of hashes required to verify the provider revelation.\n        uint32 numHashes;\n        // Storage slot 2 //\n        // The commitment is keccak256(userCommitment, providerCommitment). Storing the hash instead of both saves 20k gas by\n        // eliminating 1 store.\n        bytes32 commitment;\n        // Storage slot 3 //\n        // The number of the block where this request was created.\n        // Note that we're using a uint64 such that we have an additional space for an address and other fields in\n        // this storage slot. Although block.number returns a uint256, 64 bits should be plenty to index all of the\n        // blocks ever generated.\n        uint64 blockNumber;\n        // The address that requested this random number.\n        address requester;\n        // If true, incorporate the blockhash of blockNumber into the generated random value.\n        bool useBlockhash;\n        // If true, the requester will be called back with the generated random value.\n        bool isRequestWithCallback;\n        // There are 2 remaining bytes of free space in this slot.\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d39ab43004aba76670d1e06af27aba1acd279db0d974b7ad0d6c7a140ebeb71064736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220d39ab43004aba76670d1e06af27aba1acd279db0d974b7ad0d6c7a140ebeb71064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SWAP11 0xB4 ADDRESS DIV 0xAB 0xA7 PUSH7 0x70D1E06AF27ABA BYTE 0xCD 0x27 SWAP14 0xB0 0xD9 PUSH21 0xB7AD0D6C7A140EBEB71064736F6C63430008190033 ",
							"sourceMap": "344:7386:4:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220d39ab43004aba76670d1e06af27aba1acd279db0d974b7ad0d6c7a140ebeb71064736f6c63430008190033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SWAP11 0xB4 ADDRESS DIV 0xAB 0xA7 PUSH7 0x70D1E06AF27ABA BYTE 0xCD 0x27 SWAP14 0xB0 0xD9 PUSH21 0xB7AD0D6C7A140EBEB71064736F6C63430008190033 ",
							"sourceMap": "344:7386:4:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "library_deploy_address"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d39ab43004aba76670d1e06af27aba1acd279db0d974b7ad0d6c7a140ebeb71064736f6c63430008190033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol",
								"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol",
								"@pythnetwork/entropy-sdk-solidity/IEntropy.sol",
								"contracts/IBlast.sol",
								"contracts/IBlastPoints.sol",
								"contracts/IERC20Rebasing.sol",
								"contracts/QuailFinance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"MerkleProof": {
					"abi": [
						{
							"inputs": [],
							"name": "MerkleProofInvalidMultiproof",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box.",
						"errors": {
							"MerkleProofInvalidMultiproof()": [
								{
									"details": "The multiproof provided is not valid."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":803:9759  library MerkleProof {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":803:9759  library MerkleProof {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a6515829c69049b4777edf5a9a961bdb602b7a7c31c4cb0627aa4d4d2cb120e464736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220a6515829c69049b4777edf5a9a961bdb602b7a7c31c4cb0627aa4d4d2cb120e464736f6c63430008190033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 MLOAD PC 0x29 0xC6 SWAP1 BLOBHASH 0xB4 PUSH24 0x7EDF5A9A961BDB602B7A7C31C4CB0627AA4D4D2CB120E464 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "803:8956:5:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220a6515829c69049b4777edf5a9a961bdb602b7a7c31c4cb0627aa4d4d2cb120e464736f6c63430008190033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 MLOAD PC 0x29 0xC6 SWAP1 BLOBHASH 0xB4 PUSH24 0x7EDF5A9A961BDB602B7A7C31C4CB0627AA4D4D2CB120E464 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "803:8956:5:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_efficientHash(bytes32,bytes32)": "infinite",
								"_hashPair(bytes32,bytes32)": "infinite",
								"multiProofVerify(bytes32[] memory,bool[] memory,bytes32,bytes32[] memory)": "infinite",
								"multiProofVerifyCalldata(bytes32[] calldata,bool[] calldata,bytes32,bytes32[] memory)": "infinite",
								"processMultiProof(bytes32[] memory,bool[] memory,bytes32[] memory)": "infinite",
								"processMultiProofCalldata(bytes32[] calldata,bool[] calldata,bytes32[] memory)": "infinite",
								"processProof(bytes32[] memory,bytes32)": "infinite",
								"processProofCalldata(bytes32[] calldata,bytes32)": "infinite",
								"verify(bytes32[] memory,bytes32,bytes32)": "infinite",
								"verifyCalldata(bytes32[] calldata,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 803,
									"end": 9759,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "library_deploy_address"
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "RETURN",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 803,
									"end": 9759,
									"name": "REVERT",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6515829c69049b4777edf5a9a961bdb602b7a7c31c4cb0627aa4d4d2cb120e464736f6c63430008190033",
									".code": [
										{
											"begin": 803,
											"end": 9759,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 9759,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 803,
											"end": 9759,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol",
								"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol",
								"@pythnetwork/entropy-sdk-solidity/IEntropy.sol",
								"contracts/IBlast.sol",
								"contracts/IBlastPoints.sol",
								"contracts/IERC20Rebasing.sol",
								"contracts/QuailFinance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol": {
				"EntropyEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "oldFee",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "newFee",
									"type": "uint128"
								}
							],
							"name": "ProviderFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "oldUri",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "newUri",
									"type": "bytes"
								}
							],
							"name": "ProviderUriUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint128",
											"name": "feeInWei",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "accruedFeesInWei",
											"type": "uint128"
										},
										{
											"internalType": "bytes32",
											"name": "originalCommitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "originalCommitmentSequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "bytes",
											"name": "commitmentMetadata",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "uri",
											"type": "bytes"
										},
										{
											"internalType": "uint64",
											"name": "endSequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "sequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "currentCommitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "currentCommitmentSequenceNumber",
											"type": "uint64"
										}
									],
									"indexed": false,
									"internalType": "struct EntropyStructs.ProviderInfo",
									"name": "provider",
									"type": "tuple"
								}
							],
							"name": "Registered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "sequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "uint32",
											"name": "numHashes",
											"type": "uint32"
										},
										{
											"internalType": "bytes32",
											"name": "commitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "blockNumber",
											"type": "uint64"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useBlockhash",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isRequestWithCallback",
											"type": "bool"
										}
									],
									"indexed": false,
									"internalType": "struct EntropyStructs.Request",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "Requested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "requestor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "userRandomNumber",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "sequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "uint32",
											"name": "numHashes",
											"type": "uint32"
										},
										{
											"internalType": "bytes32",
											"name": "commitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "blockNumber",
											"type": "uint64"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useBlockhash",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isRequestWithCallback",
											"type": "bool"
										}
									],
									"indexed": false,
									"internalType": "struct EntropyStructs.Request",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "RequestedWithCallback",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "sequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "uint32",
											"name": "numHashes",
											"type": "uint32"
										},
										{
											"internalType": "bytes32",
											"name": "commitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "blockNumber",
											"type": "uint64"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useBlockhash",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isRequestWithCallback",
											"type": "bool"
										}
									],
									"indexed": false,
									"internalType": "struct EntropyStructs.Request",
									"name": "request",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "userRevelation",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "providerRevelation",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "blockHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "randomNumber",
									"type": "bytes32"
								}
							],
							"name": "Revealed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "sequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "uint32",
											"name": "numHashes",
											"type": "uint32"
										},
										{
											"internalType": "bytes32",
											"name": "commitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "blockNumber",
											"type": "uint64"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useBlockhash",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isRequestWithCallback",
											"type": "bool"
										}
									],
									"indexed": false,
									"internalType": "struct EntropyStructs.Request",
									"name": "request",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "userRandomNumber",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "providerRevelation",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "randomNumber",
									"type": "bytes32"
								}
							],
							"name": "RevealedWithCallback",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"oldFee\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newFee\",\"type\":\"uint128\"}],\"name\":\"ProviderFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"oldUri\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"newUri\",\"type\":\"bytes\"}],\"name\":\"ProviderUriUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"feeInWei\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"accruedFeesInWei\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"originalCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"originalCommitmentSequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"commitmentMetadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"uri\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"endSequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"currentCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"currentCommitmentSequenceNumber\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct EntropyStructs.ProviderInfo\",\"name\":\"provider\",\"type\":\"tuple\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"numHashes\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useBlockhash\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRequestWithCallback\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct EntropyStructs.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"Requested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"userRandomNumber\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"numHashes\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useBlockhash\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRequestWithCallback\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct EntropyStructs.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"RequestedWithCallback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"numHashes\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useBlockhash\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRequestWithCallback\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct EntropyStructs.Request\",\"name\":\"request\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"userRevelation\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"providerRevelation\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"randomNumber\",\"type\":\"bytes32\"}],\"name\":\"Revealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"numHashes\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useBlockhash\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRequestWithCallback\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct EntropyStructs.Request\",\"name\":\"request\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"userRandomNumber\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"providerRevelation\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"randomNumber\",\"type\":\"bytes32\"}],\"name\":\"RevealedWithCallback\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol\":\"EntropyEvents\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol\":{\"keccak256\":\"0xd8a8c77c864481ee7620adf8b92219f3c68c626271887e26330362642053f504\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f918e6fcdf4cc8c991ff4c7d81860c6b0e3b4b536e543361309cfecd8a8ecf67\",\"dweb:/ipfs/QmdBuzs7dyGGaceP4QDqu3MLnqeBLbsEpCKGWyz3a9kY8v\"]},\"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol\":{\"keccak256\":\"0xace052155e23df810ba04a93da02fc527efd0a6fd9244d95574af5d8891934e7\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://31d77a8a3cfb552c684867ec96bb8ea0e59573db7d3108cd561b03e4749fd415\",\"dweb:/ipfs/QmepPDf6digkAGepANKv3yW8d5QqmJQqWjgmWSzNJVkMLq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol": {
				"EntropyStructs": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol\":63:3228  contract EntropyStructs {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol\":63:3228  contract EntropyStructs {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206a2729ce29c78d406b23811ef265e5d99b6f549ef72bbd1c3e56a8b2117c5d5364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608080604052346013576039908160188239f35b5f80fdfe5f80fdfea26469706673582212206a2729ce29c78d406b23811ef265e5d99b6f549ef72bbd1c3e56a8b2117c5d5364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x18 DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x2729CE29C78D406B23811E CALLCODE PUSH6 0xE5D99B6F549E 0xF7 0x2B 0xBD SHR RETURNDATACOPY JUMP 0xA8 0xB2 GT PUSH29 0x5D5364736F6C6343000819003300000000000000000000000000000000 ",
							"sourceMap": "63:3165:7:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212206a2729ce29c78d406b23811ef265e5d99b6f549ef72bbd1c3e56a8b2117c5d5364736f6c63430008190033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x2729CE29C78D406B23811E CALLCODE PUSH6 0xE5D99B6F549E 0xF7 0x2B 0xBD SHR RETURNDATACOPY JUMP 0xA8 0xB2 GT PUSH29 0x5D5364736F6C6343000819003300000000000000000000000000000000 ",
							"sourceMap": "63:3165:7:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "69",
								"totalCost": "11469"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 3228,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 63,
									"end": 3228,
									"name": "REVERT",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a2729ce29c78d406b23811ef265e5d99b6f549ef72bbd1c3e56a8b2117c5d5364736f6c63430008190033",
									".code": [
										{
											"begin": 63,
											"end": 3228,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 3228,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 63,
											"end": 3228,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol",
								"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol",
								"@pythnetwork/entropy-sdk-solidity/IEntropy.sol",
								"contracts/IBlast.sol",
								"contracts/IBlastPoints.sol",
								"contracts/IERC20Rebasing.sol",
								"contracts/QuailFinance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol\":\"EntropyStructs\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol\":{\"keccak256\":\"0xace052155e23df810ba04a93da02fc527efd0a6fd9244d95574af5d8891934e7\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://31d77a8a3cfb552c684867ec96bb8ea0e59573db7d3108cd561b03e4749fd415\",\"dweb:/ipfs/QmepPDf6digkAGepANKv3yW8d5QqmJQqWjgmWSzNJVkMLq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@pythnetwork/entropy-sdk-solidity/IEntropy.sol": {
				"IEntropy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "oldFee",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "newFee",
									"type": "uint128"
								}
							],
							"name": "ProviderFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "oldUri",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "newUri",
									"type": "bytes"
								}
							],
							"name": "ProviderUriUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint128",
											"name": "feeInWei",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "accruedFeesInWei",
											"type": "uint128"
										},
										{
											"internalType": "bytes32",
											"name": "originalCommitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "originalCommitmentSequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "bytes",
											"name": "commitmentMetadata",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "uri",
											"type": "bytes"
										},
										{
											"internalType": "uint64",
											"name": "endSequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "sequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "currentCommitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "currentCommitmentSequenceNumber",
											"type": "uint64"
										}
									],
									"indexed": false,
									"internalType": "struct EntropyStructs.ProviderInfo",
									"name": "provider",
									"type": "tuple"
								}
							],
							"name": "Registered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "sequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "uint32",
											"name": "numHashes",
											"type": "uint32"
										},
										{
											"internalType": "bytes32",
											"name": "commitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "blockNumber",
											"type": "uint64"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useBlockhash",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isRequestWithCallback",
											"type": "bool"
										}
									],
									"indexed": false,
									"internalType": "struct EntropyStructs.Request",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "Requested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "requestor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "userRandomNumber",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "sequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "uint32",
											"name": "numHashes",
											"type": "uint32"
										},
										{
											"internalType": "bytes32",
											"name": "commitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "blockNumber",
											"type": "uint64"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useBlockhash",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isRequestWithCallback",
											"type": "bool"
										}
									],
									"indexed": false,
									"internalType": "struct EntropyStructs.Request",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "RequestedWithCallback",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "sequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "uint32",
											"name": "numHashes",
											"type": "uint32"
										},
										{
											"internalType": "bytes32",
											"name": "commitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "blockNumber",
											"type": "uint64"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useBlockhash",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isRequestWithCallback",
											"type": "bool"
										}
									],
									"indexed": false,
									"internalType": "struct EntropyStructs.Request",
									"name": "request",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "userRevelation",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "providerRevelation",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "blockHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "randomNumber",
									"type": "bytes32"
								}
							],
							"name": "Revealed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "sequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "uint32",
											"name": "numHashes",
											"type": "uint32"
										},
										{
											"internalType": "bytes32",
											"name": "commitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "blockNumber",
											"type": "uint64"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useBlockhash",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isRequestWithCallback",
											"type": "bool"
										}
									],
									"indexed": false,
									"internalType": "struct EntropyStructs.Request",
									"name": "request",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "userRandomNumber",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "providerRevelation",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "randomNumber",
									"type": "bytes32"
								}
							],
							"name": "RevealedWithCallback",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "userRandomness",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "providerRandomness",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "blockHash",
									"type": "bytes32"
								}
							],
							"name": "combineRandomValues",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "combinedRandomness",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "userRandomness",
									"type": "bytes32"
								}
							],
							"name": "constructUserCommitment",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "userCommitment",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAccruedPythFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "accruedPythFeesInWei",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDefaultProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "getFee",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "feeAmount",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "getProviderInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint128",
											"name": "feeInWei",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "accruedFeesInWei",
											"type": "uint128"
										},
										{
											"internalType": "bytes32",
											"name": "originalCommitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "originalCommitmentSequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "bytes",
											"name": "commitmentMetadata",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "uri",
											"type": "bytes"
										},
										{
											"internalType": "uint64",
											"name": "endSequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "sequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "currentCommitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "currentCommitmentSequenceNumber",
											"type": "uint64"
										}
									],
									"internalType": "struct EntropyStructs.ProviderInfo",
									"name": "info",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								}
							],
							"name": "getRequest",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "sequenceNumber",
											"type": "uint64"
										},
										{
											"internalType": "uint32",
											"name": "numHashes",
											"type": "uint32"
										},
										{
											"internalType": "bytes32",
											"name": "commitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "blockNumber",
											"type": "uint64"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useBlockhash",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isRequestWithCallback",
											"type": "bool"
										}
									],
									"internalType": "struct EntropyStructs.Request",
									"name": "req",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "feeInWei",
									"type": "uint128"
								},
								{
									"internalType": "bytes32",
									"name": "commitment",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "commitmentMetadata",
									"type": "bytes"
								},
								{
									"internalType": "uint64",
									"name": "chainLength",
									"type": "uint64"
								},
								{
									"internalType": "bytes",
									"name": "uri",
									"type": "bytes"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "userCommitment",
									"type": "bytes32"
								},
								{
									"internalType": "bool",
									"name": "useBlockHash",
									"type": "bool"
								}
							],
							"name": "request",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "assignedSequenceNumber",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "userRandomNumber",
									"type": "bytes32"
								}
							],
							"name": "requestWithCallback",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "assignedSequenceNumber",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								},
								{
									"internalType": "bytes32",
									"name": "userRevelation",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "providerRevelation",
									"type": "bytes32"
								}
							],
							"name": "reveal",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "randomNumber",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								},
								{
									"internalType": "bytes32",
									"name": "userRandomNumber",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "providerRevelation",
									"type": "bytes32"
								}
							],
							"name": "revealWithCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "newFeeInWei",
									"type": "uint128"
								}
							],
							"name": "setProviderFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "newUri",
									"type": "bytes"
								}
							],
							"name": "setProviderUri",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"combineRandomValues(bytes32,bytes32,bytes32)": "14e82e8c",
							"constructUserCommitment(bytes32)": "c715aa2e",
							"getAccruedPythFees()": "c970835c",
							"getDefaultProvider()": "82ee990c",
							"getFee(address)": "b88c9148",
							"getProviderInfo(address)": "7583902f",
							"getRequest(address,uint64)": "6151ab1f",
							"register(uint128,bytes32,bytes,uint64,bytes)": "38b049c6",
							"request(address,bytes32,bool)": "93cbf217",
							"requestWithCallback(address,bytes32)": "19cb825f",
							"reveal(address,uint64,bytes32,bytes32)": "9371df51",
							"revealWithCallback(address,uint64,bytes32,bytes32)": "3d30bc0e",
							"setProviderFee(uint128)": "ace63a7e",
							"setProviderUri(bytes)": "b469f1c9",
							"withdraw(uint128)": "02387a7b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"oldFee\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newFee\",\"type\":\"uint128\"}],\"name\":\"ProviderFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"oldUri\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"newUri\",\"type\":\"bytes\"}],\"name\":\"ProviderUriUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"feeInWei\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"accruedFeesInWei\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"originalCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"originalCommitmentSequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"commitmentMetadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"uri\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"endSequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"currentCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"currentCommitmentSequenceNumber\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct EntropyStructs.ProviderInfo\",\"name\":\"provider\",\"type\":\"tuple\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"numHashes\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useBlockhash\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRequestWithCallback\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct EntropyStructs.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"Requested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"userRandomNumber\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"numHashes\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useBlockhash\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRequestWithCallback\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct EntropyStructs.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"RequestedWithCallback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"numHashes\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useBlockhash\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRequestWithCallback\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct EntropyStructs.Request\",\"name\":\"request\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"userRevelation\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"providerRevelation\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"randomNumber\",\"type\":\"bytes32\"}],\"name\":\"Revealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"numHashes\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useBlockhash\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRequestWithCallback\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct EntropyStructs.Request\",\"name\":\"request\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"userRandomNumber\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"providerRevelation\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"randomNumber\",\"type\":\"bytes32\"}],\"name\":\"RevealedWithCallback\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"userRandomness\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"providerRandomness\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"combineRandomValues\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"combinedRandomness\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"userRandomness\",\"type\":\"bytes32\"}],\"name\":\"constructUserCommitment\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"userCommitment\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAccruedPythFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"accruedPythFeesInWei\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"feeAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"getProviderInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"feeInWei\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"accruedFeesInWei\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"originalCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"originalCommitmentSequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"commitmentMetadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"uri\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"endSequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"currentCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"currentCommitmentSequenceNumber\",\"type\":\"uint64\"}],\"internalType\":\"struct EntropyStructs.ProviderInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"}],\"name\":\"getRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"numHashes\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useBlockhash\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRequestWithCallback\",\"type\":\"bool\"}],\"internalType\":\"struct EntropyStructs.Request\",\"name\":\"req\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"feeInWei\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"commitmentMetadata\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"chainLength\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"uri\",\"type\":\"bytes\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"userCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"useBlockHash\",\"type\":\"bool\"}],\"name\":\"request\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"assignedSequenceNumber\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"userRandomNumber\",\"type\":\"bytes32\"}],\"name\":\"requestWithCallback\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"assignedSequenceNumber\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"userRevelation\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"providerRevelation\",\"type\":\"bytes32\"}],\"name\":\"reveal\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"randomNumber\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"userRandomNumber\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"providerRevelation\",\"type\":\"bytes32\"}],\"name\":\"revealWithCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"newFeeInWei\",\"type\":\"uint128\"}],\"name\":\"setProviderFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"newUri\",\"type\":\"bytes\"}],\"name\":\"setProviderUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/entropy-sdk-solidity/IEntropy.sol\":\"IEntropy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol\":{\"keccak256\":\"0xd8a8c77c864481ee7620adf8b92219f3c68c626271887e26330362642053f504\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f918e6fcdf4cc8c991ff4c7d81860c6b0e3b4b536e543361309cfecd8a8ecf67\",\"dweb:/ipfs/QmdBuzs7dyGGaceP4QDqu3MLnqeBLbsEpCKGWyz3a9kY8v\"]},\"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol\":{\"keccak256\":\"0xace052155e23df810ba04a93da02fc527efd0a6fd9244d95574af5d8891934e7\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://31d77a8a3cfb552c684867ec96bb8ea0e59573db7d3108cd561b03e4749fd415\",\"dweb:/ipfs/QmepPDf6digkAGepANKv3yW8d5QqmJQqWjgmWSzNJVkMLq\"]},\"@pythnetwork/entropy-sdk-solidity/IEntropy.sol\":{\"keccak256\":\"0x9d4556ea3b36960a43e6f4c2df53f5e4ffa980deaa2c15bfdefc5f66258ca748\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://21d4bded2b3b30f3ced6ea24694e3b04bb94cab28796ee2786720a80e0b73bdd\",\"dweb:/ipfs/QmQfBFzSZj9cNxne8izUE1fYvfFoGjAisUa3aeh2YYDuqc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBlast.sol": {
				"IBlast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimAllGas",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "configureClaimableGas",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimAllGas(address,address)": "954fa5ee",
							"configureClaimableGas()": "4e606c47"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimAllGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"configureClaimableGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBlast.sol\":\"IBlast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"contracts/IBlast.sol\":{\"keccak256\":\"0x55ca30a5c12bd255a306b9342e7e101ce0c88d62679318372771b8cb0b7ce733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df42814393047e060e4188a8736131ff4cac706080d04e207809a810b73bbc80\",\"dweb:/ipfs/QmZxXg2RDc8qopt354UD7qVTKBwYtt7cFJ1tpqJNyxpK1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBlastPoints.sol": {
				"IBlastPoints": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "configurePointsOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"configurePointsOperator(address)": "36b91f2b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"configurePointsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBlastPoints.sol\":\"IBlastPoints\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"contracts/IBlastPoints.sol\":{\"keccak256\":\"0xb39cc4f8d44b519407f1176b4bf37351c78828046287f8702a118aa0f097fecb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b604a8f941e1d868736776fb40db3a619e28c8f7890376582c2e09fd5cb44f17\",\"dweb:/ipfs/QmT5C6WKNyCwkSUKAScmD6cRyqoQTmPe95wbxUBuwDntko\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20Rebasing.sol": {
				"IERC20Rebasing": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum YieldMode",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "configure",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getClaimableAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claim(address,uint256)": "aad3ec96",
							"configure(uint8)": "1a33757d",
							"getClaimableAmount(address)": "e12f3a61"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum YieldMode\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"configure\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getClaimableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20Rebasing.sol\":\"IERC20Rebasing\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"contracts/IERC20Rebasing.sol\":{\"keccak256\":\"0xd7456daba0e57d0561815401c9f24a2fcf8b4daa471c16055c92af915aaaf33f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43cbe83d82e6c965beb79df69c3154803aa59f6b71c326697e408d7884dc46e4\",\"dweb:/ipfs/QmTYC1k7XZ5XftKRXk8ZHVvpACxUbLh7CQVAa2tbdEKLvo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/QuailFinance.sol": {
				"QuailFinance": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "potId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "participant",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rotationCycleInSeconds",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_interestDenominator",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_interestNumerator",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_numParticipants",
									"type": "uint256"
								}
							],
							"name": "ParticipantJoined",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "potId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "participant",
									"type": "address"
								}
							],
							"name": "ParticipantRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "potId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rotationCycleInSeconds",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_interestDenominator",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_interestNumerator",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_numParticipants",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "userCommitment",
									"type": "bytes32"
								}
							],
							"name": "PotCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "potId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "potId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "userCommitment",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usedRiskPoolBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RotationCompleted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BLAST",
							"outputs": [
								{
									"internalType": "contract IBlast",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDB",
							"outputs": [
								{
									"internalType": "contract IERC20Rebasing",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_potId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "calculateRiskPoolBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "changeAdminSigner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "claimAmount",
									"type": "uint256"
								},
								{
									"internalType": "bytes32[]",
									"name": "merkleProof",
									"type": "bytes32[]"
								}
							],
							"name": "claimFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimMyContractsGas",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_potId",
									"type": "uint256"
								}
							],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "userCommitment",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_rotationCycleInSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_interestDenominator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_interestNumerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_numParticipants",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "createPot",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEntropyFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_messageHash",
									"type": "bytes32"
								}
							],
							"name": "getEthSignedMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "potId",
									"type": "uint256"
								}
							],
							"name": "getRiskPoolBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "riskPoolBalance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasClaimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasJoinedPot",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_entropy",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_potId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"name": "joinPot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "merkleRoot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "potCreationFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "pots",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "riskPoolBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "useRiskPoolBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rotationCycleInSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRotationTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestNumerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestDenominator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numParticipants",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentRound",
									"type": "uint256"
								},
								{
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "potCreator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_potId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "userCommitment",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "userRandom",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "providerRandom",
									"type": "bytes32"
								}
							],
							"name": "rotateLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_merkleRoot",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setMerkleRoot",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRevenue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalYielDeposited",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "updatePotCreationFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdbToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_potId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"name": "useRiskPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_potId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_isWinner",
									"type": "bool"
								}
							],
							"name": "withdrawFromPot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_isUsdb",
									"type": "bool"
								}
							],
							"name": "withdrawRevenue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n    /* \"contracts/QuailFinance.sol\":969:970  1 */\n  0x01\n  0x04\n    /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n  sstore\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_35, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_35:\n      0x00\n      swap1\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x07dd3f44\n      eq\n      tag_37\n      jumpi\n      pop\n      dup1\n      0x0fae6443\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x210eaeae\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x2d971e63\n      eq\n      tag_43\n      jumpi\n        /* \"contracts/QuailFinance.sol\":19031:19062  entropy.getFee(entropyProvider) */\n      dup1\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x2eb4a7ab\n        /* \"contracts/QuailFinance.sol\":19031:19062  entropy.getFee(entropyProvider) */\n      eq\n      tag_45\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup1\n      0x31a0edec\n      eq\n      tag_75\n      jumpi\n      dup1\n      0x4a80409e\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x4d781b31\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x4da1ec40\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x61e7d805\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_57\n      jumpi\n      dup1\n      0x73b2e80e\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x77d5d2dc\n      eq\n      tag_61\n      jumpi\n      dup1\n      0x7c382d0b\n      eq\n      tag_63\n      jumpi\n      dup1\n      0x7d77990c\n      eq\n      tag_65\n      jumpi\n      dup1\n      0x818c5548\n      eq\n      tag_67\n      jumpi\n      dup1\n      0x82199e3f\n      eq\n      tag_69\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_71\n      jumpi\n      dup1\n      0x91dc969e\n      eq\n      tag_73\n      jumpi\n      dup1\n      0x97d75776\n      eq\n      tag_75\n      jumpi\n      dup1\n      0xae169a50\n      eq\n      tag_77\n      jumpi\n      dup1\n      0xb7db43c8\n      eq\n      tag_79\n      jumpi\n      dup1\n      0xbf2d9e0b\n      eq\n      tag_81\n      jumpi\n      dup1\n      0xc3c3df4f\n      eq\n      tag_83\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_85\n      jumpi\n      dup1\n      0xca829f10\n      eq\n      tag_87\n      jumpi\n      dup1\n      0xec71687b\n      eq\n      tag_89\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_91\n      jumpi\n      dup1\n      0xf78aedf9\n      eq\n      tag_93\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_95\n      jumpi\n      0xfa540801\n      eq\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_103\n      calldataload(0x04)\n      tag_29\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_101:\n      dup1\n      revert\n    tag_95:\n      pop\n      jumpi(tag_101, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_101\n      jumpi\n        /* \"contracts/QuailFinance.sol\":806:826  address public admin */\n      0x02\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_93:\n      pop\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      calldataload(0x24)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_112\n      jumpi\n      tag_114\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_6\n      jump\t// in\n    tag_114:\n      swap2\n      dup2\n      dup2\n      mstore\n      0x20\n        /* \"contracts/QuailFinance.sol\":9413:9417  pots */\n      0x0a\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/QuailFinance.sol\":9443:9459  pot.participants */\n      swap3\n      0x0b\n      dup5\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap1\n      dup2\n      sload\n        /* \"contracts/QuailFinance.sol\":9469:9488  pot.numParticipants */\n      swap2\n      0x08\n      dup7\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap3\n      dup4\n      sload\n      gt\n      iszero\n      tag_115\n      jumpi\n      dup2\n      dup6\n      mstore\n        /* \"contracts/QuailFinance.sol\":9523:9535  hasJoinedPot */\n      0x0c\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup5\n      mstore\n      0x40\n      dup6\n      keccak256\n        /* \"contracts/QuailFinance.sol\":9544:9560  pot.currentRound */\n      0x09\n      dup8\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      swap1\n      dup2\n      dup8\n      mstore\n      dup6\n      mstore\n      0x40\n      dup7\n      keccak256\n        /* \"contracts/QuailFinance.sol\":9562:9572  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n      mstore\n      dup6\n      mstore\n      jumpi(tag_117, and(sload(keccak256(0x00, 0x40)), 0xff))\n      mload(0x40)\n        /* \"contracts/QuailFinance.sol\":9673:9734  abi.encodePacked(_potId, msg.sender, pot.currentRound, nonce) */\n      dup6\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":9562:9572  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x60\n      shl\n      not(0xffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      mstore\n      0x34\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      calldataload(0x44)\n      0x54\n      dup3\n      add\n      mstore\n      swap8\n      swap9\n      swap7\n      swap8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3859:3886  tryRecover(hash, signature) */\n      tag_120\n      swap8\n        /* \"contracts/QuailFinance.sol\":9822:9912  require(admin == ethSignedMessageHash.recover(signature), \"Signature verification failed\") */\n      tag_119\n      swap3\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap1\n      swap2\n        /* \"contracts/QuailFinance.sol\":9776:9812  getEthSignedMessageHash(messageHash) */\n      tag_121\n      swap2\n        /* \"contracts/QuailFinance.sol\":9673:9734  abi.encodePacked(_potId, msg.sender, pot.currentRound, nonce) */\n      tag_122\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      0x74\n      dup5\n      add\n        /* \"contracts/QuailFinance.sol\":9673:9734  abi.encodePacked(_potId, msg.sender, pot.currentRound, nonce) */\n    tag_123:\n      sub\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      not(0x1f)\n        /* \"contracts/QuailFinance.sol\":9673:9734  abi.encodePacked(_potId, msg.sender, pot.currentRound, nonce) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_3\n      jump\t// in\n    tag_122:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload\n        /* \"contracts/QuailFinance.sol\":9663:9735  keccak256(abi.encodePacked(_potId, msg.sender, pot.currentRound, nonce)) */\n      swap1\n      keccak256\n        /* \"contracts/QuailFinance.sol\":9776:9812  getEthSignedMessageHash(messageHash) */\n      tag_29\n      jump\t// in\n    tag_121:\n        /* \"contracts/QuailFinance.sol\":9830:9835  admin */\n      0x02\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap10\n      swap1\n      dup11\n      and\n      swap3\n      dup11\n      swap3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3915:3923  errorArg */\n      tag_124\n      swap3\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3859:3886  tryRecover(hash, signature) */\n      tag_31\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3915:3923  errorArg */\n      swap1\n      swap3\n      swap2\n      swap3\n      tag_32\n      jump\t// in\n    tag_124:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      and\n        /* \"contracts/QuailFinance.sol\":9830:9878  admin == ethSignedMessageHash.recover(signature) */\n      eq\n        /* \"contracts/QuailFinance.sol\":9822:9912  require(admin == ethSignedMessageHash.recover(signature), \"Signature verification failed\") */\n      tag_26\n      jump\t// in\n    tag_119:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup3\n      dup8\n      mstore\n        /* \"contracts/QuailFinance.sol\":9523:9535  hasJoinedPot */\n      0x0c\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup6\n      mstore\n      0x40\n      dup1\n      dup9\n      keccak256\n      swap2\n      dup9\n      mstore\n      swap1\n      dup6\n      mstore\n      dup1\n      dup8\n      keccak256\n        /* \"contracts/QuailFinance.sol\":9562:9572  msg.sender */\n      caller\n      0x00\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      dup2\n      mstore\n      swap2\n      dup8\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      not(0xff)\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/QuailFinance.sol\":9469:9488  pot.numParticipants */\n      0x08\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":10088:10098  pot.amount */\n      dup12\n      dup4\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup1\n      sload\n      swap6\n      mload\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/QuailFinance.sol\":10038:10099  usdbToken.transferFrom(msg.sender, address(this), pot.amount) */\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n        /* \"contracts/QuailFinance.sol\":10038:10099  usdbToken.transferFrom(msg.sender, address(this), pot.amount) */\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"contracts/QuailFinance.sol\":10081:10085  this */\n      address\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x24\n      dup7\n      add\n      mstore\n      0x44\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      swap2\n      swap9\n      swap1\n      swap5\n      swap3\n      swap2\n      dup9\n      swap2\n      dup4\n      swap2\n      0x64\n      swap2\n      dup4\n      swap2\n      dup15\n      swap2\n      and\n        /* \"contracts/QuailFinance.sol\":10038:10099  usdbToken.transferFrom(msg.sender, address(this), pot.amount) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_126\n      jumpi\n      swap1\n        /* \"contracts/QuailFinance.sol\":10030:10119  require(usdbToken.transferFrom(msg.sender, address(this), pot.amount), \"Transfer failed\") */\n      tag_128\n        /* \"contracts/QuailFinance.sol\":10038:10099  usdbToken.transferFrom(msg.sender, address(this), pot.amount) */\n      swap2\n      dup11\n      swap2\n      tag_129\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_130:\n        /* \"contracts/QuailFinance.sol\":10030:10119  require(usdbToken.transferFrom(msg.sender, address(this), pot.amount), \"Transfer failed\") */\n      pop\n      tag_27\n      jump\t// in\n    tag_128:\n        /* \"contracts/QuailFinance.sol\":9562:9572  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n      mstore\n        /* \"contracts/QuailFinance.sol\":10134:10144  pot.hasWon */\n      0x0e\n      dup10\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup7\n      mstore\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"contracts/QuailFinance.sol\":10133:10156  !pot.hasWon[msg.sender] */\n      iszero\n        /* \"contracts/QuailFinance.sol\":10129:10215  if (!pot.hasWon[msg.sender]){... */\n      tag_131\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_132:\n      pop\n      sload\n      0x04\n        /* \"contracts/QuailFinance.sol\":10289:10315  pot.rotationCycleInSeconds */\n      dup9\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":10317:10338  pot.interestNumerator */\n      swap2\n      0x06\n      dup10\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":10340:10363  pot.interestDenominator */\n      swap4\n      0x07\n      dup11\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      swap6\n      sload\n      swap7\n      mload(0x40)\n      swap9\n      0x0100\n      swap3\n      dup11\n      mstore\n      dup3\n      dup3\n      dup12\n      add\n      mstore\n      dup11\n      swap12\n      dup1\n      sload\n      tag_133\n      dup2\n      tag_7\n      jump\t// in\n    tag_133:\n      dup1\n      swap6\n      dup14\n      add\n      mstore\n      0x0120\n      swap6\n      0x01\n      dup3\n      and\n      swap2\n      dup3\n      0x00\n      eq\n      tag_134\n      jumpi\n      pop\n      pop\n      0x01\n      eq\n      tag_136\n      jumpi\n    tag_137:\n        /* \"contracts/QuailFinance.sol\":9562:9572  msg.sender */\n      pop\n      dup11\n      0x00\n      dup1\n      mload\n      0x20\n      data_c97b5f71de675c355b301d9bb4e0d9e2cc0d5f6fb5c2bcc4b55320cac8f563e0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup12\n      dup1\n      dup16\n      dup14\n      dup14\n      dup14\n      dup14\n      dup14\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x40\n      dup9\n      add\n      mstore\n      0x60\n      dup8\n      add\n      mstore\n      0x80\n      dup7\n      add\n      mstore\n      0xa0\n      dup6\n      add\n      mstore\n      0xc0\n      dup5\n      add\n      mstore\n      0xe0\n      dup4\n      add\n      mstore\n        /* \"contracts/QuailFinance.sol\":10229:10385  ParticipantJoined(_potId, pot.name, msg.sender, pot.amount, pot.rotationCycleInSeconds, pot.interestNumerator, pot.interestDenominator, pot.numParticipants) */\n      sub\n      swap1\n      log1\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup1\n      return\n    tag_136:\n      swap1\n      swap4\n      swap5\n      swap12\n      pop\n      dup11\n      mstore\n      dup1\n      dup11\n      keccak256\n      swap3\n      dup11\n      swap4\n    tag_138:\n      dup4\n      dup6\n      lt\n      tag_139\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      dup7\n      add\n      add\n      swap7\n      dup2\n      0x00\n      dup1\n      mload\n      0x20\n      data_c97b5f71de675c355b301d9bb4e0d9e2cc0d5f6fb5c2bcc4b55320cac8f563e0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup8\n      0x00\n      dup1\n      jump(tag_137)\n    tag_139:\n      dup1\n      sload\n      dup6\n      dup13\n      add\n      dup8\n      add\n      mstore\n      swap4\n      dup3\n      add\n      swap4\n      dup2\n      add\n      jump(tag_138)\n    tag_134:\n      and\n      dup7\n      dup14\n      add\n      mstore\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      0x05\n      shl\n      dup8\n      add\n      add\n      swap8\n      pop\n      dup2\n      0x00\n      dup1\n      mload\n      0x20\n      data_c97b5f71de675c355b301d9bb4e0d9e2cc0d5f6fb5c2bcc4b55320cac8f563e0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup8\n      0x00\n      dup1\n      jump(tag_137)\n        /* \"contracts/QuailFinance.sol\":10129:10215  if (!pot.hasWon[msg.sender]){... */\n    tag_131:\n        /* \"contracts/QuailFinance.sol\":10171:10204  pot.participants.push(msg.sender) */\n      tag_141\n        /* \"contracts/QuailFinance.sol\":9562:9572  msg.sender */\n      swap1\n      caller\n        /* \"contracts/QuailFinance.sol\":10171:10204  pot.participants.push(msg.sender) */\n      swap1\n      tag_19\n      jump\t// in\n    tag_141:\n        /* \"contracts/QuailFinance.sol\":10129:10215  if (!pot.hasWon[msg.sender]){... */\n      0x00\n      jump(tag_132)\n        /* \"contracts/QuailFinance.sol\":10038:10099  usdbToken.transferFrom(msg.sender, address(this), pot.amount) */\n    tag_129:\n      tag_142\n      swap2\n      pop\n      dup9\n      returndatasize\n      dup11\n      gt\n      tag_143\n      jumpi\n    tag_144:\n      tag_145\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_145:\n      dup2\n      add\n      swap1\n      tag_13\n      jump\t// in\n    tag_142:\n      0x00\n      jump(tag_130)\n    tag_143:\n      pop\n      returndatasize\n      jump(tag_144)\n    tag_126:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      returndatasize\n      dup12\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_117:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup7\n      swap1\n      mstore\n      0x35\n      0x24\n      dup3\n      add\n      mstore\n      0x596f75206861766520616c7265616479206a6f696e6564207468697320706f74\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x5a, 0x081a5b881d1a194818dd5c9c995b9d081c9bdd5b99)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_115:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n        /* \"contracts/QuailFinance.sol\":9443:9459  pot.participants */\n      0x0b\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xaa, 0x141bdd081a5cc8199d5b1b)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_112:\n      dup3\n      dup1\n      revert\n    tag_91:\n      pop\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2357:2358  _ */\n      tag_150\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      tag_151\n      tag_5\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2303:2365  modifier onlyOwner() {... */\n      tag_152\n      tag_30\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2357:2358  _ */\n      tag_28\n      jump\t// in\n    tag_150:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup1\n      return\n    tag_89:\n      pop\n      jumpi(tag_101, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_101\n      jumpi\n      0x20\n        /* \"contracts/QuailFinance.sol\":1118:1147  uint256 public potCreationFee */\n      0x06\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_87:\n      pop\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x80))\n      calldataload(0x04)\n      calldataload(0x24)\n      dup2\n      dup4\n      mstore\n      0x20\n        /* \"contracts/QuailFinance.sol\":11528:11532  pots */\n      0x0a\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      mstore\n      0x40\n      dup5\n      keccak256\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap4\n      dup5\n      dup7\n      sload\n      and\n      swap5\n      dup1\n      sload(0x01)\n      and\n        /* \"contracts/QuailFinance.sol\":11826:11844  pot.sequenceNumber */\n      swap2\n        /* \"contracts/QuailFinance.sol\":11528:11532  pots */\n      0x0a\n        /* \"contracts/QuailFinance.sol\":11826:11844  pot.sequenceNumber */\n      dup7\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap6\n      dup6\n      sub(shl(0x40, 0x01), 0x01)\n      swap5\n      0x84\n      dup7\n      dup11\n      sload\n      and\n      swap2\n      dup13\n      mload(0x40)\n      swap13\n      dup14\n      swap5\n      dup6\n      swap4\n      shl(0xe0, 0x9371df51)\n        /* \"contracts/QuailFinance.sol\":11794:11873  entropy.reveal(entropyProvider, pot.sequenceNumber, userRandom, providerRandom) */\n      dup6\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n        /* \"contracts/QuailFinance.sol\":11794:11873  entropy.reveal(entropyProvider, pot.sequenceNumber, userRandom, providerRandom) */\n      dup6\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n      0x24\n      dup5\n      add\n      mstore\n      calldataload(0x44)\n      0x44\n      dup5\n      add\n      mstore\n      calldataload(0x64)\n      0x64\n      dup5\n      add\n      mstore\n        /* \"contracts/QuailFinance.sol\":11794:11873  entropy.reveal(entropyProvider, pot.sequenceNumber, userRandom, providerRandom) */\n      gas\n      call\n      swap8\n      dup9\n      iszero\n      tag_126\n      jumpi\n      dup10\n      swap9\n      tag_161\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_162:\n        /* \"contracts/QuailFinance.sol\":11929:11945  pot.participants */\n      pop\n      0x0b\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap8\n      dup9\n      sload\n      swap1\n      dup2\n      iszero\n      tag_163\n      jumpi\n        /* \"contracts/QuailFinance.sol\":11979:12008  pot.participants[winnerIndex] */\n      tag_165\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup12\n      swap4\n      swap3\n      dup7\n      swap3\n      mod\n        /* \"contracts/QuailFinance.sol\":11979:12008  pot.participants[winnerIndex] */\n      dup12\n      tag_17\n      jump\t// in\n    tag_165:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      and\n        /* \"contracts/QuailFinance.sol\":12018:12029  pot.winners */\n      swap6\n        /* \"contracts/QuailFinance.sol\":12018:12042  pot.winners.push(winner) */\n      tag_166\n        /* \"contracts/QuailFinance.sol\":12018:12029  pot.winners */\n      dup8\n      0x0c\n      dup5\n      add\n        /* \"contracts/QuailFinance.sol\":12018:12042  pot.winners.push(winner) */\n      tag_19\n      jump\t// in\n    tag_166:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup3\n        /* \"contracts/QuailFinance.sol\":12180:12216  pot.participants.length * pot.amount */\n      tag_167\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup12\n      sload\n      0x01\n        /* \"contracts/QuailFinance.sol\":12206:12216  pot.amount */\n      dup6\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":12180:12216  pot.participants.length * pot.amount */\n      swap1\n      tag_23\n      jump\t// in\n    tag_167:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap3\n        /* \"contracts/QuailFinance.sol\":16380:16403  totalRevenue += revenue */\n      tag_168\n        /* \"contracts/QuailFinance.sol\":16353:16370  _amount - revenue */\n      tag_169\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x64\n      dup7\n      div\n        /* \"contracts/QuailFinance.sol\":16353:16370  _amount - revenue */\n      dup1\n      swap7\n      tag_20\n      jump\t// in\n    tag_169:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap5\n        /* \"contracts/QuailFinance.sol\":16380:16403  totalRevenue += revenue */\n      0x05\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":16380:16403  totalRevenue += revenue */\n      tag_10\n      jump\t// in\n    tag_168:\n      0x05\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n        /* \"contracts/QuailFinance.sol\":12365:12416  calculateRiskPoolBalance(_potId,amountAfterRevenue) */\n      tag_170\n      dup5\n      dup8\n      tag_24\n      jump\t// in\n    tag_170:\n        /* \"contracts/QuailFinance.sol\":12466:12488  pot.useRiskPoolBalance */\n      swap5\n      dup6\n      swap5\n        /* \"contracts/QuailFinance.sol\":12527:12593  (amountAfterRevenue-riskPoolBalance)+currentlyUsingRiskPoolBalance */\n      tag_171\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x03\n        /* \"contracts/QuailFinance.sol\":12466:12488  pot.useRiskPoolBalance */\n      dup5\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n        /* \"contracts/QuailFinance.sol\":12528:12562  amountAfterRevenue-riskPoolBalance */\n      tag_172\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup4\n      sload\n        /* \"contracts/QuailFinance.sol\":12528:12562  amountAfterRevenue-riskPoolBalance */\n      swap9\n      dup10\n      swap3\n      tag_20\n      jump\t// in\n    tag_172:\n        /* \"contracts/QuailFinance.sol\":12527:12593  (amountAfterRevenue-riskPoolBalance)+currentlyUsingRiskPoolBalance */\n      tag_10\n      jump\t// in\n    tag_171:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap7\n      dup12\n      0x00\n      mstore\n        /* \"contracts/QuailFinance.sol\":12603:12616  pot.amountWon */\n      0x0d\n      dup5\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup14\n      mstore\n      dup8\n      keccak256(0x00, 0x40)\n      sstore\n        /* \"contracts/QuailFinance.sol\":12655:12693  pot.riskPoolBalance += riskPoolBalance */\n      tag_173\n        /* \"contracts/QuailFinance.sol\":12655:12674  pot.riskPoolBalance */\n      0x02\n      dup6\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      dup3\n      sload\n        /* \"contracts/QuailFinance.sol\":12655:12693  pot.riskPoolBalance += riskPoolBalance */\n      tag_10\n      jump\t// in\n    tag_173:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap1\n      sstore\n      sstore\n      dup9\n      0x00\n      mstore\n        /* \"contracts/QuailFinance.sol\":12739:12749  pot.hasWon */\n      0x0e\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup11\n      mstore\n      keccak256(0x00, 0x40)\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/QuailFinance.sol\":12797:12812  block.timestamp */\n      timestamp\n        /* \"contracts/QuailFinance.sol\":16380:16403  totalRevenue += revenue */\n      0x05\n        /* \"contracts/QuailFinance.sol\":12774:12794  pot.lastRotationTime */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n      dup7\n      dup3\n      sload\n      and\n      swap7\n      sload(0x01)\n      and\n      swap7\n      mload(0x40)\n      swap1\n      shl(0xe3, 0x17119229)\n        /* \"contracts/QuailFinance.sol\":12836:12867  entropy.getFee(entropyProvider) */\n      dup3\n      mstore\n      dup9\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n        /* \"contracts/QuailFinance.sol\":12836:12867  entropy.getFee(entropyProvider) */\n      dup4\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n        /* \"contracts/QuailFinance.sol\":12836:12867  entropy.getFee(entropyProvider) */\n      dup12\n      dup3\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x24\n        /* \"contracts/QuailFinance.sol\":12836:12867  entropy.getFee(entropyProvider) */\n      dup2\n      dup5\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_174\n      jumpi\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x64\n        /* \"contracts/QuailFinance.sol\":12836:12867  entropy.getFee(entropyProvider) */\n      swap2\n      dup15\n      swap5\n      dup8\n      swap2\n      tag_176\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_177:\n      pop\n      and\n        /* \"contracts/QuailFinance.sol\":12885:12894  msg.value */\n      swap10\n        /* \"contracts/QuailFinance.sol\":12877:12922  require(msg.value == fee, \"Insufficient fee\") */\n      tag_178\n        /* \"contracts/QuailFinance.sol\":12885:12894  msg.value */\n      dup12\n      callvalue\n        /* \"contracts/QuailFinance.sol\":12885:12901  msg.value == fee */\n      eq\n        /* \"contracts/QuailFinance.sol\":12877:12922  require(msg.value == fee, \"Insufficient fee\") */\n      tag_11\n      jump\t// in\n    tag_178:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      swap11\n      dup12\n      swap4\n      dup5\n      swap3\n      shl(0xe0, 0x93cbf217)\n        /* \"contracts/QuailFinance.sol\":12956:13069  entropy.request{value: fee}(... */\n      dup5\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n        /* \"contracts/QuailFinance.sol\":12956:13069  entropy.request{value: fee}(... */\n      dup5\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n      dup9\n      0x24\n      dup5\n      add\n      mstore\n      dup8\n      0x44\n      dup5\n      add\n      mstore\n        /* \"contracts/QuailFinance.sol\":12956:13069  entropy.request{value: fee}(... */\n      gas\n      call\n      swap8\n      dup9\n      iszero\n      tag_179\n      jumpi\n        /* \"contracts/QuailFinance.sol\":13129:13260  RotationCompleted(_potId, winner, pot.currentRound, sequenceNumber,userCommitment,currentlyUsingRiskPoolBalance,totalWinningAmount) */\n      0x9ef3fbd1495a53d36401c5153be21a35a6214297031b5e106b12307835851d2f\n        /* \"contracts/QuailFinance.sol\":12956:13069  entropy.request{value: fee}(... */\n      swap9\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0xe0\n        /* \"contracts/QuailFinance.sol\":12956:13069  entropy.request{value: fee}(... */\n      swap9\n        /* \"contracts/QuailFinance.sol\":13163:13179  pot.currentRound */\n      0x09\n        /* \"contracts/QuailFinance.sol\":12956:13069  entropy.request{value: fee}(... */\n      swap5\n      swap2\n      tag_181\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_182:\n      pop\n      and\n      swap11\n      dup12\n      not(sub(shl(0x40, 0x01), 0x01))\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/QuailFinance.sol\":13163:13179  pot.currentRound */\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap9\n      dup10\n      sload\n      swap8\n      mload(0x40)\n      swap6\n      dup7\n      mstore\n      dup10\n      dup7\n      add\n      mstore\n      dup8\n      0x40\n      dup7\n      add\n      mstore\n      0x60\n      dup6\n      add\n      mstore\n      0x80\n      dup5\n      add\n      mstore\n      0xa0\n      dup4\n      add\n      mstore\n      0xc0\n      dup3\n      add\n      mstore\n        /* \"contracts/QuailFinance.sol\":13129:13260  RotationCompleted(_potId, winner, pot.currentRound, sequenceNumber,userCommitment,currentlyUsingRiskPoolBalance,totalWinningAmount) */\n      log1\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup4\n      sload\n        /* \"contracts/QuailFinance.sol\":13338:13365  pot.participants.length > 0 */\n      swap3\n      dup4\n      iszero\n      iszero\n        /* \"contracts/QuailFinance.sol\":13334:13410  if (pot.participants.length > 0) {... */\n      swap2\n      dup3\n      tag_183\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_184:\n      pop\n      pop\n      dup5\n      dup5\n      sstore\n      tag_185\n      jumpi\n      dup4\n      dup1\n      return\n    tag_185:\n      tag_187\n      swap3\n      dup5\n      mstore\n      dup4\n      keccak256\n      swap1\n      dup2\n      add\n      swap1\n      tag_16\n      jump\t// in\n    tag_187:\n      0x00\n      dup1\n      dup1\n      dup4\n      dup1\n      return\n        /* \"contracts/QuailFinance.sol\":13334:13410  if (pot.participants.length > 0) {... */\n    tag_183:\n        /* \"contracts/QuailFinance.sol\":13381:13399  pot.currentRound++ */\n      tag_188\n      swap1\n      tag_12\n      jump\t// in\n    tag_188:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap1\n      sstore\n        /* \"contracts/QuailFinance.sol\":13334:13410  if (pot.participants.length > 0) {... */\n      0x00\n      dup1\n      jump(tag_184)\n        /* \"contracts/QuailFinance.sol\":12956:13069  entropy.request{value: fee}(... */\n    tag_181:\n      tag_189\n      swap2\n      pop\n      dup13\n      dup14\n      returndatasize\n      lt\n      tag_190\n      jumpi\n    tag_191:\n      tag_192\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_192:\n      dup2\n      add\n      swap1\n      tag_15\n      jump\t// in\n    tag_189:\n      0x00\n      jump(tag_182)\n    tag_190:\n      pop\n      returndatasize\n      jump(tag_191)\n    tag_179:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      returndatasize\n      dup5\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/QuailFinance.sol\":12836:12867  entropy.getFee(entropyProvider) */\n    tag_176:\n      tag_193\n      swap2\n      pop\n      dup6\n      returndatasize\n      dup8\n      gt\n      tag_194\n      jumpi\n    tag_195:\n      tag_196\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_196:\n      dup2\n      add\n      swap1\n      tag_9\n      jump\t// in\n    tag_193:\n      0x00\n      jump(tag_177)\n    tag_194:\n      pop\n      returndatasize\n      jump(tag_195)\n    tag_174:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      returndatasize\n      dup7\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_163:\n      shl(0xe0, 0x4e487b71)\n      dup12\n      mstore\n      mstore(0x04, 0x12)\n      0x24\n      dup12\n      revert\n        /* \"contracts/QuailFinance.sol\":11794:11873  entropy.reveal(entropyProvider, pot.sequenceNumber, userRandom, providerRandom) */\n    tag_161:\n      swap1\n      swap8\n      pop\n      dup6\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_197\n      jumpi\n    tag_198:\n      tag_199\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_199:\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sub\n      slt\n      tag_200\n      jumpi\n      mload\n        /* \"contracts/QuailFinance.sol\":11794:11873  entropy.reveal(entropyProvider, pot.sequenceNumber, userRandom, providerRandom) */\n      swap7\n      0x00\n      jump(tag_162)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_200:\n      dup9\n      dup1\n      revert\n        /* \"contracts/QuailFinance.sol\":11794:11873  entropy.reveal(entropyProvider, pot.sequenceNumber, userRandom, providerRandom) */\n    tag_197:\n      pop\n      returndatasize\n      jump(tag_198)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_85:\n      pop\n      jumpi(tag_224, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_224\n      jumpi\n      tag_206\n      tag_5\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8837:8901  assembly {... */\n      swap1\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      dup3\n      sload\n      swap1\n      0xff\n      dup3\n      0x40\n      shr\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      swap1\n      dup2\n      tag_207\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      swap1\n      dup2\n      tag_209\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      swap1\n      dup2\n      tag_211\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      pop\n      tag_213\n      jumpi\n      not(0xffffffffffffffff)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      or\n      dup6\n      sstore\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      tag_215\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6893:6969  modifier onlyInitializing() {... */\n      pop\n      tag_217\n      tag_33\n      jump\t// in\n    tag_217:\n      tag_218\n      tag_33\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6961:6962  _ */\n      tag_219\n        /* \"contracts/QuailFinance.sol\":4866:4876  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6961:6962  _ */\n      tag_28\n      jump\t// in\n    tag_219:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      shl(0xe0, 0x1a33757d)\n        /* \"contracts/QuailFinance.sol\":4887:4922  USDB.configure(YieldMode.CLAIMABLE) */\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":4902:4921  YieldMode.CLAIMABLE */\n      0x02\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n        /* \"contracts/QuailFinance.sol\":4887:4922  USDB.configure(YieldMode.CLAIMABLE) */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n      add(shl(0x99, 0x21), 0x22)\n        /* \"contracts/QuailFinance.sol\":4630:4672  0x4200000000000000000000000000000000000022 */\n      swap1\n        /* \"contracts/QuailFinance.sol\":4887:4922  USDB.configure(YieldMode.CLAIMABLE) */\n      dup5\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      0x24\n      dup2\n      0x00\n        /* \"contracts/QuailFinance.sol\":4630:4672  0x4200000000000000000000000000000000000022 */\n      dup7\n        /* \"contracts/QuailFinance.sol\":4887:4922  USDB.configure(YieldMode.CLAIMABLE) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_226\n      jumpi\n      dup6\n      swap2\n      tag_222\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_223:\n      pop\n      pop\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      swap1\n      dup1\n      dup3\n        /* \"contracts/QuailFinance.sol\":4969:5031  usdbToken = IERC20(0x4200000000000000000000000000000000000022) */\n      0x08\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      and\n      or\n        /* \"contracts/QuailFinance.sol\":4969:5031  usdbToken = IERC20(0x4200000000000000000000000000000000000022) */\n      0x08\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n        /* \"contracts/QuailFinance.sol\":5041:5070  BLAST.configureClaimableGas() */\n      dup1\n      extcodesize\n      iszero\n      tag_224\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n      dup1\n      swap2\n      0x04\n      mload(0x40)\n      dup1\n      swap5\n      dup2\n      swap4\n      shl(0xe0, 0x4e606c47)\n        /* \"contracts/QuailFinance.sol\":5041:5070  BLAST.configureClaimableGas() */\n      dup4\n      mstore\n      gas\n      call\n      dup1\n      iszero\n      tag_226\n      jumpi\n      tag_228\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_229:\n        /* \"contracts/QuailFinance.sol\":5157:5199  0x2fc95838c71e76ec69ff817983BFf17c710F34E0 */\n      pop\n      0x2fc95838c71e76ec69ff817983bff17c710f34e0\n        /* \"contracts/QuailFinance.sol\":5144:5268  IBlastPoints(0x2fc95838c71e76ec69ff817983BFf17c710F34E0).configurePointsOperator(0xE4860D3973802C7C42450D7b9741921C7711D039) */\n      swap2\n      dup3\n      extcodesize\n      iszero\n      tag_239\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup7\n      mload(0x40)\n      shl(0xe0, 0x36b91f2b)\n        /* \"contracts/QuailFinance.sol\":5144:5268  IBlastPoints(0x2fc95838c71e76ec69ff817983BFf17c710F34E0).configurePointsOperator(0xE4860D3973802C7C42450D7b9741921C7711D039) */\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":5225:5267  0xE4860D3973802C7C42450D7b9741921C7711D039 */\n      dup2\n      dup2\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x24\n        /* \"contracts/QuailFinance.sol\":5225:5267  0xE4860D3973802C7C42450D7b9741921C7711D039 */\n      dup2\n      dup4\n      0xe4860d3973802c7c42450d7b9741921c7711d039\n        /* \"contracts/QuailFinance.sol\":5144:5268  IBlastPoints(0x2fc95838c71e76ec69ff817983BFf17c710F34E0).configurePointsOperator(0xE4860D3973802C7C42450D7b9741921C7711D039) */\n      swap10\n      dup11\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n        /* \"contracts/QuailFinance.sol\":5144:5268  IBlastPoints(0x2fc95838c71e76ec69ff817983BFf17c710F34E0).configurePointsOperator(0xE4860D3973802C7C42450D7b9741921C7711D039) */\n      dup5\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n        /* \"contracts/QuailFinance.sol\":5144:5268  IBlastPoints(0x2fc95838c71e76ec69ff817983BFf17c710F34E0).configurePointsOperator(0xE4860D3973802C7C42450D7b9741921C7711D039) */\n      gas\n      call\n      dup1\n      iszero\n      tag_179\n      jumpi\n      tag_234\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_235:\n      pop\n      pop\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      dup2\n      dup8\n      sload\n      and\n      or\n      dup7\n      sstore\n        /* \"contracts/QuailFinance.sol\":5493:5535  0x6CC14824Ea2918f5De5C2f75A9Da968ad4BD6344 */\n      0x6cc14824ea2918f5de5c2f75a9da968ad4bd6344\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      and\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n        /* \"contracts/QuailFinance.sol\":4902:4921  YieldMode.CLAIMABLE */\n      0x02\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      and\n      or\n        /* \"contracts/QuailFinance.sol\":4902:4921  YieldMode.CLAIMABLE */\n      0x02\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n        /* \"contracts/QuailFinance.sol\":5622:5638  1000000000000000 */\n      0x038d7ea4c68000\n        /* \"contracts/QuailFinance.sol\":5605:5638  potCreationFee = 1000000000000000 */\n      0x06\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      tag_236\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup3\n      dup1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      not(0xff0000000000000000)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      0x00\n      dup1\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup3\n      dup1\n      return\n        /* \"contracts/QuailFinance.sol\":5144:5268  IBlastPoints(0x2fc95838c71e76ec69ff817983BFf17c710F34E0).configurePointsOperator(0xE4860D3973802C7C42450D7b9741921C7711D039) */\n    tag_234:\n      tag_238\n      swap1\n      tag_1\n      jump\t// in\n    tag_238:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      tag_239\n      jumpi\n        /* \"contracts/QuailFinance.sol\":5144:5268  IBlastPoints(0x2fc95838c71e76ec69ff817983BFf17c710F34E0).configurePointsOperator(0xE4860D3973802C7C42450D7b9741921C7711D039) */\n      dup7\n      0x00\n      jump(tag_235)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_239:\n      dup7\n      dup1\n      revert\n        /* \"contracts/QuailFinance.sol\":5041:5070  BLAST.configureClaimableGas() */\n    tag_228:\n      tag_241\n      swap2\n      swap7\n      pop\n      tag_1\n      jump\t// in\n    tag_241:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"contracts/QuailFinance.sol\":5041:5070  BLAST.configureClaimableGas() */\n      swap5\n      0x00\n      jump(tag_229)\n    tag_226:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/QuailFinance.sol\":5041:5070  BLAST.configureClaimableGas() */\n    tag_224:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n      dup1\n      revert\n        /* \"contracts/QuailFinance.sol\":4887:4922  USDB.configure(YieldMode.CLAIMABLE) */\n    tag_222:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_242\n      jumpi\n    tag_243:\n      tag_244\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_244:\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sub\n      slt\n      tag_224\n      jumpi\n        /* \"contracts/QuailFinance.sol\":4887:4922  USDB.configure(YieldMode.CLAIMABLE) */\n      dup4\n      0x00\n      jump(tag_223)\n    tag_242:\n      pop\n      returndatasize\n      jump(tag_243)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_215:\n      not(0xffffffffffffffffff)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      and\n      0x010000000000000001\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      0x00\n      jump(tag_216)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_213:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      swap1\n      pop\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      0x00\n      jump(tag_212)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      jump(tag_210)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_207:\n      dup5\n      swap2\n      pop\n      jump(tag_208)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_83:\n      jumpi(tag_224, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_224\n      jumpi\n      mstore(0x00, calldataload(0x04))\n        /* \"contracts/QuailFinance.sol\":1296:1331  mapping(uint256 => Pot) public pots */\n      0x0a\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      mload(0x40)\n      swap1\n      0x00\n      swap3\n      dup1\n      sload\n      tag_251\n      dup2\n      tag_7\n      jump\t// in\n    tag_251:\n      dup1\n      dup6\n      mstore\n      swap1\n      0x01\n      swap1\n      dup2\n      dup2\n      and\n      swap1\n      dup2\n      iszero\n      tag_252\n      jumpi\n      pop\n      0x01\n      eq\n      tag_254\n      jumpi\n    tag_255:\n      pop\n      pop\n      tag_256\n      dup4\n      tag_257\n      swap6\n      sub\n      dup5\n      tag_3\n      jump\t// in\n    tag_256:\n      0x01\n        /* \"contracts/QuailFinance.sol\":1296:1331  mapping(uint256 => Pot) public pots */\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":1296:1331  mapping(uint256 => Pot) public pots */\n      swap1\n      0x02\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":1296:1331  mapping(uint256 => Pot) public pots */\n      0x03\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      0x04\n        /* \"contracts/QuailFinance.sol\":1296:1331  mapping(uint256 => Pot) public pots */\n      dup4\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":1296:1331  mapping(uint256 => Pot) public pots */\n      0x05\n      dup5\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":1296:1331  mapping(uint256 => Pot) public pots */\n      0x06\n      dup6\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":1296:1331  mapping(uint256 => Pot) public pots */\n      swap2\n      0x07\n      dup7\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":1296:1331  mapping(uint256 => Pot) public pots */\n      swap4\n      0x08\n      dup8\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":1296:1331  mapping(uint256 => Pot) public pots */\n      swap6\n      0x0a\n      0x09\n      dup10\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":1296:1331  mapping(uint256 => Pot) public pots */\n      swap9\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      swap9\n      mload(0x40)\n      swap13\n      dup14\n      swap13\n      dup14\n      0x0180\n      swap1\n      dup2\n      dup2\n      mstore\n      add\n      swap1\n      tag_8\n      jump\t// in\n    tag_257:\n      swap11\n      dup13\n      add\n      mstore\n      0x40\n      dup12\n      add\n      mstore\n      0x60\n      dup11\n      add\n      mstore\n      0x80\n      dup10\n      add\n      mstore\n      0xa0\n      dup9\n      add\n      mstore\n      0xc0\n      dup8\n      add\n      mstore\n      0xe0\n      dup7\n      add\n      mstore\n      0x0100\n      dup6\n      add\n      mstore\n      0x0120\n      dup5\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      and\n      0x0140\n      dup5\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      0x40\n      shr\n      and\n      0x0160\n      dup4\n      add\n      mstore\n      sub\n      swap1\n      return\n    tag_254:\n      0x00\n      dup4\n      dup2\n      mstore\n      dup5\n      dup2\n      keccak256\n      swap1\n      swap7\n      pop\n    tag_258:\n      dup3\n      dup8\n      lt\n      tag_259\n      jumpi\n      pop\n      pop\n      pop\n      swap3\n      dup3\n      add\n      dup2\n      add\n      swap3\n      tag_256\n      dup4\n      jump(tag_255)\n    tag_259:\n      dup1\n      sload\n      dup7\n      dup9\n      add\n      dup7\n      add\n      mstore\n      swap6\n      dup5\n      add\n      swap6\n      dup2\n      add\n      jump(tag_258)\n    tag_252:\n      not(0xff)\n      and\n      dup6\n      dup8\n      add\n      mstore\n      pop\n      pop\n      iszero\n      iszero\n      0x05\n      shl\n      dup4\n      add\n      dup3\n      add\n      swap4\n      pop\n      tag_256\n      dup4\n      jump(tag_255)\n    tag_81:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/QuailFinance.sol\":1085:1112  uint256 public totalRevenue */\n      0x05\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_79:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2303:2365  modifier onlyOwner() {... */\n      tag_271\n      tag_30\n      jump\t// in\n    tag_271:\n        /* \"contracts/QuailFinance.sol\":16595:16971  if (_isUsdb){... */\n      iszero\n      tag_272\n      jumpi\n        /* \"contracts/QuailFinance.sol\":16645:16657  totalRevenue */\n      0x05\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":16679:16696  revenueAmount > 0 */\n      dup1\n      iszero\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      tag_274\n      jumpi\n      0x00\n        /* \"contracts/QuailFinance.sol\":16645:16657  totalRevenue */\n      0x05\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/QuailFinance.sol\":16805:16814  usdbToken */\n      0x08\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/QuailFinance.sol\":16805:16850  usdbToken.transfer(msg.sender, revenueAmount) */\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":16824:16834  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n        /* \"contracts/QuailFinance.sol\":16805:16850  usdbToken.transfer(msg.sender, revenueAmount) */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n      0x24\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x20\n      swap2\n      dup4\n      swap2\n      0x44\n      swap2\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/QuailFinance.sol\":16805:16850  usdbToken.transfer(msg.sender, revenueAmount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/QuailFinance.sol\":16797:16870  require(usdbToken.transfer(msg.sender, revenueAmount), \"Transfer failed\") */\n      tag_279\n        /* \"contracts/QuailFinance.sol\":16805:16850  usdbToken.transfer(msg.sender, revenueAmount) */\n      swap2\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"contracts/QuailFinance.sol\":16805:16850  usdbToken.transfer(msg.sender, revenueAmount) */\n      swap2\n      tag_280\n      jumpi\n        /* \"contracts/QuailFinance.sol\":16797:16870  require(usdbToken.transfer(msg.sender, revenueAmount), \"Transfer failed\") */\n      pop\n      tag_27\n      jump\t// in\n    tag_279:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      stop\n        /* \"contracts/QuailFinance.sol\":16805:16850  usdbToken.transfer(msg.sender, revenueAmount) */\n    tag_280:\n      tag_283\n      swap2\n      pop\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n        /* \"contracts/QuailFinance.sol\":16805:16850  usdbToken.transfer(msg.sender, revenueAmount) */\n      returndatasize\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n        /* \"contracts/QuailFinance.sol\":16805:16850  usdbToken.transfer(msg.sender, revenueAmount) */\n      gt\n      tag_143\n      jumpi\n      tag_145\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_283:\n      dup3\n      jump(tag_130)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_274:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x50, 0x4e6f20726576656e756520746f207769746864726177)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/QuailFinance.sol\":16595:16971  if (_isUsdb){... */\n    tag_272:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"contracts/QuailFinance.sol\":16938:16959  address(this).balance */\n      dup1\n      dup1\n      dup1\n      selfbalance\n        /* \"contracts/QuailFinance.sol\":16909:16960  payable(msg.sender).transfer(address(this).balance) */\n      dup2\n      dup2\n      iszero\n      tag_287\n      jumpi\n        /* \"contracts/QuailFinance.sol\":16595:16971  if (_isUsdb){... */\n    tag_288:\n        /* \"contracts/QuailFinance.sol\":16917:16927  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":16909:16960  payable(msg.sender).transfer(address(this).balance) */\n      swap1\n      call\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      stop\n        /* \"contracts/QuailFinance.sol\":16909:16960  payable(msg.sender).transfer(address(this).balance) */\n    tag_287:\n      pop\n      0x08fc\n      jump(tag_288)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_77:\n      jumpi(tag_224, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_224\n      jumpi\n      calldataload(0x04)\n      swap1\n      dup2\n      0x00\n      mstore\n        /* \"contracts/QuailFinance.sol\":15499:15503  pots */\n      0x0a\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":15529:15542  pot.amountWon */\n      0x0d\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/QuailFinance.sol\":15529:15542  pot.amountWon */\n      add\n        /* \"contracts/QuailFinance.sol\":15543:15553  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n      mstore\n      dup1\n      dup3\n      mstore\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/QuailFinance.sol\":15529:15558  pot.amountWon[msg.sender] > 0 */\n      iszero\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      tag_295\n      jumpi\n        /* \"contracts/QuailFinance.sol\":15543:15553  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      swap2\n      dup4\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      dup1\n      sload\n      swap1\n      dup5\n      swap1\n      sstore\n        /* \"contracts/QuailFinance.sol\":15794:15803  usdbToken */\n      0x08\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      swap2\n      mload\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/QuailFinance.sol\":15794:15839  usdbToken.transfer(msg.sender, amountToClaim) */\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n        /* \"contracts/QuailFinance.sol\":15794:15839  usdbToken.transfer(msg.sender, amountToClaim) */\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap4\n      swap1\n      swap4\n      mstore\n      0x24\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      swap5\n      swap3\n      dup5\n      swap2\n      dup7\n      swap2\n      0x44\n      swap2\n      dup4\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/QuailFinance.sol\":15794:15839  usdbToken.transfer(msg.sender, amountToClaim) */\n      gas\n      call\n      swap3\n      dup4\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/QuailFinance.sol\":15786:15859  require(usdbToken.transfer(msg.sender, amountToClaim), \"Transfer failed\") */\n      tag_300\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x60\n        /* \"contracts/QuailFinance.sol\":15794:15839  usdbToken.transfer(msg.sender, amountToClaim) */\n      swap5\n        /* \"contracts/QuailFinance.sol\":15874:15920  RewardClaimed(_potId,msg.sender,amountToClaim) */\n      0x24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb7\n        /* \"contracts/QuailFinance.sol\":15794:15839  usdbToken.transfer(msg.sender, amountToClaim) */\n      swap7\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"contracts/QuailFinance.sol\":15794:15839  usdbToken.transfer(msg.sender, amountToClaim) */\n      swap2\n      tag_301\n      jumpi\n        /* \"contracts/QuailFinance.sol\":15786:15859  require(usdbToken.transfer(msg.sender, amountToClaim), \"Transfer failed\") */\n      pop\n      tag_27\n      jump\t// in\n    tag_300:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      swap3\n      dup4\n      mstore\n        /* \"contracts/QuailFinance.sol\":15543:15553  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap1\n      dup4\n      add\n      mstore\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/QuailFinance.sol\":15874:15920  RewardClaimed(_potId,msg.sender,amountToClaim) */\n      log1\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      stop\n        /* \"contracts/QuailFinance.sol\":15794:15839  usdbToken.transfer(msg.sender, amountToClaim) */\n    tag_301:\n      tag_303\n      swap2\n      pop\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_143\n      jumpi\n      tag_145\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_303:\n      dup8\n      jump(tag_130)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_295:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x70, 0x4e6f2072657761726420746f20636c61696d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_75:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      add(shl(0x99, 0x21), 0x22)\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_73:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x20))\n      tag_315\n      tag_5\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2303:2365  modifier onlyOwner() {... */\n      tag_316\n      tag_30\n      jump\t// in\n    tag_316:\n        /* \"contracts/QuailFinance.sol\":17553:17569  admin = newAdmin */\n      0x02\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      stop\n    tag_71:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x00))\n      0x00\n      dup1\n      mload\n      0x20\n      data_47f5c767712c0cb55e0943de27dbb2db3b8bdac1e899af22d477462089a99558\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_69:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2303:2365  modifier onlyOwner() {... */\n      tag_325\n      tag_30\n      jump\t// in\n    tag_325:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      calldataload(0x04)\n        /* \"contracts/QuailFinance.sol\":17657:17681  potCreationFee = _amount */\n      0x06\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n      stop\n    tag_67:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x80))\n      calldataload(0x24)\n      calldataload(0x04)\n      calldataload(0x44)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_224\n      jumpi\n      tag_332\n        /* \"contracts/QuailFinance.sol\":14268:14358  require(admin == ethSignedMessageHash.recover(signature), \"Signature verification failed\") */\n      tag_333\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_6\n      jump\t// in\n    tag_332:\n      dup3\n      0x00\n      mstore\n        /* \"contracts/QuailFinance.sol\":14074:14078  pots */\n      0x0a\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n      mstore\n        /* \"contracts/QuailFinance.sol\":14222:14258  getEthSignedMessageHash(messageHash) */\n      tag_334\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      keccak256(0x00, 0x40)\n      swap4\n      mload(0x40)\n        /* \"contracts/QuailFinance.sol\":14128:14180  abi.encodePacked(_potId, msg.sender, _amount, nonce) */\n      tag_122\n      dup2\n      tag_123\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n        /* \"contracts/QuailFinance.sol\":14128:14180  abi.encodePacked(_potId, msg.sender, _amount, nonce) */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap5\n      dup11\n      calldataload(0x64)\n        /* \"contracts/QuailFinance.sol\":14153:14163  msg.sender */\n      swap2\n      caller\n        /* \"contracts/QuailFinance.sol\":14128:14180  abi.encodePacked(_potId, msg.sender, _amount, nonce) */\n      swap1\n      dup9\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap3\n      swap1\n      swap2\n      0x74\n      swap5\n      swap3\n      dup5\n      mstore\n      not(0xffffffffffffffffffffffff)\n      swap1\n      0x60\n      shl\n      and\n      0x20\n      dup5\n      add\n      mstore\n      0x34\n      dup4\n      add\n      mstore\n      0x54\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n        /* \"contracts/QuailFinance.sol\":14222:14258  getEthSignedMessageHash(messageHash) */\n    tag_334:\n        /* \"contracts/QuailFinance.sol\":14276:14281  admin */\n      0x02\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap3\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3915:3923  errorArg */\n      tag_124\n      swap2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3859:3886  tryRecover(hash, signature) */\n      tag_120\n      swap2\n      tag_31\n      jump\t// in\n        /* \"contracts/QuailFinance.sol\":14268:14358  require(admin == ethSignedMessageHash.recover(signature), \"Signature verification failed\") */\n    tag_333:\n        /* \"contracts/QuailFinance.sol\":14276:14281  admin */\n      0x02\n        /* \"contracts/QuailFinance.sol\":14376:14395  pot.riskPoolBalance */\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      dup3\n      sload\n        /* \"contracts/QuailFinance.sol\":14376:14406  pot.riskPoolBalance >= _amount */\n      dup2\n      dup2\n      lt\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      tag_339\n      jumpi\n        /* \"contracts/QuailFinance.sol\":14477:14499  pot.useRiskPoolBalance */\n      dup2\n      0x03\n        /* \"contracts/QuailFinance.sol\":14519:14550  pot.riskPoolBalance  -= _amount */\n      tag_341\n        /* \"contracts/QuailFinance.sol\":14477:14499  pot.useRiskPoolBalance */\n      swap5\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n        /* \"contracts/QuailFinance.sol\":14519:14550  pot.riskPoolBalance  -= _amount */\n      tag_20\n      jump\t// in\n    tag_341:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap1\n      sstore\n      stop\n    tag_339:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x38\n      0x24\n      dup3\n      add\n      mstore\n      0x616d6f756e742073686f756c64206265206c657373207468616e206f72206571\n      0x44\n      dup3\n      add\n      mstore\n      0x75616c20746f207269736b20706f6f6c2062616c616e63650000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_65:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x40))\n      0x20\n      tag_103\n      calldataload(0x24)\n      calldataload(0x04)\n      tag_24\n      jump\t// in\n    tag_63:\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2303:2365  modifier onlyOwner() {... */\n      tag_349\n      tag_30\n      jump\t// in\n    tag_349:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      calldataload(0x04)\n        /* \"contracts/QuailFinance.sol\":17357:17381  merkleRoot = _merkleRoot */\n      0x03\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n        /* \"contracts/QuailFinance.sol\":17391:17428  payable(msg.sender).transfer(_amount) */\n      dup1\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"contracts/QuailFinance.sol\":17391:17428  payable(msg.sender).transfer(_amount) */\n      dup2\n      iszero\n      tag_350\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_351:\n      0x00\n        /* \"contracts/QuailFinance.sol\":17399:17409  msg.sender */\n      dup1\n      dup1\n      swap4\n      dup2\n      swap4\n      caller\n        /* \"contracts/QuailFinance.sol\":17391:17428  payable(msg.sender).transfer(_amount) */\n      swap1\n      call\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/QuailFinance.sol\":17438:17467  totalYielDeposited += _amount */\n      tag_354\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap1\n        /* \"contracts/QuailFinance.sol\":17438:17467  totalYielDeposited += _amount */\n      0x07\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":17438:17467  totalYielDeposited += _amount */\n      tag_10\n      jump\t// in\n    tag_354:\n      0x07\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n      stop\n        /* \"contracts/QuailFinance.sol\":17391:17428  payable(msg.sender).transfer(_amount) */\n    tag_350:\n      pop\n      0x08fc\n      jump(tag_351)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_61:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2303:2365  modifier onlyOwner() {... */\n      tag_359\n      tag_30\n      jump\t// in\n    tag_359:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      shl(0xe1, 0x4aa7d2f7)\n        /* \"contracts/QuailFinance.sol\":17071:17115  BLAST.claimAllGas(address(this), msg.sender) */\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":17097:17101  this */\n      address\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n        /* \"contracts/QuailFinance.sol\":17071:17115  BLAST.claimAllGas(address(this), msg.sender) */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n        /* \"contracts/QuailFinance.sol\":17104:17114  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x24\n      dup3\n      add\n      mstore\n        /* \"contracts/QuailFinance.sol\":17071:17115  BLAST.claimAllGas(address(this), msg.sender) */\n      0x20\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      0x44\n      dup2\n      0x00\n      add(shl(0x99, 0x21), 0x22)\n        /* \"contracts/QuailFinance.sol\":17071:17115  BLAST.claimAllGas(address(this), msg.sender) */\n      gas\n      call\n      dup1\n      iszero\n      tag_226\n      jumpi\n      tag_362\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      stop\n        /* \"contracts/QuailFinance.sol\":17071:17115  BLAST.claimAllGas(address(this), msg.sender) */\n    tag_362:\n      0x20\n      swap1\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_364\n      jumpi\n    tag_365:\n      tag_366\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_366:\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sub\n      slt\n      tag_224\n      jumpi\n      stop\n        /* \"contracts/QuailFinance.sol\":17071:17115  BLAST.claimAllGas(address(this), msg.sender) */\n    tag_364:\n      pop\n      returndatasize\n      jump(tag_365)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_59:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_373\n      tag_5\n      jump\t// in\n    tag_373:\n      and\n      0x00\n      mstore\n        /* \"contracts/QuailFinance.sol\":1245:1290  mapping(address => uint256) public hasClaimed */\n      0x09\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n      mstore\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_57:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2303:2365  modifier onlyOwner() {... */\n      tag_378\n      tag_30\n      jump\t// in\n    tag_378:\n      0x00\n      dup1\n      mload\n      0x20\n      data_47f5c767712c0cb55e0943de27dbb2db3b8bdac1e899af22d477462089a99558\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      stop\n    tag_55:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x40))\n      0x24\n      sub(shl(0x40, 0x01), 0x01)\n      calldataload(0x04)\n      dup3\n      calldataload\n      dup3\n      dup2\n      gt\n      tag_224\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_224\n      jumpi\n      dup1\n      0x04\n      add\n      calldataload\n      swap3\n      dup4\n      gt\n      tag_224\n      jumpi\n      0x05\n      dup4\n      0x05\n      shl\n      swap5\n      dup1\n      dup7\n      dup5\n      add\n      add\n      swap3\n      calldatasize\n      dup5\n      gt\n      tag_224\n      jumpi\n      mload(0x40)\n      swap4\n      0x20\n        /* \"contracts/QuailFinance.sol\":17846:17887  abi.encodePacked(msg.sender, claimAmount) */\n      swap5\n      dup6\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":17863:17873  msg.sender */\n      swap1\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x60\n      shl\n      dup3\n      mstore\n      dup8\n      0x34\n      dup3\n      add\n      mstore\n      0x34\n        /* \"contracts/QuailFinance.sol\":17846:17887  abi.encodePacked(msg.sender, claimAmount) */\n      dup2\n      mstore\n      tag_391\n      dup2\n      tag_2\n      jump\t// in\n    tag_391:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload\n        /* \"contracts/QuailFinance.sol\":17836:17888  keccak256(abi.encodePacked(msg.sender, claimAmount)) */\n      swap1\n      keccak256\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n        /* \"contracts/QuailFinance.sol\":17938:17948  merkleRoot */\n      0x03\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      swap8\n      tag_392\n      dup8\n      mload(0x40)\n      swap12\n      add\n      dup12\n      tag_3\n      jump\t// in\n    tag_392:\n      dup10\n      mstore\n      dup4\n      add\n      dup6\n      dup1\n      dup11\n      add\n    tag_393:\n      dup4\n      dup4\n      lt\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2069:2096  bytes32 computedHash = leaf */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2111:2124  uint256 i = 0 */\n      swap4\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2106:2222  for (uint256 i = 0; i < proof.length; i++) {... */\n      swap5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2144:2147  i++ */\n    tag_396:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup8\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2126:2142  i < proof.length */\n      dup7\n      lt\n      iszero\n      tag_397\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup6\n      dup5\n      shl\n      dup9\n      add\n      dup6\n      add\n      mload\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":9318:9323  a < b */\n      dup2\n      dup2\n      lt\n      iszero\n      tag_399\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":9632:9751  assembly {... */\n      mstore\n      dup5\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x01\n      0x40\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":9632:9751  assembly {... */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":9318:9369  a < b ? _efficientHash(a, b) : _efficientHash(b, a) */\n    tag_401:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2144:2147  i++ */\n      swap6\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2111:2124  uint256 i = 0 */\n      swap5\n      jump(tag_396)\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":9318:9369  a < b ? _efficientHash(a, b) : _efficientHash(b, a) */\n    tag_399:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":9632:9751  assembly {... */\n      swap1\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":9632:9751  assembly {... */\n      mstore\n      dup5\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x01\n      0x40\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":9632:9751  assembly {... */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":9318:9369  a < b ? _efficientHash(a, b) : _efficientHash(b, a) */\n      jump(tag_401)\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2126:2142  i < proof.length */\n    tag_397:\n      swap1\n      dup7\n      dup6\n      swap3\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1379:1412  processProof(proof, leaf) == root */\n      sub\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      tag_402\n      jumpi\n        /* \"contracts/QuailFinance.sol\":17863:17873  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n      mstore\n        /* \"contracts/QuailFinance.sol\":18009:18019  hasClaimed */\n      0x09\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup3\n      mstore\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/QuailFinance.sol\":18049:18077  alreadyClaimed < claimAmount */\n      dup2\n      dup2\n      lt\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      iszero\n      tag_404\n      jumpi\n        /* \"contracts/QuailFinance.sol\":18160:18188  claimAmount - alreadyClaimed */\n      tag_406\n      swap1\n      dup3\n      tag_20\n      jump\t// in\n    tag_406:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap1\n      dup2\n        /* \"contracts/QuailFinance.sol\":18206:18224  totalYielDeposited */\n      0x07\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":18206:18243  totalYielDeposited >= claimableAmount */\n      lt\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      tag_407\n      jumpi\n        /* \"contracts/QuailFinance.sol\":18464:18511  usdbToken.transfer(msg.sender, claimableAmount) */\n      tag_409\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"contracts/QuailFinance.sol\":17863:17873  msg.sender */\n      swap3\n      dup5\n      swap3\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup6\n      mstore\n        /* \"contracts/QuailFinance.sol\":18009:18019  hasClaimed */\n      0x09\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup5\n      mstore\n      0x40\n      dup6\n      keccak256\n      sstore\n        /* \"contracts/QuailFinance.sol\":18362:18399  totalYielDeposited -= claimableAmount */\n      tag_410\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n        /* \"contracts/QuailFinance.sol\":18206:18224  totalYielDeposited */\n      0x07\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":18362:18399  totalYielDeposited -= claimableAmount */\n      tag_20\n      jump\t// in\n    tag_410:\n        /* \"contracts/QuailFinance.sol\":18206:18224  totalYielDeposited */\n      0x07\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n        /* \"contracts/QuailFinance.sol\":18464:18473  usdbToken */\n      0x08\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/QuailFinance.sol\":18464:18511  usdbToken.transfer(msg.sender, claimableAmount) */\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":17863:17873  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n        /* \"contracts/QuailFinance.sol\":18464:18511  usdbToken.transfer(msg.sender, claimableAmount) */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n      0x24\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      swap1\n      swap4\n      dup5\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      dup4\n      swap2\n      swap1\n      dup3\n      swap1\n      0x44\n      dup3\n      add\n      swap1\n      jump\n        /* \"contracts/QuailFinance.sol\":18464:18511  usdbToken.transfer(msg.sender, claimableAmount) */\n    tag_409:\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"contracts/QuailFinance.sol\":18464:18511  usdbToken.transfer(msg.sender, claimableAmount) */\n      swap2\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2106:2222  for (uint256 i = 0; i < proof.length; i++) {... */\n    tag_414:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      pop\n      iszero\n      tag_415\n      jumpi\n      stop\n    tag_415:\n      0x15\n      0x64\n      swap3\n      mload(0x40)\n      swap3\n      shl(0xe5, 0x461bcd)\n      dup5\n      mstore\n      0x04\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      shl(0x5a, 0x165a595b19081d1c985b9cd9995c8819985a5b1959)\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"contracts/QuailFinance.sol\":18464:18511  usdbToken.transfer(msg.sender, claimableAmount) */\n    tag_413:\n      tag_417\n      swap2\n      pop\n      dup3\n      returndatasize\n      dup5\n      gt\n      tag_143\n      jumpi\n      tag_145\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_417:\n      dup4\n      jump(tag_414)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_407:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      0x15\n      dup2\n      dup7\n      add\n      mstore\n      shl(0x5a, 0x139bc8199d5b991cc81a5b881d1a19481d985d5b1d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_404:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      0x2a\n      dup2\n      dup7\n      add\n      mstore\n      0x4e6f2066756e6473206c65667420746f20636c61696d206f7220616c72656164\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xb1, 0x3c9031b630b4b6b2b217)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_402:\n      pop\n      0x0e\n      0x64\n      swap3\n      mload(0x40)\n      swap3\n      shl(0xe5, 0x461bcd)\n      dup5\n      mstore\n      0x04\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      shl(0x91, 0x24b73b30b634b210383937b7b317)\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_394:\n      dup3\n      calldataload\n      dup2\n      mstore\n      swap2\n      dup2\n      add\n      swap2\n      dup8\n      swap2\n      add\n      jump(tag_393)\n    tag_53:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x44)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_224\n      jumpi\n      mstore(0x00, calldataload(0x04))\n        /* \"contracts/QuailFinance.sol\":1445:1529  mapping(uint256 => mapping(uint256 => mapping(address => bool))) public hasJoinedPot */\n      0x0c\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mstore(0x00, calldataload(0x24))\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_51:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n        /* \"contracts/QuailFinance.sol\":19191:19195  pots */\n      0x0a\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n      mstore\n      0x20\n        /* \"contracts/QuailFinance.sol\":19231:19250  pot.riskPoolBalance */\n      0x02\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/QuailFinance.sol\":19231:19250  pot.riskPoolBalance */\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_49:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/QuailFinance.sol\":1192:1215  IERC20 public usdbToken */\n      0x08\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_45:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/QuailFinance.sol\":861:886  bytes32 public merkleRoot */\n      0x03\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_43:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      sload(0x01)\n      mload(0x40)\n      shl(0xe3, 0x17119229)\n        /* \"contracts/QuailFinance.sol\":19031:19062  entropy.getFee(entropyProvider) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      dup3\n      and\n      0x04\n        /* \"contracts/QuailFinance.sol\":19031:19062  entropy.getFee(entropyProvider) */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n      swap2\n        /* \"contracts/QuailFinance.sol\":19031:19062  entropy.getFee(entropyProvider) */\n      0x20\n      swap2\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup4\n      swap2\n      0x24\n      swap2\n      dup4\n      swap2\n      and\n        /* \"contracts/QuailFinance.sol\":19031:19062  entropy.getFee(entropyProvider) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x20\n      swap2\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"contracts/QuailFinance.sol\":19031:19062  entropy.getFee(entropyProvider) */\n      swap2\n      tag_449\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_450:\n      pop\n      sub(shl(0x80, 0x01), 0x01)\n      mload(0x40)\n      swap2\n      and\n      dup2\n      mstore\n      return\n        /* \"contracts/QuailFinance.sol\":19031:19062  entropy.getFee(entropyProvider) */\n    tag_449:\n      tag_451\n      swap2\n      pop\n      dup3\n      returndatasize\n      dup5\n      gt\n      tag_194\n      jumpi\n      tag_196\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_451:\n      dup3\n      jump(tag_450)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_41:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x44)\n      calldataload(0x24)\n      calldataload(0x04)\n      dup3\n      iszero\n      dup1\n      iszero\n      dup5\n      sub\n      tag_224\n      jumpi\n      dup2\n      0x00\n      mstore\n      0x20\n      swap4\n        /* \"contracts/QuailFinance.sol\":14670:14674  pots */\n      0x0a\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup6\n      mstore\n      keccak256(0x00, 0x40)\n      swap2\n        /* \"contracts/QuailFinance.sol\":14700:14712  hasJoinedPot */\n      0x0c\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup7\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/QuailFinance.sol\":14721:14737  pot.currentRound */\n      0x09\n      dup5\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      0x00\n      mstore\n      dup7\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/QuailFinance.sol\":14739:14749  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n      mstore\n      dup7\n      mstore\n      jumpi(tag_461, iszero(and(sload(keccak256(0x00, 0x40)), 0xff)))\n        /* \"contracts/QuailFinance.sol\":14802:14842  _isWinner && _index < pot.winners.length */\n      dup2\n      swap1\n      dup2\n      tag_463\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_464:\n        /* \"contracts/QuailFinance.sol\":14801:14895  (_isWinner && _index < pot.winners.length) || (!_isWinner && _index < pot.participants.length) */\n      dup2\n      iszero\n      tag_465\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_466:\n      pop\n      iszero\n      tag_467\n      jumpi\n        /* \"contracts/QuailFinance.sol\":14940:15352  if (_isWinner) {... */\n      iszero\n      tag_469\n      jumpi\n        /* \"contracts/QuailFinance.sol\":14700:14712  hasJoinedPot */\n      0x0c\n        /* \"contracts/QuailFinance.sol\":14983:14994  pot.winners */\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap3\n      dup4\n      sload\n      swap3\n      not(0x00)\n      dup5\n      add\n      swap4\n      dup5\n      gt\n      tag_471\n      jumpi\n        /* \"contracts/QuailFinance.sol\":15375:15413  ParticipantRemoved(_potId, msg.sender) */\n      0xcef8fac05afb87995942422eac900de6af11a555d80d075340af81db492119fe\n        /* \"contracts/QuailFinance.sol\":14973:15005  _index != pot.winners.length - 1 */\n      swap5\n      dup5\n      dup3\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x40\n        /* \"contracts/QuailFinance.sol\":14973:15005  _index != pot.winners.length - 1 */\n      swap7\n        /* \"contracts/QuailFinance.sol\":15110:15125  pot.winners.pop */\n      tag_473\n        /* \"contracts/QuailFinance.sol\":14973:15005  _index != pot.winners.length - 1 */\n      swap5\n      sub\n        /* \"contracts/QuailFinance.sol\":14969:15097  if (_index != pot.winners.length - 1) {... */\n      tag_474\n      jumpi\n        /* \"contracts/QuailFinance.sol\":14940:15352  if (_isWinner) {... */\n    tag_475:\n        /* \"contracts/QuailFinance.sol\":15110:15125  pot.winners.pop */\n      pop\n      pop\n      tag_21\n      jump\t// in\n    tag_473:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n        /* \"contracts/QuailFinance.sol\":14739:14749  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap1\n      dup3\n      add\n      mstore\n        /* \"contracts/QuailFinance.sol\":15375:15413  ParticipantRemoved(_potId, msg.sender) */\n      log1\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      stop\n        /* \"contracts/QuailFinance.sol\":14969:15097  if (_index != pot.winners.length - 1) {... */\n    tag_474:\n        /* \"contracts/QuailFinance.sol\":15025:15044  pot.winners[_index] */\n      tag_477\n        /* \"contracts/QuailFinance.sol\":15047:15082  pot.winners[pot.winners.length - 1] */\n      tag_478\n        /* \"contracts/QuailFinance.sol\":15025:15082  pot.winners[_index] = pot.winners[pot.winners.length - 1] */\n      tag_479\n        /* \"contracts/QuailFinance.sol\":15047:15082  pot.winners[pot.winners.length - 1] */\n      swap4\n      dup6\n      tag_17\n      jump\t// in\n    tag_478:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      swap1\n      sload\n        /* \"contracts/QuailFinance.sol\":15025:15044  pot.winners[_index] */\n      swap3\n      dup6\n      tag_17\n      jump\t// in\n    tag_477:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x03\n      swap3\n      dup4\n      shl\n      dup2\n      dup2\n      shl\n      not\n      swap1\n      swap3\n      and\n      swap5\n      swap1\n      swap3\n      shl\n      swap5\n      swap1\n      swap5\n      shr\n      and\n      swap1\n      swap3\n      shl\n      or\n      swap1\n      sstore\n      jump\n        /* \"contracts/QuailFinance.sol\":15025:15082  pot.winners[_index] = pot.winners[pot.winners.length - 1] */\n    tag_479:\n        /* \"contracts/QuailFinance.sol\":14969:15097  if (_index != pot.winners.length - 1) {... */\n      dup7\n      dup1\n      jump(tag_475)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_471:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"contracts/QuailFinance.sol\":14940:15352  if (_isWinner) {... */\n    tag_469:\n        /* \"contracts/QuailFinance.sol\":15172:15188  pot.participants */\n      0x0b\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap3\n      dup4\n      sload\n      swap3\n      not(0x00)\n      dup5\n      add\n      swap4\n      dup5\n      gt\n      tag_471\n      jumpi\n        /* \"contracts/QuailFinance.sol\":15375:15413  ParticipantRemoved(_potId, msg.sender) */\n      0xcef8fac05afb87995942422eac900de6af11a555d80d075340af81db492119fe\n        /* \"contracts/QuailFinance.sol\":15162:15199  _index != pot.participants.length - 1 */\n      swap5\n      dup5\n      dup3\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x40\n        /* \"contracts/QuailFinance.sol\":15162:15199  _index != pot.participants.length - 1 */\n      swap7\n        /* \"contracts/QuailFinance.sol\":15319:15339  pot.participants.pop */\n      tag_482\n        /* \"contracts/QuailFinance.sol\":15162:15199  _index != pot.participants.length - 1 */\n      swap5\n      sub\n        /* \"contracts/QuailFinance.sol\":15158:15306  if (_index != pot.participants.length - 1) {... */\n      tag_474\n      jumpi\n        /* \"contracts/QuailFinance.sol\":15319:15339  pot.participants.pop */\n      pop\n      pop\n      tag_21\n      jump\t// in\n    tag_482:\n        /* \"contracts/QuailFinance.sol\":14940:15352  if (_isWinner) {... */\n      jump(tag_473)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_467:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup7\n      swap1\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c696420696e64657820666f72207061727469636970616e74730000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/QuailFinance.sol\":14801:14895  (_isWinner && _index < pot.winners.length) || (!_isWinner && _index < pot.participants.length) */\n    tag_465:\n        /* \"contracts/QuailFinance.sol\":14848:14894  !_isWinner && _index < pot.participants.length */\n      swap1\n      pop\n      dup1\n      tag_488\n      jumpi\n        /* \"contracts/QuailFinance.sol\":14801:14895  (_isWinner && _index < pot.winners.length) || (!_isWinner && _index < pot.participants.length) */\n    tag_489:\n      dup7\n      jump(tag_466)\n        /* \"contracts/QuailFinance.sol\":14848:14894  !_isWinner && _index < pot.participants.length */\n    tag_488:\n        /* \"contracts/QuailFinance.sol\":14871:14887  pot.participants */\n      pop\n      0x0b\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":14862:14894  _index < pot.participants.length */\n      dup5\n      lt\n        /* \"contracts/QuailFinance.sol\":14848:14894  !_isWinner && _index < pot.participants.length */\n      jump(tag_489)\n        /* \"contracts/QuailFinance.sol\":14802:14842  _isWinner && _index < pot.winners.length */\n    tag_463:\n        /* \"contracts/QuailFinance.sol\":14700:14712  hasJoinedPot */\n      0x0c\n        /* \"contracts/QuailFinance.sol\":14824:14835  pot.winners */\n      dup5\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":14815:14842  _index < pot.winners.length */\n      dup7\n      lt\n      swap2\n      pop\n        /* \"contracts/QuailFinance.sol\":14802:14842  _isWinner && _index < pot.winners.length */\n      jump(tag_464)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_461:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup8\n      swap1\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x596f752068617665206e6f74206a6f696e6564207468697320706f7400000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_39:\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0xe0))\n      calldataload(0x04)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_224\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_224\n      jumpi\n      tag_496\n      swap1\n      calldatasize\n      swap1\n      0x24\n      dup2\n      0x04\n      add\n      calldataload\n      swap2\n      add\n      tag_4\n      jump\t// in\n    tag_496:\n      sload(0x00)\n      sload(0x01)\n      mload(0x40)\n      shl(0xe3, 0x17119229)\n        /* \"contracts/QuailFinance.sol\":6925:6956  entropy.getFee(entropyProvider) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      dup3\n      and\n      0x04\n        /* \"contracts/QuailFinance.sol\":6925:6956  entropy.getFee(entropyProvider) */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n      swap2\n      0x20\n      swap2\n      dup4\n      swap2\n      0x24\n      swap2\n      dup4\n      swap2\n      and\n        /* \"contracts/QuailFinance.sol\":6925:6956  entropy.getFee(entropyProvider) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"contracts/QuailFinance.sol\":6925:6956  entropy.getFee(entropyProvider) */\n      swap2\n      tag_499\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_500:\n      pop\n        /* \"contracts/QuailFinance.sol\":6966:7026  require(msg.value == fee+potCreationFee, \"Insufficient fee\") */\n      tag_501\n        /* \"contracts/QuailFinance.sol\":6987:7005  fee+potCreationFee */\n      tag_502\n        /* \"contracts/QuailFinance.sol\":6991:7005  potCreationFee */\n      0x06\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      dup5\n      and\n        /* \"contracts/QuailFinance.sol\":6987:7005  fee+potCreationFee */\n      tag_10\n      jump\t// in\n    tag_502:\n        /* \"contracts/QuailFinance.sol\":6974:6983  msg.value */\n      callvalue\n        /* \"contracts/QuailFinance.sol\":6974:7005  msg.value == fee+potCreationFee */\n      eq\n        /* \"contracts/QuailFinance.sol\":6966:7026  require(msg.value == fee+potCreationFee, \"Insufficient fee\") */\n      tag_11\n      jump\t// in\n    tag_501:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      calldataload(0x44)\n        /* \"contracts/QuailFinance.sol\":7045:7072  _rotationCycleInSeconds > 0 */\n      iszero\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      tag_503\n      jumpi\n      calldataload(0x64)\n        /* \"contracts/QuailFinance.sol\":7126:7150  _interestDenominator > 0 */\n      iszero\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      tag_505\n      jumpi\n      calldataload(0x64)\n      calldataload(0x84)\n        /* \"contracts/QuailFinance.sol\":7210:7252  _interestNumerator <= _interestDenominator */\n      gt\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      tag_507\n      jumpi\n      sload(0x04)\n        /* \"contracts/QuailFinance.sol\":7334:7345  nextPotId++ */\n      tag_509\n      dup2\n      tag_12\n      jump\t// in\n    tag_509:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n      swap1\n      dup2\n      sstore\n        /* \"contracts/QuailFinance.sol\":7363:7372  usdbToken */\n      0x08\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/QuailFinance.sol\":7363:7421  usdbToken.transferFrom(msg.sender, address(this), _amount) */\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":7386:7396  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":7363:7421  usdbToken.transferFrom(msg.sender, address(this), _amount) */\n      swap3\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/QuailFinance.sol\":7406:7410  this */\n      address\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x24\n      dup4\n      add\n      mstore\n      calldataload(0xc4)\n      0x44\n      dup4\n      add\n      mstore\n      0x20\n      swap1\n      dup3\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/QuailFinance.sol\":7363:7421  usdbToken.transferFrom(msg.sender, address(this), _amount) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"contracts/QuailFinance.sol\":7363:7421  usdbToken.transferFrom(msg.sender, address(this), _amount) */\n      swap2\n      tag_513\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_514:\n      pop\n      iszero\n      tag_515\n      jumpi\n      0x00\n      dup1\n      sload\n      sload(0x01)\n      mload(0x40)\n      shl(0xe0, 0x93cbf217)\n        /* \"contracts/QuailFinance.sol\":7501:7614  entropy.request{value: fee}(... */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      dup3\n      and\n      0x04\n        /* \"contracts/QuailFinance.sol\":7501:7614  entropy.request{value: fee}(... */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n      0x24\n      dup1\n      calldataload\n      swap1\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      swap4\n      0x20\n      swap3\n      dup6\n      swap3\n      0x64\n      swap3\n      dup5\n      swap3\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap2\n      and\n        /* \"contracts/QuailFinance.sol\":7501:7614  entropy.request{value: fee}(... */\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n        /* \"contracts/QuailFinance.sol\":7501:7614  entropy.request{value: fee}(... */\n      swap3\n      tag_519\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_520:\n      pop\n      dup1\n      0x00\n      mstore\n        /* \"contracts/QuailFinance.sol\":7683:7687  pots */\n      0x0a\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup4\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_521\n      jumpi\n      tag_523\n      dup3\n      sload\n      tag_7\n      jump\t// in\n    tag_523:\n      0x1f\n      dup2\n      gt\n      tag_524\n      jumpi\n    tag_525:\n      pop\n      0x20\n      0x1f\n      dup3\n      gt\n      0x01\n      eq\n      tag_526\n      jumpi\n      swap2\n      dup2\n      0x00\n      dup1\n      mload\n      0x20\n      data_c97b5f71de675c355b301d9bb4e0d9e2cc0d5f6fb5c2bcc4b55320cac8f563e0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap7\n      swap3\n      tag_528\n      swap5\n      0x00\n      swap2\n      tag_529\n      jumpi\n    tag_530:\n      pop\n      dup2\n      0x01\n      shl\n      swap2\n      not(0x00)\n      swap1\n      0x03\n      shl\n      shr\n      not\n      and\n      or\n      dup2\n      sstore\n    tag_531:\n      calldataload(0xc4)\n      0x01\n        /* \"contracts/QuailFinance.sol\":7733:7746  newPot.amount */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n      0x00\n        /* \"contracts/QuailFinance.sol\":7766:7788  newPot.riskPoolBalance */\n      0x02\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/QuailFinance.sol\":7683:7687  pots */\n      0x0a\n        /* \"contracts/QuailFinance.sol\":7802:7823  newPot.sequenceNumber */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap6\n      and\n      swap5\n      dup1\n      sload\n      dup7\n      sub(shl(0xe0, 0x01), shl(0x40, 0x01))\n        /* \"contracts/QuailFinance.sol\":7386:7396  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x40\n      shl\n      and\n      swap2\n      shl(0xe0, 0xffffffff)\n      and\n      or\n      or\n      swap1\n      sstore\n      calldataload(0x44)\n      0x04\n        /* \"contracts/QuailFinance.sol\":7890:7919  newPot.rotationCycleInSeconds */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n      calldataload(0x84)\n        /* \"contracts/QuailFinance.sol\":6991:7005  potCreationFee */\n      0x06\n        /* \"contracts/QuailFinance.sol\":7955:7979  newPot.interestNumerator */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n      calldataload(0x64)\n        /* \"contracts/QuailFinance.sol\":8010:8036  newPot.interestDenominator */\n      0x07\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n        /* \"contracts/QuailFinance.sol\":8095:8110  block.timestamp */\n      timestamp\n        /* \"contracts/QuailFinance.sol\":8069:8092  newPot.lastRotationTime */\n      0x05\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n      calldataload(0xa4)\n        /* \"contracts/QuailFinance.sol\":7363:7372  usdbToken */\n      0x08\n        /* \"contracts/QuailFinance.sol\":8120:8142  newPot.numParticipants */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sstore\n        /* \"contracts/QuailFinance.sol\":8204:8240  newPot.participants.push(msg.sender) */\n      tag_532\n        /* \"contracts/QuailFinance.sol\":8171:8190  newPot.currentRound */\n      0x09\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      0x01\n      dup4\n      sstore\n        /* \"contracts/QuailFinance.sol\":8204:8223  newPot.participants */\n      0x0b\n        /* \"contracts/QuailFinance.sol\":7386:7396  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":8204:8223  newPot.participants */\n      swap2\n      add\n        /* \"contracts/QuailFinance.sol\":8204:8240  newPot.participants.push(msg.sender) */\n      tag_19\n      jump\t// in\n    tag_532:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup4\n      0x00\n      mstore\n        /* \"contracts/QuailFinance.sol\":8250:8262  hasJoinedPot */\n      0x0c\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      sload\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/QuailFinance.sol\":7386:7396  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/QuailFinance.sol\":8324:8483  PotCreated(potId, _name, msg.sender, _amount, _rotationCycleInSeconds, _interestNumerator, _interestDenominator,_numParticipants,sequenceNumber,userCommitment) */\n      0x37bb26f2981ad94b38afe928452cad1bca628b82f1781d95ec69d53acf5d0d9b\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      dup1\n      tag_533\n      0x0140\n      dup8\n      dup4\n      mstore\n      dup1\n      0x20\n      dup5\n      add\n      mstore\n      dup3\n      add\n      dup6\n      tag_8\n      jump\t// in\n    tag_533:\n        /* \"contracts/QuailFinance.sol\":7386:7396  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x40\n      dup4\n      add\n      mstore\n      calldataload(0xc4)\n      0x60\n      dup4\n      add\n      mstore\n      calldataload(0x44)\n      0x80\n      dup4\n      add\n      mstore\n      calldataload(0x84)\n      0xa0\n      dup4\n      add\n      mstore\n      calldataload(0x64)\n      0xc0\n      dup4\n      add\n      mstore\n      calldataload(0xa4)\n      0xe0\n      dup4\n      add\n      mstore\n      0x0100\n      swap8\n      dup9\n      dup4\n      add\n      mstore\n      calldataload(0x24)\n      0x0120\n      dup4\n      add\n      mstore\n        /* \"contracts/QuailFinance.sol\":8324:8483  PotCreated(potId, _name, msg.sender, _amount, _rotationCycleInSeconds, _interestNumerator, _interestDenominator,_numParticipants,sequenceNumber,userCommitment) */\n      sub\n      swap1\n      log1\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      swap4\n      dup5\n      swap4\n      dup5\n      mstore\n      dup1\n      0x20\n      dup6\n      add\n      mstore\n      dup4\n      add\n      swap1\n      tag_8\n      jump\t// in\n    tag_528:\n        /* \"contracts/QuailFinance.sol\":7386:7396  msg.sender */\n      caller\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x40\n      dup4\n      add\n      mstore\n      calldataload(0xc4)\n      0x60\n      dup4\n      add\n      mstore\n      calldataload(0x44)\n      0x80\n      dup4\n      add\n      mstore\n      calldataload(0x84)\n      0xa0\n      dup4\n      add\n      mstore\n      calldataload(0x64)\n      0xc0\n      dup4\n      add\n      mstore\n      calldataload(0xa4)\n      0xe0\n      dup4\n      add\n      mstore\n        /* \"contracts/QuailFinance.sol\":8498:8635  ParticipantJoined(potId, _name, msg.sender, _amount, _rotationCycleInSeconds, _interestNumerator, _interestDenominator, _numParticipants) */\n      sub\n      swap1\n      log1\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      stop\n    tag_529:\n      swap1\n      pop\n      dup4\n      add\n      mload\n      dup9\n      jump(tag_530)\n    tag_526:\n      dup3\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x00\n    tag_534:\n      not(0x1f)\n      dup5\n      and\n      dup2\n      lt\n      tag_535\n      jumpi\n      pop\n      dup3\n      tag_528\n      swap5\n      swap3\n      0x01\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_c97b5f71de675c355b301d9bb4e0d9e2cc0d5f6fb5c2bcc4b55320cac8f563e0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap10\n      swap6\n      not(0x1f)\n      dup2\n      and\n      lt\n      tag_537\n      jumpi\n    tag_538:\n      pop\n      pop\n      dup2\n      shl\n      add\n      dup2\n      sstore\n      jump(tag_531)\n    tag_537:\n      dup6\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n      0x03\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      dup9\n      dup1\n      jump(tag_538)\n    tag_535:\n      swap1\n      swap2\n      0x20\n      0x01\n      dup2\n      swap3\n      dup6\n      dup12\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap4\n      add\n      swap2\n      add\n      jump(tag_534)\n    tag_524:\n      tag_539\n      swap1\n      dup4\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      0x1f\n      dup5\n      add\n      0x05\n      shr\n      dup2\n      add\n      swap2\n      0x20\n      dup6\n      lt\n      tag_540\n      jumpi\n    tag_541:\n      0x1f\n      add\n      0x05\n      shr\n      add\n      swap1\n      tag_16\n      jump\t// in\n    tag_539:\n      dup6\n      jump(tag_525)\n    tag_540:\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n      jump(tag_541)\n    tag_521:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n        /* \"contracts/QuailFinance.sol\":7501:7614  entropy.request{value: fee}(... */\n    tag_519:\n      tag_542\n      swap2\n      swap3\n      pop\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n        /* \"contracts/QuailFinance.sol\":7501:7614  entropy.request{value: fee}(... */\n      returndatasize\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n        /* \"contracts/QuailFinance.sol\":7501:7614  entropy.request{value: fee}(... */\n      gt\n      tag_190\n      jumpi\n      tag_192\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_542:\n      swap1\n      dup4\n      jump(tag_520)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_515:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x29\n      0x24\n      dup3\n      add\n      mstore\n      0x43726561746f722073686f756c64206465706f7369742074686520696e697469\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xba, 0x185b08185b5bdd5b9d)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n        /* \"contracts/QuailFinance.sol\":7363:7421  usdbToken.transferFrom(msg.sender, address(this), _amount) */\n    tag_513:\n      tag_546\n      swap2\n      pop\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n        /* \"contracts/QuailFinance.sol\":7363:7421  usdbToken.transferFrom(msg.sender, address(this), _amount) */\n      returndatasize\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n        /* \"contracts/QuailFinance.sol\":7363:7421  usdbToken.transferFrom(msg.sender, address(this), _amount) */\n      gt\n      tag_143\n      jumpi\n      tag_145\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_546:\n      dup5\n      jump(tag_514)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_507:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x33\n      0x24\n      dup3\n      add\n      mstore\n      0x4e756d657261746f72206d757374206265206c657373207468616e206f722065\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x69, 0x38bab0b6103a37903232b737b6b4b730ba37b9)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_505:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x496e7465726573742064656e6f6d696e61746f72206d75737420626520706f73\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xd8, 0x6974697665)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_503:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x526f746174696f6e206379636c65206d75737420626520706f73697469766500\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/QuailFinance.sol\":6925:6956  entropy.getFee(entropyProvider) */\n    tag_499:\n      tag_550\n      swap2\n      pop\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n        /* \"contracts/QuailFinance.sol\":6925:6956  entropy.getFee(entropyProvider) */\n      returndatasize\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n        /* \"contracts/QuailFinance.sol\":6925:6956  entropy.getFee(entropyProvider) */\n      gt\n      tag_194\n      jumpi\n      tag_196\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_550:\n      dup3\n      jump(tag_500)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_37:\n      jumpi(tag_224, callvalue)\n      jumpi(tag_224, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      swap1\n        /* \"contracts/QuailFinance.sol\":1153:1186  uint256 public totalYielDeposited */\n      0x07\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      dup2\n      mstore\n      return\n    tag_1:\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_521\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_2:\n      0x60\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_521\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_3:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_521\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_4:\n      swap3\n      swap2\n      swap3\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_521\n      jumpi\n      mload(0x40)\n      swap2\n      tag_566\n      0x1f\n      dup3\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup5\n      tag_3\n      jump\t// in\n    tag_566:\n      dup3\n      swap5\n      dup2\n      dup5\n      mstore\n      dup2\n      dup4\n      add\n      gt\n      tag_224\n      jumpi\n      dup3\n      dup2\n      0x20\n      swap4\n      dup5\n      0x00\n      swap7\n      add\n      calldatacopy\n      add\n      add\n      mstore\n      jump\t// out\n    tag_5:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_224\n      jumpi\n      jump\t// out\n    tag_6:\n      swap1\n      dup1\n      0x1f\n      dup4\n      add\n      slt\n      iszero\n      tag_224\n      jumpi\n      dup2\n      0x20\n      tag_573\n      swap4\n      calldataload\n      swap2\n      add\n      tag_4\n      jump\t// in\n    tag_573:\n      swap1\n      jump\t// out\n    tag_7:\n      swap1\n      0x01\n      dup3\n      dup2\n      shr\n      swap3\n      and\n      dup1\n      iszero\n      tag_574\n      jumpi\n    tag_575:\n      0x20\n      dup4\n      lt\n      eq\n      tag_576\n      jumpi\n      jump\t// out\n    tag_576:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_574:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_575)\n    tag_8:\n      dup1\n      mload\n      dup1\n      dup4\n      mstore\n      0x20\n      swap3\n      swap2\n      dup2\n      swap1\n      dup5\n      add\n      dup5\n      dup5\n      add\n      mcopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_9:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_224\n      jumpi\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_224\n      jumpi\n      swap1\n      jump\t// out\n    tag_10:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_471\n      jumpi\n      jump\t// out\n    tag_11:\n      iszero\n      tag_584\n      jumpi\n      jump\t// out\n    tag_584:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x80, 0x496e73756666696369656e7420666565)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_12:\n      not(0x00)\n      dup2\n      eq\n      tag_471\n      jumpi\n      0x01\n      add\n      swap1\n      jump\t// out\n    tag_13:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_224\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_224\n      jumpi\n      swap1\n      jump\t// out\n    tag_15:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_224\n      jumpi\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_224\n      jumpi\n      swap1\n      jump\t// out\n    tag_16:\n      dup2\n      dup2\n      lt\n      tag_597\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_597:\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_16)\n    tag_17:\n      dup1\n      sload\n      dup3\n      lt\n      iszero\n      tag_599\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_599:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_19:\n      swap1\n      dup2\n      sload\n      swap2\n      shl(0x40, 0x01)\n      dup4\n      lt\n      iszero\n      tag_521\n      jumpi\n      dup3\n      tag_603\n      swap2\n      0x01\n      tag_604\n      swap6\n      add\n      dup2\n      sstore\n      tag_17\n      jump\t// in\n    tag_603:\n      swap1\n      swap2\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      dup5\n      sload\n      swap3\n      0x03\n      shl\n      swap4\n      and\n      dup4\n      shl\n      swap3\n      shl\n      not\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_604:\n      jump\t// out\n    tag_20:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_471\n      jumpi\n      jump\t// out\n    tag_21:\n      dup1\n      sload\n      dup1\n      iszero\n      tag_607\n      jumpi\n      not(0x00)\n      add\n      swap1\n      tag_609\n      dup3\n      dup3\n      tag_17\n      jump\t// in\n    tag_609:\n      dup2\n      sload\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      0x03\n      shl\n      shl\n      not\n      and\n      swap1\n      sstore\n      sstore\n      jump\t// out\n    tag_607:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x31)\n      revert(0x00, 0x24)\n    tag_23:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_471\n      jumpi\n      jump\t// out\n        /* \"contracts/QuailFinance.sol\":15990:16208  function calculateRiskPoolBalance(uint256 _potId, uint256 _amount) public view returns (uint256) {... */\n    tag_24:\n      0x00\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n        /* \"contracts/QuailFinance.sol\":16115:16119  pots */\n      0x0a\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x20\n      mstore\n        /* \"contracts/QuailFinance.sol\":16178:16201  pot.interestDenominator */\n      0x07\n        /* \"contracts/QuailFinance.sol\":16144:16175  _amount * pot.interestNumerator */\n      tag_612\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/QuailFinance.sol\":16154:16175  pot.interestNumerator */\n      swap3\n      0x06\n      dup5\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n        /* \"contracts/QuailFinance.sol\":16144:16175  _amount * pot.interestNumerator */\n      swap1\n      tag_23\n      jump\t// in\n    tag_612:\n        /* \"contracts/QuailFinance.sol\":16178:16201  pot.interestDenominator */\n      swap2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      swap1\n      dup2\n      iszero\n      tag_613\n      jumpi\n      div\n        /* \"contracts/QuailFinance.sol\":15990:16208  function calculateRiskPoolBalance(uint256 _potId, uint256 _amount) public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_613:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x12)\n      revert(0x00, 0x24)\n    tag_26:\n      iszero\n      tag_615\n      jumpi\n      jump\t// out\n    tag_615:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x5369676e617475726520766572696669636174696f6e206661696c6564000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_27:\n      iszero\n      tag_617\n      jumpi\n      jump\t// out\n    tag_617:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap1\n      dup2\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_619\n      jumpi\n      0x00\n      dup1\n      mload\n      0x20\n      data_47f5c767712c0cb55e0943de27dbb2db3b8bdac1e899af22d477462089a99558\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      0x00\n      dup1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_619:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"contracts/QuailFinance.sol\":18550:18950  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_29:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n        /* \"contracts/QuailFinance.sol\":18867:18933  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _messageHash) */\n      0x20\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n      dup4\n      mstore\n      0x3c\n      dup3\n      add\n      mstore\n      0x3c\n        /* \"contracts/QuailFinance.sol\":18867:18933  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _messageHash) */\n      dup2\n      mstore\n      tag_621\n      dup2\n      tag_2\n      jump\t// in\n    tag_621:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload\n        /* \"contracts/QuailFinance.sol\":18844:18943  keccak256(... */\n      swap1\n      keccak256\n        /* \"contracts/QuailFinance.sol\":18550:18950  function getEthSignedMessageHash(bytes32 _messageHash)... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_30:\n      0x00\n      dup1\n      mload\n      0x20\n      data_47f5c767712c0cb55e0943de27dbb2db3b8bdac1e899af22d477462089a99558\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_622\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_622:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2895  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {... */\n    tag_31:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      mload\n      swap2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2895  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {... */\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2276:2278  65 */\n      0x41\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2256:2278  signature.length == 65 */\n      dup4\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2276:2278  65 */\n      tag_624\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2764  tryRecover(hash, v, r, s) */\n      tag_626\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2539:2719  assembly {... */\n      swap3\n      pop\n      0x20\n      dup3\n      add\n      mload\n      swap1\n      0x60\n      0x40\n      dup5\n      add\n      mload\n      swap4\n      add\n      mload\n      0x00\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2764  tryRecover(hash, v, r, s) */\n      swap1\n      tag_34\n      jump\t// in\n    tag_626:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2732:2764  return tryRecover(hash, v, r, s) */\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2252:2889  if (signature.length == 65) {... */\n    tag_624:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2795:2878  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2811:2812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2795:2878  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      swap2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2815:2850  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2795:2878  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      swap2\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_32:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n      dup2\n      lt\n      iszero\n      tag_627\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      dup1\n      tag_629\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7327:7334  return; */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n    tag_629:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      dup2\n      sub\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      tag_631\n      jumpi\n      mload(0x40)\n      shl(0xe0, 0xf645eedf)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7439:7462  ECDSAInvalidSignature() */\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7439:7462  ECDSAInvalidSignature() */\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n    tag_631:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7492:7527  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      dup2\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7492:7527  RecoverError.InvalidSignatureLength */\n      tag_633\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      shl(0xe0, 0xfce698f7)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      dup2\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      dup2\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup4\n      swap1\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_633:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7626:7656  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_635\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_635:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x24\n      swap1\n      mload(0x40)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      swap1\n      shl(0xe2, 0x35e2f383)\n      dup3\n      mstore\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0x04\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      dup3\n      add\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      revert\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n    tag_627:\n      shl(0xe0, 0x4e487b71)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7291:7311  RecoverError.NoError */\n      0x00\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7291:7311  RecoverError.NoError */\n      0x00\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_33:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      0xff\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8837:8901  assembly {... */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      sload\n      0x40\n      shr\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7150:7168  !_isInitializing() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_637\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_637:\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_34:\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6199:6265  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6265  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup5\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      tag_639\n      jumpi\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      swap2\n      0x20\n      swap4\n      0x80\n      swap3\n      0xff\n      0x00\n      swap6\n      mload(0x40)\n      swap5\n      dup6\n      mstore\n      and\n      dup7\n      dup5\n      add\n      mstore\n      0x40\n      dup4\n      add\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      dup3\n      dup1\n      mstore\n      0x01\n      gas\n      staticcall\n      iszero\n      tag_226\n      jumpi\n      mload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/QuailFinance.sol\":674:19291  contract QuailFinance is Initializable, OwnableUpgradeable {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n      tag_643\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6614:6663  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap1\n      0x00\n      swap1\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n    tag_643:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      pop\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap1\n      0x00\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_639:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6297:6298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6301:6331  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap2\n      swap1\n      jump\t// out\n    stop\n    data_47f5c767712c0cb55e0943de27dbb2db3b8bdac1e899af22d477462089a99558 9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n    data_c97b5f71de675c355b301d9bb4e0d9e2cc0d5f6fb5c2bcc4b55320cac8f563e0 43d2f309913f6afc5d717f60864d2d192b69963d25204b6a12765e2795bf027f\n\n    auxdata: 0xa2646970667358221220f813019b501b78066a087003e28df5ced9f77b35226b8590ca41c9fcfcbd2eb464736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601a5760016004556124fd908161001f8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f905f3560e01c90816307dd3f4414611e83575080630fae6443146118b6578063210eaeae1461168e5780632d971e631461160f5780632eb4a7ab146115f257806331a0edec14610f175780634a80409e146115ca5780634d781b311461159d5780634da1ec401461154357806361e7d8051461128c578063715018a61461122557806373b2e80e146111ed57806377d5d2dc146111785780637c382d0b1461112a5780637d77990c14611109578063818c554814610fd157806382199e3f14610fb05780638da5cb5b14610f7c57806391dc969e14610f3957806397d7577614610f17578063ae169a5014610df5578063b7db43c814610cf4578063bf2d9e0b14610cd7578063c3c3df4f14610b86578063c4d66de8146108d2578063ca829f10146105a1578063ec71687b14610583578063f2fde38b14610556578063f78aedf9146101c5578063f851a4401461019c5763fa54080114610173575f80fd5b3461019957602036600319011261019957602061019160043561228c565b604051908152f35b80fd5b50346101995780600319360112610199576002546040516001600160a01b039091168152602090f35b5034610199576060366003190112610199576004356024356001600160401b038111610552576101f9903690600401611f47565b918181526020600a81526040822092600b84019081549160088601928354111561051f57818552600c845260408520600987015490818752855260408620335f52855260ff60405f2054166104bc576040518581018481523360601b6bffffffffffffffffffffffff19166020820152603481018390526044356054820152979896976102c6976102d69290916102a9916102a181607484015b03601f198101835282611ecb565b51902061228c565b6002546001600160a01b0399908a16928a926102cf929190612307565b90929192612341565b1614612191565b828752600c85526040808820918852908552808720335f818152918752908290208054600160ff1991821681179092556008548b8301805495516323b872dd60e01b8152600481019590955230602486015260448501959095529198909492918891839160649183918e91165af19081156104b1579061035d918a91610484575b506121dd565b335f52600e8901865260ff60405f20541615610473575b505460048801549160068901549360078a015495549660405198610100928a5282828b01528a9b80546103a681611f65565b80958d0152610120956001821691825f14610449575050600114610402575b508a5f805160206124a88339815191528b808f8d8d8d8d8d3360408801526060870152608086015260a085015260c084015260e08301520390a180f35b9093949b508a52808a20928a935b838510610436575050505086010196815f805160206124a8833981519152875f806103c5565b8054858c01870152938201938101610410565b16868d015250505050151560051b8701019750815f805160206124a8833981519152875f806103c5565b61047e9033906120b0565b5f610374565b6104a49150883d8a116104aa575b61049c8183611ecb565b81019061203a565b5f610357565b503d610492565b6040513d8b823e3d90fd5b60405162461bcd60e51b815260048101869052603560248201527f596f75206861766520616c7265616479206a6f696e6564207468697320706f74604482015274081a5b881d1a194818dd5c9c995b9d081c9bdd5b99605a1b6064820152608490fd5b60405162461bcd60e51b815260048101859052600b60248201526a141bdd081a5cc8199d5b1b60aa1b6044820152606490fd5b8280fd5b503461019957602036600319011261019957610580610573611f31565b61057b6122cf565b61221b565b80f35b50346101995780600319360112610199576020600654604051908152f35b506080366003190112610199576004356024358183526020600a8152604084209160018060a01b03938486541694806001541691600a860195856001600160401b03946084868a5416918c6040519c8d948593639371df5160e01b855260048501526024840152604435604484015260643560648401525af19788156104b157899861089f575b50600b810197885490811561088b576106468b93928692068b612087565b90549060031b1c169561065c87600c84016120b0565b8261066d8b54600185015490612140565b9261068861067f6064860480966120f3565b94600554611fe0565b6005556106958487612153565b9485946106b260038401916106ad83549889926120f3565b611fe0565b968b5f52600d84018d528760405f20556106d160028501918254611fe0565b905555885f52600e81018a5260405f20600160ff198254161790554260058201558682541696600154169660405190631711922960e31b82528860048301528b82602481845afa8015610880576001600160801b036064918e948791610853575b5016996107408b3414611fed565b6040519a8b9384926393cbf21760e01b845260048401528860248401528760448401525af1978815610848577f9ef3fbd1495a53d36401c5153be21a35a6214297031b5e106b12307835851d2f9860e0986009949161081b575b50169a8b6001600160401b03198254161790550198895497604051958652898601528760408601526060850152608084015260a083015260c0820152a18354928315159182610809575b50508484556107f1578380f35b610802928452832090810190612071565b5f80808380f35b6108129061202c565b90555f806107e4565b61083b91508c8d3d10610841575b6108338183611ecb565b810190612052565b5f61079a565b503d610829565b6040513d84823e3d90fd5b6108739150853d8711610879575b61086b8183611ecb565b810190611fc1565b5f610732565b503d610861565b6040513d86823e3d90fd5b634e487b7160e01b8b52601260045260248bfd5b9097508581813d83116108cb575b6108b78183611ecb565b810103126108c75751965f610628565b8880fd5b503d6108ad565b5034610b0d57602080600319360112610b0d576108ed611f31565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009182549060ff8260401c1615916001600160401b03811680159081610b7e575b6001149081610b74575b159081610b6b575b50610b595767ffffffffffffffff198116600117855582610b3a575b506109666123c4565b61096e6123c4565b6109773361221b565b604051631a33757d60e01b8152600260048201526022602160991b019084816024815f865af1908115610b02578591610b11575b50506bffffffffffffffffffffffff60a01b9080826008541617600855803b15610b0d575f8091600460405180948193634e606c4760e01b83525af18015610b0257610aef575b50732fc95838c71e76ec69ff817983bff17c710f34e091823b15610aeb57866040516336b91f2b60e01b815281816024818373e4860d3973802c7c42450d7b9741921c7711d039998a60048401525af1801561084857610ad7575b505060018060a01b031681875416178655736cc14824ea2918f5de5c2f75a9da968ad4bd6344816001541617600155600254161760025566038d7ea4c68000600655610a97578280f35b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29168ff000000000000000019815416905560405160018152a15f808280f35b610ae090611e9d565b610aeb57865f610a4d565b8680fd5b610afa919650611e9d565b5f945f6109f2565b6040513d5f823e3d90fd5b5f80fd5b813d8311610b33575b610b248183611ecb565b81010312610b0d57835f6109ab565b503d610b1a565b68ffffffffffffffffff1916680100000000000000011784555f61095d565b60405163f92ee8a960e01b8152600490fd5b9050155f610941565b303b159150610939565b84915061092f565b34610b0d57602080600319360112610b0d576004355f52600a815260405f2090604051905f928054610bb781611f65565b80855290600190818116908115610cb95750600114610c82575b5050610be283610c2e950384611ecb565b6001810154906002810154600382015460048301546005840154600685015491600786015493600887015495600a6009890154980154986040519c8d9c8d610180908181520190611f9d565b9a8c015260408b015260608a0152608089015260a088015260c087015260e08601526101008501526101208401526001600160401b03811661014084015260018060a01b039060401c166101608301520390f35b5f8381528481209096505b828710610ca657505050928201810192610be283610bd1565b8054868801860152958401958101610c8d565b60ff1916858701525050151560051b830182019350610be283610bd1565b34610b0d575f366003190112610b0d576020600554604051908152f35b34610b0d576020366003190112610b0d576004358015158103610b0d57610d196122cf565b15610dd5576005548015610d97575f600581905560085460405163a9059cbb60e01b81523360048201526024810193909352602091839160449183916001600160a01b03165af18015610b0257610d76915f91610d7857506121dd565b005b610d91915060203d6020116104aa5761049c8183611ecb565b82610357565b60405162461bcd60e51b81526020600482015260166024820152754e6f20726576656e756520746f20776974686472617760501b6044820152606490fd5b5f80808047818115610dec575b3390f115610b0257005b506108fc610de2565b34610b0d57602080600319360112610b0d5760043590815f52600a8152600d60405f2001335f5280825260405f205415610edd57335f8181529183526040808320805490849055600854915163a9059cbb60e01b8152600481019390935260248301819052919492849186916044918391906001600160a01b03165af1928315610b0257610ead6060947f24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb7965f91610ec057506121dd565b60405192835233908301526040820152a1005b610ed79150833d85116104aa5761049c8183611ecb565b87610357565b60405162461bcd60e51b81526004810183905260126024820152714e6f2072657761726420746f20636c61696d60701b6044820152606490fd5b34610b0d575f366003190112610b0d576040516022602160991b018152602090f35b34610b0d576020366003190112610b0d57610f52611f31565b610f5a6122cf565b600280546001600160a01b0319166001600160a01b0392909216919091179055005b34610b0d575f366003190112610b0d575f80516020612488833981519152546040516001600160a01b039091168152602090f35b34610b0d576020366003190112610b0d57610fc96122cf565b600435600655005b34610b0d576080366003190112610b0d576024356004356044356001600160401b038111610b0d5761100a61107e913690600401611f47565b825f52600a60205261106060405f20936040516102a18161029360208201948a606435913390889290916074949284526bffffffffffffffffffffffff199060601b166020840152603483015260548201520190565b6002546001600160a01b039081169290916102cf916102c691612307565b6002810191825481811061109e5781600361109a9401556120f3565b9055005b60405162461bcd60e51b815260206004820152603860248201527f616d6f756e742073686f756c64206265206c657373207468616e206f7220657160448201527f75616c20746f207269736b20706f6f6c2062616c616e636500000000000000006064820152608490fd5b34610b0d576040366003190112610b0d576020610191602435600435612153565b6040366003190112610b0d576024356111416122cf565b600435600355805f811561116f575b5f80809381933390f115610b025761116a90600754611fe0565b600755005b506108fc611150565b34610b0d575f366003190112610b0d576111906122cf565b604051634aa7d2f760e11b81523060048201523360248201526020816044815f6022602160991b015af18015610b02576111c657005b602090813d83116111e6575b6111dc8183611ecb565b81010312610b0d57005b503d6111d2565b34610b0d576020366003190112610b0d576001600160a01b0361120e611f31565b165f526009602052602060405f2054604051908152f35b34610b0d575f366003190112610b0d5761123d6122cf565b5f8051602061248883398151915280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610b0d576040366003190112610b0d5760246001600160401b036004358235828111610b0d5736602382011215610b0d578060040135928311610b0d5760058360051b94808684010192368411610b0d5760405193602094858101903360601b82528760348201526034815261130281611eb0565b5190209160035497611319876040519b018b611ecb565b8952830185808a015b8383106115335750505050935f945b875186101561136e5785841b8801850151908181101561135e575f528452600160405f205b950194611331565b905f528452600160405f20611356565b90868592036114ff57335f526009825260405f2054818110156114a85761139590826120f3565b90816007541061146c576113fb5f9284923385526009845260408520556113be816007546120f3565b60075560085460405163a9059cbb60e01b81523360048201526024810192909252909384926001600160a01b039092169183919082906044820190565b03925af1908115610b02575f9161144f575b501561141557005b60156064926040519262461bcd60e51b8452600484015282015274165a595b19081d1c985b9cd9995c8819985a5b1959605a1b6044820152fd5b6114669150823d84116104aa5761049c8183611ecb565b8361140d565b60405162461bcd60e51b81526004810184905260158186015274139bc8199d5b991cc81a5b881d1a19481d985d5b1d605a1b6044820152606490fd5b60405162461bcd60e51b815260048101849052602a818601527f4e6f2066756e6473206c65667420746f20636c61696d206f7220616c726561646044820152693c9031b630b4b6b2b21760b11b6064820152608490fd5b50600e6064926040519262461bcd60e51b845260048401528201526d24b73b30b634b210383937b7b31760911b6044820152fd5b8235815291810191879101611322565b34610b0d576060366003190112610b0d576044356001600160a01b03811690819003610b0d576004355f52600c60205260405f206024355f5260205260405f20905f52602052602060ff60405f2054166040519015158152f35b34610b0d576020366003190112610b0d576004355f52600a6020526020600260405f200154604051908152f35b34610b0d575f366003190112610b0d576008546040516001600160a01b039091168152602090f35b34610b0d575f366003190112610b0d576020600354604051908152f35b34610b0d575f366003190112610b0d575f54600154604051631711922960e31b81526001600160a01b0391821660048201529160209183916024918391165afa8015610b02576020915f91611671575b506001600160801b0360405191168152f35b6116889150823d84116108795761086b8183611ecb565b8261165f565b34610b0d576060366003190112610b0d57604435602435600435821580158403610b0d57815f52602093600a855260405f2091600c865260405f2060098401545f52865260405f20335f52865260ff60405f2054161561187157819081611863575b8115611848575b501561180357156117b557600c01928354925f1984019384116117a1577fcef8fac05afb87995942422eac900de6af11a555d80d075340af81db492119fe94848260409661174c9403611759575b5050612100565b82519182523390820152a1005b61177361176961179a9385612087565b9190549285612087565b81546001600160a01b03600392831b81811b199092169490921b9490941c1690921b179055565b8680611745565b634e487b7160e01b5f52601160045260245ffd5b600b01928354925f1984019384116117a1577fcef8fac05afb87995942422eac900de6af11a555d80d075340af81db492119fe9484826040966117fe9403611759575050612100565b61174c565b60405162461bcd60e51b815260048101869052601e60248201527f496e76616c696420696e64657820666f72207061727469636970616e747300006044820152606490fd5b905080611856575b866116f7565b50600b8201548410611850565b600c840154861091506116f0565b60405162461bcd60e51b815260048101879052601c60248201527f596f752068617665206e6f74206a6f696e6564207468697320706f74000000006044820152606490fd5b60e0366003190112610b0d576004356001600160401b038111610b0d5736602382011215610b0d576118f2903690602481600401359101611eec565b5f54600154604051631711922960e31b81526001600160a01b0391821660048201529160209183916024918391165afa908115610b02575f91611e64575b506119506119496006546001600160801b038416611fe0565b3414611fed565b60443515611e1f5760643515611dcc5760643560843511611d6b576004546119778161202c565b60049081556008546040516323b872dd60e01b8152339281019290925230602483015260c4356044830152602090829060649082905f906001600160a01b03165af1908115610b02575f91611d4c575b5015611cf5575f80546001546040516393cbf21760e01b81526001600160a01b039182166004820152602480359082015260448101939093529193602092859260649284926001600160801b0390911691165af1918215610b02575f92611cd4575b50805f52600a60205260405f2083516001600160401b038111611cc057611a508254611f65565b601f8111611c85575b506020601f8211600114611c0f5791815f805160206124a88339815191529692611bd1945f91611c04575b508160011b915f199060031b1c19161781555b60c43560018201555f60028201556001600160401b03600a8201951694805486600160401b600160e01b033360401b169163ffffffff60e01b161717905560443560048201556084356006820155606435600782015542600582015560a4356008820155611b11600982019160018355600b3391016120b0565b835f52600c60205260405f2090545f5260205260405f20335f5260205260405f20600160ff198254161790557f37bb26f2981ad94b38afe928452cad1bca628b82f1781d95ec69d53acf5d0d9b60405180611b79610140878352806020840152820185611f9d565b33604083015260c4356060830152604435608083015260843560a083015260643560c083015260a43560e083015261010097888301526024356101208301520390a16040519384938452806020850152830190611f9d565b33604083015260c4356060830152604435608083015260843560a083015260643560c083015260a43560e08301520390a1005b905083015188611a84565b825f5260205f20905f5b601f1984168110611c6d575082611bd194926001925f805160206124a88339815191529995601f19811610611c55575b5050811b018155611a97565b8501515f1960f88460031b161c191690558880611c49565b9091602060018192858b015181550193019101611c19565b611cb090835f5260205f20601f840160051c81019160208510611cb6575b601f0160051c0190612071565b85611a59565b9091508190611ca3565b634e487b7160e01b5f52604160045260245ffd5b611cee91925060203d602011610841576108338183611ecb565b9083611a29565b60405162461bcd60e51b815260206004820152602960248201527f43726561746f722073686f756c64206465706f7369742074686520696e697469604482015268185b08185b5bdd5b9d60ba1b6064820152608490fd5b611d65915060203d6020116104aa5761049c8183611ecb565b846119c7565b60405162461bcd60e51b815260206004820152603360248201527f4e756d657261746f72206d757374206265206c657373207468616e206f72206560448201527238bab0b6103a37903232b737b6b4b730ba37b960691b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f496e7465726573742064656e6f6d696e61746f72206d75737420626520706f73604482015264697469766560d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f526f746174696f6e206379636c65206d75737420626520706f736974697665006044820152606490fd5b611e7d915060203d6020116108795761086b8183611ecb565b82611930565b34610b0d575f366003190112610b0d576020906007548152f35b6001600160401b038111611cc057604052565b606081019081106001600160401b03821117611cc057604052565b90601f801991011681019081106001600160401b03821117611cc057604052565b9291926001600160401b038211611cc05760405191611f15601f8201601f191660200184611ecb565b829481845281830111610b0d578281602093845f960137010152565b600435906001600160a01b0382168203610b0d57565b9080601f83011215610b0d57816020611f6293359101611eec565b90565b90600182811c92168015611f93575b6020831014611f7f57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611f74565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90816020910312610b0d57516001600160801b0381168103610b0d5790565b919082018092116117a157565b15611ff457565b60405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b6044820152606490fd5b5f1981146117a15760010190565b90816020910312610b0d57518015158103610b0d5790565b90816020910312610b0d57516001600160401b0381168103610b0d5790565b81811061207c575050565b5f8155600101612071565b805482101561209c575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b90815491600160401b831015611cc057826120d39160016120f195018155612087565b90919060018060a01b038084549260031b9316831b921b1916179055565b565b919082039182116117a157565b8054801561212c575f1901906121168282612087565b81549060018060a01b039060031b1b1916905555565b634e487b7160e01b5f52603160045260245ffd5b818102929181159184041417156117a157565b5f52600a602052600761216f60405f2092600684015490612140565b91015490811561217d570490565b634e487b7160e01b5f52601260045260245ffd5b1561219857565b60405162461bcd60e51b815260206004820152601d60248201527f5369676e617475726520766572696669636174696f6e206661696c65640000006044820152606490fd5b156121e457565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b6001600160a01b03908116908115612274575f8051602061248883398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b604051631e4fbdf760e01b81525f6004820152602490fd5b60405160208101917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352603c820152603c81526122c981611eb0565b51902090565b5f80516020612488833981519152546001600160a01b031633036122ef57565b60405163118cdaa760e01b8152336004820152602490fd5b8151919060418303612337576123309250602082015190606060408401519301515f1a90612405565b9192909190565b50505f9160029190565b60048110156123b05780612353575050565b6001810361236d5760405163f645eedf60e01b8152600490fd5b6002810361238e5760405163fce698f760e01b815260048101839052602490fd5b6003146123985750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c16156123f357565b604051631afcd79f60e31b8152600490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161247c579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610b02575f516001600160a01b0381161561247257905f905f90565b505f906001905f90565b5050505f916003919056fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930043d2f309913f6afc5d717f60864d2d192b69963d25204b6a12765e2795bf027fa2646970667358221220f813019b501b78066a087003e28df5ced9f77b35226b8590ca41c9fcfcbd2eb464736f6c63430008190033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x1 PUSH1 0x4 SSTORE PUSH2 0x24FD SWAP1 DUP2 PUSH2 0x1F DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x7DD3F44 EQ PUSH2 0x1E83 JUMPI POP DUP1 PUSH4 0xFAE6443 EQ PUSH2 0x18B6 JUMPI DUP1 PUSH4 0x210EAEAE EQ PUSH2 0x168E JUMPI DUP1 PUSH4 0x2D971E63 EQ PUSH2 0x160F JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x15F2 JUMPI DUP1 PUSH4 0x31A0EDEC EQ PUSH2 0xF17 JUMPI DUP1 PUSH4 0x4A80409E EQ PUSH2 0x15CA JUMPI DUP1 PUSH4 0x4D781B31 EQ PUSH2 0x159D JUMPI DUP1 PUSH4 0x4DA1EC40 EQ PUSH2 0x1543 JUMPI DUP1 PUSH4 0x61E7D805 EQ PUSH2 0x128C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1225 JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x11ED JUMPI DUP1 PUSH4 0x77D5D2DC EQ PUSH2 0x1178 JUMPI DUP1 PUSH4 0x7C382D0B EQ PUSH2 0x112A JUMPI DUP1 PUSH4 0x7D77990C EQ PUSH2 0x1109 JUMPI DUP1 PUSH4 0x818C5548 EQ PUSH2 0xFD1 JUMPI DUP1 PUSH4 0x82199E3F EQ PUSH2 0xFB0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF7C JUMPI DUP1 PUSH4 0x91DC969E EQ PUSH2 0xF39 JUMPI DUP1 PUSH4 0x97D75776 EQ PUSH2 0xF17 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0xDF5 JUMPI DUP1 PUSH4 0xB7DB43C8 EQ PUSH2 0xCF4 JUMPI DUP1 PUSH4 0xBF2D9E0B EQ PUSH2 0xCD7 JUMPI DUP1 PUSH4 0xC3C3DF4F EQ PUSH2 0xB86 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8D2 JUMPI DUP1 PUSH4 0xCA829F10 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xEC71687B EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xF78AEDF9 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x19C JUMPI PUSH4 0xFA540801 EQ PUSH2 0x173 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH2 0x191 PUSH1 0x4 CALLDATALOAD PUSH2 0x228C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x199 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x199 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x552 JUMPI PUSH2 0x1F9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1F47 JUMP JUMPDEST SWAP2 DUP2 DUP2 MSTORE PUSH1 0x20 PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 PUSH1 0xB DUP5 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x8 DUP7 ADD SWAP3 DUP4 SLOAD GT ISZERO PUSH2 0x51F JUMPI DUP2 DUP6 MSTORE PUSH1 0xC DUP5 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x9 DUP8 ADD SLOAD SWAP1 DUP2 DUP8 MSTORE DUP6 MSTORE PUSH1 0x40 DUP7 KECCAK256 CALLER PUSH0 MSTORE DUP6 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD DUP6 DUP2 ADD DUP5 DUP2 MSTORE CALLER PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x54 DUP3 ADD MSTORE SWAP8 SWAP9 SWAP7 SWAP8 PUSH2 0x2C6 SWAP8 PUSH2 0x2D6 SWAP3 SWAP1 SWAP2 PUSH2 0x2A9 SWAP2 PUSH2 0x2A1 DUP2 PUSH1 0x74 DUP5 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1ECB JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x228C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 SWAP1 DUP11 AND SWAP3 DUP11 SWAP3 PUSH2 0x2CF SWAP3 SWAP2 SWAP1 PUSH2 0x2307 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2341 JUMP JUMPDEST AND EQ PUSH2 0x2191 JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH1 0xC DUP6 MSTORE PUSH1 0x40 DUP1 DUP9 KECCAK256 SWAP2 DUP9 MSTORE SWAP1 DUP6 MSTORE DUP1 DUP8 KECCAK256 CALLER PUSH0 DUP2 DUP2 MSTORE SWAP2 DUP8 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 SLOAD DUP12 DUP4 ADD DUP1 SLOAD SWAP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP2 SWAP9 SWAP1 SWAP5 SWAP3 SWAP2 DUP9 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP15 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4B1 JUMPI SWAP1 PUSH2 0x35D SWAP2 DUP11 SWAP2 PUSH2 0x484 JUMPI JUMPDEST POP PUSH2 0x21DD JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0xE DUP10 ADD DUP7 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x473 JUMPI JUMPDEST POP SLOAD PUSH1 0x4 DUP9 ADD SLOAD SWAP2 PUSH1 0x6 DUP10 ADD SLOAD SWAP4 PUSH1 0x7 DUP11 ADD SLOAD SWAP6 SLOAD SWAP7 PUSH1 0x40 MLOAD SWAP9 PUSH2 0x100 SWAP3 DUP11 MSTORE DUP3 DUP3 DUP12 ADD MSTORE DUP11 SWAP12 DUP1 SLOAD PUSH2 0x3A6 DUP2 PUSH2 0x1F65 JUMP JUMPDEST DUP1 SWAP6 DUP14 ADD MSTORE PUSH2 0x120 SWAP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH0 EQ PUSH2 0x449 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x402 JUMPI JUMPDEST POP DUP11 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 DUP1 DUP16 DUP14 DUP14 DUP14 DUP14 DUP14 CALLER PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST SWAP1 SWAP4 SWAP5 SWAP12 POP DUP11 MSTORE DUP1 DUP11 KECCAK256 SWAP3 DUP11 SWAP4 JUMPDEST DUP4 DUP6 LT PUSH2 0x436 JUMPI POP POP POP POP DUP7 ADD ADD SWAP7 DUP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 PUSH0 DUP1 PUSH2 0x3C5 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP13 ADD DUP8 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x410 JUMP JUMPDEST AND DUP7 DUP14 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP8 ADD ADD SWAP8 POP DUP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 PUSH0 DUP1 PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x47E SWAP1 CALLER SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH0 PUSH2 0x374 JUMP JUMPDEST PUSH2 0x4A4 SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x4AA JUMPI JUMPDEST PUSH2 0x49C DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH0 PUSH2 0x357 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C7265616479206A6F696E6564207468697320706F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x81A5B881D1A194818DD5C9C995B9D081C9BDD5B99 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x141BDD081A5CC8199D5B1B PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x580 PUSH2 0x573 PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0x57B PUSH2 0x22CF JUMP JUMPDEST PUSH2 0x221B JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x199 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP2 DUP4 MSTORE PUSH1 0x20 PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP7 SLOAD AND SWAP5 DUP1 PUSH1 0x1 SLOAD AND SWAP2 PUSH1 0xA DUP7 ADD SWAP6 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 PUSH1 0x84 DUP7 DUP11 SLOAD AND SWAP2 DUP13 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP5 DUP6 SWAP4 PUSH4 0x9371DF51 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP5 ADD MSTORE GAS CALL SWAP8 DUP9 ISZERO PUSH2 0x4B1 JUMPI DUP10 SWAP9 PUSH2 0x89F JUMPI JUMPDEST POP PUSH1 0xB DUP2 ADD SWAP8 DUP9 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x88B JUMPI PUSH2 0x646 DUP12 SWAP4 SWAP3 DUP7 SWAP3 MOD DUP12 PUSH2 0x2087 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP6 PUSH2 0x65C DUP8 PUSH1 0xC DUP5 ADD PUSH2 0x20B0 JUMP JUMPDEST DUP3 PUSH2 0x66D DUP12 SLOAD PUSH1 0x1 DUP6 ADD SLOAD SWAP1 PUSH2 0x2140 JUMP JUMPDEST SWAP3 PUSH2 0x688 PUSH2 0x67F PUSH1 0x64 DUP7 DIV DUP1 SWAP7 PUSH2 0x20F3 JUMP JUMPDEST SWAP5 PUSH1 0x5 SLOAD PUSH2 0x1FE0 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x695 DUP5 DUP8 PUSH2 0x2153 JUMP JUMPDEST SWAP5 DUP6 SWAP5 PUSH2 0x6B2 PUSH1 0x3 DUP5 ADD SWAP2 PUSH2 0x6AD DUP4 SLOAD SWAP9 DUP10 SWAP3 PUSH2 0x20F3 JUMP JUMPDEST PUSH2 0x1FE0 JUMP JUMPDEST SWAP7 DUP12 PUSH0 MSTORE PUSH1 0xD DUP5 ADD DUP14 MSTORE DUP8 PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH2 0x6D1 PUSH1 0x2 DUP6 ADD SWAP2 DUP3 SLOAD PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 SSTORE SSTORE DUP9 PUSH0 MSTORE PUSH1 0xE DUP2 ADD DUP11 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0x5 DUP3 ADD SSTORE DUP7 DUP3 SLOAD AND SWAP7 PUSH1 0x1 SLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x17119229 PUSH1 0xE3 SHL DUP3 MSTORE DUP9 PUSH1 0x4 DUP4 ADD MSTORE DUP12 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL DUP1 ISZERO PUSH2 0x880 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x64 SWAP2 DUP15 SWAP5 DUP8 SWAP2 PUSH2 0x853 JUMPI JUMPDEST POP AND SWAP10 PUSH2 0x740 DUP12 CALLVALUE EQ PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP4 DUP5 SWAP3 PUSH4 0x93CBF217 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP9 PUSH1 0x24 DUP5 ADD MSTORE DUP8 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP8 DUP9 ISZERO PUSH2 0x848 JUMPI PUSH32 0x9EF3FBD1495A53D36401C5153BE21A35A6214297031B5E106B12307835851D2F SWAP9 PUSH1 0xE0 SWAP9 PUSH1 0x9 SWAP5 SWAP2 PUSH2 0x81B JUMPI JUMPDEST POP AND SWAP11 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP9 DUP10 SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE DUP10 DUP7 ADD MSTORE DUP8 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE LOG1 DUP4 SLOAD SWAP3 DUP4 ISZERO ISZERO SWAP2 DUP3 PUSH2 0x809 JUMPI JUMPDEST POP POP DUP5 DUP5 SSTORE PUSH2 0x7F1 JUMPI DUP4 DUP1 RETURN JUMPDEST PUSH2 0x802 SWAP3 DUP5 MSTORE DUP4 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH0 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST PUSH2 0x812 SWAP1 PUSH2 0x202C JUMP JUMPDEST SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x7E4 JUMP JUMPDEST PUSH2 0x83B SWAP2 POP DUP13 DUP14 RETURNDATASIZE LT PUSH2 0x841 JUMPI JUMPDEST PUSH2 0x833 DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH0 PUSH2 0x79A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x873 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x879 JUMPI JUMPDEST PUSH2 0x86B DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH0 PUSH2 0x732 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST SWAP1 SWAP8 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8CB JUMPI JUMPDEST PUSH2 0x8B7 DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8C7 JUMPI MLOAD SWAP7 PUSH0 PUSH2 0x628 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x8AD JUMP JUMPDEST POP CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB0D JUMPI PUSH2 0x8ED PUSH2 0x1F31 JUMP JUMPDEST SWAP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND ISZERO SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0xB7E JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0xB74 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0xB6B JUMPI JUMPDEST POP PUSH2 0xB59 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR DUP6 SSTORE DUP3 PUSH2 0xB3A JUMPI JUMPDEST POP PUSH2 0x966 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x96E PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x977 CALLER PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1A33757D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x21 PUSH1 0x99 SHL ADD SWAP1 DUP5 DUP2 PUSH1 0x24 DUP2 PUSH0 DUP7 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xB02 JUMPI DUP6 SWAP2 PUSH2 0xB11 JUMPI JUMPDEST POP POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 DUP1 DUP3 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xB0D JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x4E606C47 PUSH1 0xE0 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0xB02 JUMPI PUSH2 0xAEF JUMPI JUMPDEST POP PUSH20 0x2FC95838C71E76EC69FF817983BFF17C710F34E0 SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0xAEB JUMPI DUP7 PUSH1 0x40 MLOAD PUSH4 0x36B91F2B PUSH1 0xE0 SHL DUP2 MSTORE DUP2 DUP2 PUSH1 0x24 DUP2 DUP4 PUSH20 0xE4860D3973802C7C42450D7B9741921C7711D039 SWAP10 DUP11 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x848 JUMPI PUSH2 0xAD7 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 DUP8 SLOAD AND OR DUP7 SSTORE PUSH20 0x6CC14824EA2918F5DE5C2F75A9DA968AD4BD6344 DUP2 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x6 SSTORE PUSH2 0xA97 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP2 PUSH9 0xFF0000000000000000 NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 PUSH0 DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH2 0xAE0 SWAP1 PUSH2 0x1E9D JUMP JUMPDEST PUSH2 0xAEB JUMPI DUP7 PUSH0 PUSH2 0xA4D JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH2 0xAFA SWAP2 SWAP7 POP PUSH2 0x1E9D JUMP JUMPDEST PUSH0 SWAP5 PUSH0 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xB33 JUMPI JUMPDEST PUSH2 0xB24 DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB0D JUMPI DUP4 PUSH0 PUSH2 0x9AB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB1A JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR DUP5 SSTORE PUSH0 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO PUSH0 PUSH2 0x941 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x939 JUMP JUMPDEST DUP5 SWAP2 POP PUSH2 0x92F JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD PUSH2 0xBB7 DUP2 PUSH2 0x1F65 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xCB9 JUMPI POP PUSH1 0x1 EQ PUSH2 0xC82 JUMPI JUMPDEST POP POP PUSH2 0xBE2 DUP4 PUSH2 0xC2E SWAP6 SUB DUP5 PUSH2 0x1ECB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP2 PUSH1 0x7 DUP7 ADD SLOAD SWAP4 PUSH1 0x8 DUP8 ADD SLOAD SWAP6 PUSH1 0xA PUSH1 0x9 DUP10 ADD SLOAD SWAP9 ADD SLOAD SWAP9 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 PUSH2 0x180 SWAP1 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1F9D JUMP JUMPDEST SWAP11 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x40 SHR AND PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH0 DUP4 DUP2 MSTORE DUP5 DUP2 KECCAK256 SWAP1 SWAP7 POP JUMPDEST DUP3 DUP8 LT PUSH2 0xCA6 JUMPI POP POP POP SWAP3 DUP3 ADD DUP2 ADD SWAP3 PUSH2 0xBE2 DUP4 PUSH2 0xBD1 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP9 ADD DUP7 ADD MSTORE SWAP6 DUP5 ADD SWAP6 DUP2 ADD PUSH2 0xC8D JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP8 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD DUP3 ADD SWAP4 POP PUSH2 0xBE2 DUP4 PUSH2 0xBD1 JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xB0D JUMPI PUSH2 0xD19 PUSH2 0x22CF JUMP JUMPDEST ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x5 SLOAD DUP1 ISZERO PUSH2 0xD97 JUMPI PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xB02 JUMPI PUSH2 0xD76 SWAP2 PUSH0 SWAP2 PUSH2 0xD78 JUMPI POP PUSH2 0x21DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD91 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49C DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP3 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F20726576656E756520746F207769746864726177 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP1 DUP1 SELFBALANCE DUP2 DUP2 ISZERO PUSH2 0xDEC JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0xB02 JUMPI STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0xDE2 JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0xD PUSH1 0x40 PUSH0 KECCAK256 ADD CALLER PUSH0 MSTORE DUP1 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO PUSH2 0xEDD JUMPI CALLER PUSH0 DUP2 DUP2 MSTORE SWAP2 DUP4 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x8 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP5 SWAP3 DUP5 SWAP2 DUP7 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0xB02 JUMPI PUSH2 0xEAD PUSH1 0x60 SWAP5 PUSH32 0x24B5EFA61DD1CFC659205A97FB8ED868F3CB8C81922BAB2B96423E5DE1DE2CB7 SWAP7 PUSH0 SWAP2 PUSH2 0xEC0 JUMPI POP PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH2 0xED7 SWAP2 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x4AA JUMPI PUSH2 0x49C DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP8 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2072657761726420746F20636C61696D PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH1 0x22 PUSH1 0x21 PUSH1 0x99 SHL ADD DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH2 0xF52 PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0xF5A PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2488 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH2 0xFC9 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xB0D JUMPI PUSH2 0x100A PUSH2 0x107E SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1F47 JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x1060 PUSH1 0x40 PUSH0 KECCAK256 SWAP4 PUSH1 0x40 MLOAD PUSH2 0x2A1 DUP2 PUSH2 0x293 PUSH1 0x20 DUP3 ADD SWAP5 DUP11 PUSH1 0x64 CALLDATALOAD SWAP2 CALLER SWAP1 DUP9 SWAP3 SWAP1 SWAP2 PUSH1 0x74 SWAP5 SWAP3 DUP5 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 PUSH1 0x60 SHL AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x54 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 SWAP2 PUSH2 0x2CF SWAP2 PUSH2 0x2C6 SWAP2 PUSH2 0x2307 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SWAP2 DUP3 SLOAD DUP2 DUP2 LT PUSH2 0x109E JUMPI DUP2 PUSH1 0x3 PUSH2 0x109A SWAP5 ADD SSTORE PUSH2 0x20F3 JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616D6F756E742073686F756C64206265206C657373207468616E206F72206571 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75616C20746F207269736B20706F6F6C2062616C616E63650000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x20 PUSH2 0x191 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x24 CALLDATALOAD PUSH2 0x1141 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x3 SSTORE DUP1 PUSH0 DUP2 ISZERO PUSH2 0x116F JUMPI JUMPDEST PUSH0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0xB02 JUMPI PUSH2 0x116A SWAP1 PUSH1 0x7 SLOAD PUSH2 0x1FE0 JUMP JUMPDEST PUSH1 0x7 SSTORE STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1150 JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH2 0x1190 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4AA7D2F7 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH0 PUSH1 0x22 PUSH1 0x21 PUSH1 0x99 SHL ADD GAS CALL DUP1 ISZERO PUSH2 0xB02 JUMPI PUSH2 0x11C6 JUMPI STOP JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11E6 JUMPI JUMPDEST PUSH2 0x11DC DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB0D JUMPI STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x11D2 JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x120E PUSH2 0x1F31 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH2 0x123D PUSH2 0x22CF JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2488 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x24 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xB0D JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xB0D JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0xB0D JUMPI PUSH1 0x5 DUP4 PUSH1 0x5 SHL SWAP5 DUP1 DUP7 DUP5 ADD ADD SWAP3 CALLDATASIZE DUP5 GT PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP5 DUP6 DUP2 ADD SWAP1 CALLER PUSH1 0x60 SHL DUP3 MSTORE DUP8 PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x34 DUP2 MSTORE PUSH2 0x1302 DUP2 PUSH2 0x1EB0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH1 0x3 SLOAD SWAP8 PUSH2 0x1319 DUP8 PUSH1 0x40 MLOAD SWAP12 ADD DUP12 PUSH2 0x1ECB JUMP JUMPDEST DUP10 MSTORE DUP4 ADD DUP6 DUP1 DUP11 ADD JUMPDEST DUP4 DUP4 LT PUSH2 0x1533 JUMPI POP POP POP POP SWAP4 PUSH0 SWAP5 JUMPDEST DUP8 MLOAD DUP7 LT ISZERO PUSH2 0x136E JUMPI DUP6 DUP5 SHL DUP9 ADD DUP6 ADD MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x135E JUMPI PUSH0 MSTORE DUP5 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 JUMPDEST SWAP6 ADD SWAP5 PUSH2 0x1331 JUMP JUMPDEST SWAP1 PUSH0 MSTORE DUP5 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1356 JUMP JUMPDEST SWAP1 DUP7 DUP6 SWAP3 SUB PUSH2 0x14FF JUMPI CALLER PUSH0 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x14A8 JUMPI PUSH2 0x1395 SWAP1 DUP3 PUSH2 0x20F3 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x7 SLOAD LT PUSH2 0x146C JUMPI PUSH2 0x13FB PUSH0 SWAP3 DUP5 SWAP3 CALLER DUP6 MSTORE PUSH1 0x9 DUP5 MSTORE PUSH1 0x40 DUP6 KECCAK256 SSTORE PUSH2 0x13BE DUP2 PUSH1 0x7 SLOAD PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP4 DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xB02 JUMPI PUSH0 SWAP2 PUSH2 0x144F JUMPI JUMPDEST POP ISZERO PUSH2 0x1415 JUMPI STOP JUMPDEST PUSH1 0x15 PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH21 0x165A595B19081D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1466 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x4AA JUMPI PUSH2 0x49C DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP4 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x15 DUP2 DUP7 ADD MSTORE PUSH21 0x139BC8199D5B991CC81A5B881D1A19481D985D5B1D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2A DUP2 DUP7 ADD MSTORE PUSH32 0x4E6F2066756E6473206C65667420746F20636C61696D206F7220616C72656164 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3C9031B630B4B6B2B217 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0xE PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH14 0x24B73B30B634B210383937B7B317 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP8 SWAP2 ADD PUSH2 0x1322 JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xB0D JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17119229 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL DUP1 ISZERO PUSH2 0xB02 JUMPI PUSH1 0x20 SWAP2 PUSH0 SWAP2 PUSH2 0x1671 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1688 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x879 JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP3 PUSH2 0x165F JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD DUP3 ISZERO DUP1 ISZERO DUP5 SUB PUSH2 0xB0D JUMPI DUP2 PUSH0 MSTORE PUSH1 0x20 SWAP4 PUSH1 0xA DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0xC DUP7 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x9 DUP5 ADD SLOAD PUSH0 MSTORE DUP7 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE DUP7 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1871 JUMPI DUP2 SWAP1 DUP2 PUSH2 0x1863 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1848 JUMPI JUMPDEST POP ISZERO PUSH2 0x1803 JUMPI ISZERO PUSH2 0x17B5 JUMPI PUSH1 0xC ADD SWAP3 DUP4 SLOAD SWAP3 PUSH0 NOT DUP5 ADD SWAP4 DUP5 GT PUSH2 0x17A1 JUMPI PUSH32 0xCEF8FAC05AFB87995942422EAC900DE6AF11A555D80D075340AF81DB492119FE SWAP5 DUP5 DUP3 PUSH1 0x40 SWAP7 PUSH2 0x174C SWAP5 SUB PUSH2 0x1759 JUMPI JUMPDEST POP POP PUSH2 0x2100 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH2 0x1773 PUSH2 0x1769 PUSH2 0x179A SWAP4 DUP6 PUSH2 0x2087 JUMP JUMPDEST SWAP2 SWAP1 SLOAD SWAP3 DUP6 PUSH2 0x2087 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 DUP4 SHL DUP2 DUP2 SHL NOT SWAP1 SWAP3 AND SWAP5 SWAP1 SWAP3 SHL SWAP5 SWAP1 SWAP5 SHR AND SWAP1 SWAP3 SHL OR SWAP1 SSTORE JUMP JUMPDEST DUP7 DUP1 PUSH2 0x1745 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xB ADD SWAP3 DUP4 SLOAD SWAP3 PUSH0 NOT DUP5 ADD SWAP4 DUP5 GT PUSH2 0x17A1 JUMPI PUSH32 0xCEF8FAC05AFB87995942422EAC900DE6AF11A555D80D075340AF81DB492119FE SWAP5 DUP5 DUP3 PUSH1 0x40 SWAP7 PUSH2 0x17FE SWAP5 SUB PUSH2 0x1759 JUMPI POP POP PUSH2 0x2100 JUMP JUMPDEST PUSH2 0x174C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420696E64657820666F72207061727469636970616E74730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP1 PUSH2 0x1856 JUMPI JUMPDEST DUP7 PUSH2 0x16F7 JUMP JUMPDEST POP PUSH1 0xB DUP3 ADD SLOAD DUP5 LT PUSH2 0x1850 JUMP JUMPDEST PUSH1 0xC DUP5 ADD SLOAD DUP7 LT SWAP2 POP PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F74206A6F696E6564207468697320706F7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xB0D JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xB0D JUMPI PUSH2 0x18F2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1EEC JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17119229 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB02 JUMPI PUSH0 SWAP2 PUSH2 0x1E64 JUMPI JUMPDEST POP PUSH2 0x1950 PUSH2 0x1949 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH2 0x1FE0 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD ISZERO PUSH2 0x1E1F JUMPI PUSH1 0x64 CALLDATALOAD ISZERO PUSH2 0x1DCC JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD GT PUSH2 0x1D6B JUMPI PUSH1 0x4 SLOAD PUSH2 0x1977 DUP2 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xB02 JUMPI PUSH0 SWAP2 PUSH2 0x1D4C JUMPI JUMPDEST POP ISZERO PUSH2 0x1CF5 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x93CBF217 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP4 PUSH1 0x20 SWAP3 DUP6 SWAP3 PUSH1 0x64 SWAP3 DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP2 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xB02 JUMPI PUSH0 SWAP3 PUSH2 0x1CD4 JUMPI JUMPDEST POP DUP1 PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1CC0 JUMPI PUSH2 0x1A50 DUP3 SLOAD PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1C85 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1C0F JUMPI SWAP2 DUP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP3 PUSH2 0x1BD1 SWAP5 PUSH0 SWAP2 PUSH2 0x1C04 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH0 PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xA DUP3 ADD SWAP6 AND SWAP5 DUP1 SLOAD DUP7 PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB CALLER PUSH1 0x40 SHL AND SWAP2 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND OR OR SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x7 DUP3 ADD SSTORE TIMESTAMP PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x1B11 PUSH1 0x9 DUP3 ADD SWAP2 PUSH1 0x1 DUP4 SSTORE PUSH1 0xB CALLER SWAP2 ADD PUSH2 0x20B0 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 SLOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x37BB26F2981AD94B38AFE928452CAD1BCA628B82F1781D95EC69D53ACF5D0D9B PUSH1 0x40 MLOAD DUP1 PUSH2 0x1B79 PUSH2 0x140 DUP8 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD DUP6 PUSH2 0x1F9D JUMP JUMPDEST CALLER PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 SWAP8 DUP9 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x120 DUP4 ADD MSTORE SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x1F9D JUMP JUMPDEST CALLER PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP4 ADD MLOAD DUP9 PUSH2 0x1A84 JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x1C6D JUMPI POP DUP3 PUSH2 0x1BD1 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1C55 JUMPI JUMPDEST POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0x1A97 JUMP JUMPDEST DUP6 ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x1C49 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1C19 JUMP JUMPDEST PUSH2 0x1CB0 SWAP1 DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1CB6 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2071 JUMP JUMPDEST DUP6 PUSH2 0x1A59 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1CEE SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x841 JUMPI PUSH2 0x833 DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x1A29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43726561746F722073686F756C64206465706F7369742074686520696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x185B08185B5BDD5B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1D65 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49C DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP5 PUSH2 0x19C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D657261746F72206D757374206265206C657373207468616E206F722065 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x38BAB0B6103A37903232B737B6B4B730BA37B9 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E7465726573742064656E6F6D696E61746F72206D75737420626520706F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6974697665 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F746174696F6E206379636C65206D75737420626520706F73697469766500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1E7D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x879 JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP3 PUSH2 0x1930 JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1CC0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1CC0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1CC0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1CC0 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1F15 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x1ECB JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0xB0D JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB0D JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xB0D JUMPI DUP2 PUSH1 0x20 PUSH2 0x1F62 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1EEC JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1F93 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1F7F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1F74 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xB0D JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xB0D JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x17A1 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1FF4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E73756666696369656E7420666565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x17A1 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xB0D JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xB0D JUMPI SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xB0D JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xB0D JUMPI SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x207C JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2071 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x209C JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x1CC0 JUMPI DUP3 PUSH2 0x20D3 SWAP2 PUSH1 0x1 PUSH2 0x20F1 SWAP6 ADD DUP2 SSTORE PUSH2 0x2087 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x17A1 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x212C JUMPI PUSH0 NOT ADD SWAP1 PUSH2 0x2116 DUP3 DUP3 PUSH2 0x2087 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x17A1 JUMPI JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x7 PUSH2 0x216F PUSH1 0x40 PUSH0 KECCAK256 SWAP3 PUSH1 0x6 DUP5 ADD SLOAD SWAP1 PUSH2 0x2140 JUMP JUMPDEST SWAP2 ADD SLOAD SWAP1 DUP2 ISZERO PUSH2 0x217D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0x2198 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E617475726520766572696669636174696F6E206661696C6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x21E4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2274 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2488 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP4 MSTORE PUSH1 0x3C DUP3 ADD MSTORE PUSH1 0x3C DUP2 MSTORE PUSH2 0x22C9 DUP2 PUSH2 0x1EB0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2488 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x22EF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x2337 JUMPI PUSH2 0x2330 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH0 BYTE SWAP1 PUSH2 0x2405 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x23B0 JUMPI DUP1 PUSH2 0x2353 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x236D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x238E JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x2398 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x23F3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x247C JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xB02 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2472 JUMPI SWAP1 PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x1 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP NUMBER 0xD2 RETURN MULMOD SWAP2 EXTCODEHASH PUSH11 0xFC5D717F60864D2D192B69 SWAP7 RETURNDATASIZE 0x25 KECCAK256 0x4B PUSH11 0x12765E2795BF027FA26469 PUSH17 0x667358221220F813019B501B78066A0870 SUB 0xE2 DUP14 CREATE2 0xCE 0xD9 0xF7 PUSH28 0x35226B8590CA41C9FCFCBD2EB464736F6C6343000819003300000000 ",
							"sourceMap": "674:18617:12:-:0;;;;;;;969:1;;674:18617;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 7985,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 7916,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 8250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 8007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint128_fromMemory": {
									"entryPoint": 8129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint64_fromMemory": {
									"entryPoint": 8274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_packed_uint256_address_uint256_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 8093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_pop_array_address_dyn_storage_ptr": {
									"entryPoint": 8448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_push_from_address_to_array_address_dyn_storage_ptr": {
									"entryPoint": 8368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"checked_add_uint256": {
									"entryPoint": 8160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 8435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clear_storage_range_bytes1": {
									"entryPoint": 8305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_26899": {
									"entryPoint": 7837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_31994": {
									"entryPoint": 7856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_calculateRiskPoolBalance": {
									"entryPoint": 8531,
									"id": 2789,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_checkInitializing": {
									"entryPoint": 9156,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 8911,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_getEthSignedMessageHash": {
									"entryPoint": 8844,
									"id": 3028,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_throwError": {
									"entryPoint": 9025,
									"id": 919,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_transferOwnership_inner": {
									"entryPoint": 8731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_tryRecover": {
									"entryPoint": 9221,
									"id": 834,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"fun_tryRecover_646": {
									"entryPoint": 8967,
									"id": 646,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"increment_uint256": {
									"entryPoint": 8236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"require_helper_stringliteral_25ad": {
									"entryPoint": 8669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_7d42": {
									"entryPoint": 8173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_b77f": {
									"entryPoint": 8593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_address_dyn_ptr": {
									"entryPoint": 8327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"update_storage_value_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f905f3560e01c90816307dd3f4414611e83575080630fae6443146118b6578063210eaeae1461168e5780632d971e631461160f5780632eb4a7ab146115f257806331a0edec14610f175780634a80409e146115ca5780634d781b311461159d5780634da1ec401461154357806361e7d8051461128c578063715018a61461122557806373b2e80e146111ed57806377d5d2dc146111785780637c382d0b1461112a5780637d77990c14611109578063818c554814610fd157806382199e3f14610fb05780638da5cb5b14610f7c57806391dc969e14610f3957806397d7577614610f17578063ae169a5014610df5578063b7db43c814610cf4578063bf2d9e0b14610cd7578063c3c3df4f14610b86578063c4d66de8146108d2578063ca829f10146105a1578063ec71687b14610583578063f2fde38b14610556578063f78aedf9146101c5578063f851a4401461019c5763fa54080114610173575f80fd5b3461019957602036600319011261019957602061019160043561228c565b604051908152f35b80fd5b50346101995780600319360112610199576002546040516001600160a01b039091168152602090f35b5034610199576060366003190112610199576004356024356001600160401b038111610552576101f9903690600401611f47565b918181526020600a81526040822092600b84019081549160088601928354111561051f57818552600c845260408520600987015490818752855260408620335f52855260ff60405f2054166104bc576040518581018481523360601b6bffffffffffffffffffffffff19166020820152603481018390526044356054820152979896976102c6976102d69290916102a9916102a181607484015b03601f198101835282611ecb565b51902061228c565b6002546001600160a01b0399908a16928a926102cf929190612307565b90929192612341565b1614612191565b828752600c85526040808820918852908552808720335f818152918752908290208054600160ff1991821681179092556008548b8301805495516323b872dd60e01b8152600481019590955230602486015260448501959095529198909492918891839160649183918e91165af19081156104b1579061035d918a91610484575b506121dd565b335f52600e8901865260ff60405f20541615610473575b505460048801549160068901549360078a015495549660405198610100928a5282828b01528a9b80546103a681611f65565b80958d0152610120956001821691825f14610449575050600114610402575b508a5f805160206124a88339815191528b808f8d8d8d8d8d3360408801526060870152608086015260a085015260c084015260e08301520390a180f35b9093949b508a52808a20928a935b838510610436575050505086010196815f805160206124a8833981519152875f806103c5565b8054858c01870152938201938101610410565b16868d015250505050151560051b8701019750815f805160206124a8833981519152875f806103c5565b61047e9033906120b0565b5f610374565b6104a49150883d8a116104aa575b61049c8183611ecb565b81019061203a565b5f610357565b503d610492565b6040513d8b823e3d90fd5b60405162461bcd60e51b815260048101869052603560248201527f596f75206861766520616c7265616479206a6f696e6564207468697320706f74604482015274081a5b881d1a194818dd5c9c995b9d081c9bdd5b99605a1b6064820152608490fd5b60405162461bcd60e51b815260048101859052600b60248201526a141bdd081a5cc8199d5b1b60aa1b6044820152606490fd5b8280fd5b503461019957602036600319011261019957610580610573611f31565b61057b6122cf565b61221b565b80f35b50346101995780600319360112610199576020600654604051908152f35b506080366003190112610199576004356024358183526020600a8152604084209160018060a01b03938486541694806001541691600a860195856001600160401b03946084868a5416918c6040519c8d948593639371df5160e01b855260048501526024840152604435604484015260643560648401525af19788156104b157899861089f575b50600b810197885490811561088b576106468b93928692068b612087565b90549060031b1c169561065c87600c84016120b0565b8261066d8b54600185015490612140565b9261068861067f6064860480966120f3565b94600554611fe0565b6005556106958487612153565b9485946106b260038401916106ad83549889926120f3565b611fe0565b968b5f52600d84018d528760405f20556106d160028501918254611fe0565b905555885f52600e81018a5260405f20600160ff198254161790554260058201558682541696600154169660405190631711922960e31b82528860048301528b82602481845afa8015610880576001600160801b036064918e948791610853575b5016996107408b3414611fed565b6040519a8b9384926393cbf21760e01b845260048401528860248401528760448401525af1978815610848577f9ef3fbd1495a53d36401c5153be21a35a6214297031b5e106b12307835851d2f9860e0986009949161081b575b50169a8b6001600160401b03198254161790550198895497604051958652898601528760408601526060850152608084015260a083015260c0820152a18354928315159182610809575b50508484556107f1578380f35b610802928452832090810190612071565b5f80808380f35b6108129061202c565b90555f806107e4565b61083b91508c8d3d10610841575b6108338183611ecb565b810190612052565b5f61079a565b503d610829565b6040513d84823e3d90fd5b6108739150853d8711610879575b61086b8183611ecb565b810190611fc1565b5f610732565b503d610861565b6040513d86823e3d90fd5b634e487b7160e01b8b52601260045260248bfd5b9097508581813d83116108cb575b6108b78183611ecb565b810103126108c75751965f610628565b8880fd5b503d6108ad565b5034610b0d57602080600319360112610b0d576108ed611f31565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009182549060ff8260401c1615916001600160401b03811680159081610b7e575b6001149081610b74575b159081610b6b575b50610b595767ffffffffffffffff198116600117855582610b3a575b506109666123c4565b61096e6123c4565b6109773361221b565b604051631a33757d60e01b8152600260048201526022602160991b019084816024815f865af1908115610b02578591610b11575b50506bffffffffffffffffffffffff60a01b9080826008541617600855803b15610b0d575f8091600460405180948193634e606c4760e01b83525af18015610b0257610aef575b50732fc95838c71e76ec69ff817983bff17c710f34e091823b15610aeb57866040516336b91f2b60e01b815281816024818373e4860d3973802c7c42450d7b9741921c7711d039998a60048401525af1801561084857610ad7575b505060018060a01b031681875416178655736cc14824ea2918f5de5c2f75a9da968ad4bd6344816001541617600155600254161760025566038d7ea4c68000600655610a97578280f35b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29168ff000000000000000019815416905560405160018152a15f808280f35b610ae090611e9d565b610aeb57865f610a4d565b8680fd5b610afa919650611e9d565b5f945f6109f2565b6040513d5f823e3d90fd5b5f80fd5b813d8311610b33575b610b248183611ecb565b81010312610b0d57835f6109ab565b503d610b1a565b68ffffffffffffffffff1916680100000000000000011784555f61095d565b60405163f92ee8a960e01b8152600490fd5b9050155f610941565b303b159150610939565b84915061092f565b34610b0d57602080600319360112610b0d576004355f52600a815260405f2090604051905f928054610bb781611f65565b80855290600190818116908115610cb95750600114610c82575b5050610be283610c2e950384611ecb565b6001810154906002810154600382015460048301546005840154600685015491600786015493600887015495600a6009890154980154986040519c8d9c8d610180908181520190611f9d565b9a8c015260408b015260608a0152608089015260a088015260c087015260e08601526101008501526101208401526001600160401b03811661014084015260018060a01b039060401c166101608301520390f35b5f8381528481209096505b828710610ca657505050928201810192610be283610bd1565b8054868801860152958401958101610c8d565b60ff1916858701525050151560051b830182019350610be283610bd1565b34610b0d575f366003190112610b0d576020600554604051908152f35b34610b0d576020366003190112610b0d576004358015158103610b0d57610d196122cf565b15610dd5576005548015610d97575f600581905560085460405163a9059cbb60e01b81523360048201526024810193909352602091839160449183916001600160a01b03165af18015610b0257610d76915f91610d7857506121dd565b005b610d91915060203d6020116104aa5761049c8183611ecb565b82610357565b60405162461bcd60e51b81526020600482015260166024820152754e6f20726576656e756520746f20776974686472617760501b6044820152606490fd5b5f80808047818115610dec575b3390f115610b0257005b506108fc610de2565b34610b0d57602080600319360112610b0d5760043590815f52600a8152600d60405f2001335f5280825260405f205415610edd57335f8181529183526040808320805490849055600854915163a9059cbb60e01b8152600481019390935260248301819052919492849186916044918391906001600160a01b03165af1928315610b0257610ead6060947f24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb7965f91610ec057506121dd565b60405192835233908301526040820152a1005b610ed79150833d85116104aa5761049c8183611ecb565b87610357565b60405162461bcd60e51b81526004810183905260126024820152714e6f2072657761726420746f20636c61696d60701b6044820152606490fd5b34610b0d575f366003190112610b0d576040516022602160991b018152602090f35b34610b0d576020366003190112610b0d57610f52611f31565b610f5a6122cf565b600280546001600160a01b0319166001600160a01b0392909216919091179055005b34610b0d575f366003190112610b0d575f80516020612488833981519152546040516001600160a01b039091168152602090f35b34610b0d576020366003190112610b0d57610fc96122cf565b600435600655005b34610b0d576080366003190112610b0d576024356004356044356001600160401b038111610b0d5761100a61107e913690600401611f47565b825f52600a60205261106060405f20936040516102a18161029360208201948a606435913390889290916074949284526bffffffffffffffffffffffff199060601b166020840152603483015260548201520190565b6002546001600160a01b039081169290916102cf916102c691612307565b6002810191825481811061109e5781600361109a9401556120f3565b9055005b60405162461bcd60e51b815260206004820152603860248201527f616d6f756e742073686f756c64206265206c657373207468616e206f7220657160448201527f75616c20746f207269736b20706f6f6c2062616c616e636500000000000000006064820152608490fd5b34610b0d576040366003190112610b0d576020610191602435600435612153565b6040366003190112610b0d576024356111416122cf565b600435600355805f811561116f575b5f80809381933390f115610b025761116a90600754611fe0565b600755005b506108fc611150565b34610b0d575f366003190112610b0d576111906122cf565b604051634aa7d2f760e11b81523060048201523360248201526020816044815f6022602160991b015af18015610b02576111c657005b602090813d83116111e6575b6111dc8183611ecb565b81010312610b0d57005b503d6111d2565b34610b0d576020366003190112610b0d576001600160a01b0361120e611f31565b165f526009602052602060405f2054604051908152f35b34610b0d575f366003190112610b0d5761123d6122cf565b5f8051602061248883398151915280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610b0d576040366003190112610b0d5760246001600160401b036004358235828111610b0d5736602382011215610b0d578060040135928311610b0d5760058360051b94808684010192368411610b0d5760405193602094858101903360601b82528760348201526034815261130281611eb0565b5190209160035497611319876040519b018b611ecb565b8952830185808a015b8383106115335750505050935f945b875186101561136e5785841b8801850151908181101561135e575f528452600160405f205b950194611331565b905f528452600160405f20611356565b90868592036114ff57335f526009825260405f2054818110156114a85761139590826120f3565b90816007541061146c576113fb5f9284923385526009845260408520556113be816007546120f3565b60075560085460405163a9059cbb60e01b81523360048201526024810192909252909384926001600160a01b039092169183919082906044820190565b03925af1908115610b02575f9161144f575b501561141557005b60156064926040519262461bcd60e51b8452600484015282015274165a595b19081d1c985b9cd9995c8819985a5b1959605a1b6044820152fd5b6114669150823d84116104aa5761049c8183611ecb565b8361140d565b60405162461bcd60e51b81526004810184905260158186015274139bc8199d5b991cc81a5b881d1a19481d985d5b1d605a1b6044820152606490fd5b60405162461bcd60e51b815260048101849052602a818601527f4e6f2066756e6473206c65667420746f20636c61696d206f7220616c726561646044820152693c9031b630b4b6b2b21760b11b6064820152608490fd5b50600e6064926040519262461bcd60e51b845260048401528201526d24b73b30b634b210383937b7b31760911b6044820152fd5b8235815291810191879101611322565b34610b0d576060366003190112610b0d576044356001600160a01b03811690819003610b0d576004355f52600c60205260405f206024355f5260205260405f20905f52602052602060ff60405f2054166040519015158152f35b34610b0d576020366003190112610b0d576004355f52600a6020526020600260405f200154604051908152f35b34610b0d575f366003190112610b0d576008546040516001600160a01b039091168152602090f35b34610b0d575f366003190112610b0d576020600354604051908152f35b34610b0d575f366003190112610b0d575f54600154604051631711922960e31b81526001600160a01b0391821660048201529160209183916024918391165afa8015610b02576020915f91611671575b506001600160801b0360405191168152f35b6116889150823d84116108795761086b8183611ecb565b8261165f565b34610b0d576060366003190112610b0d57604435602435600435821580158403610b0d57815f52602093600a855260405f2091600c865260405f2060098401545f52865260405f20335f52865260ff60405f2054161561187157819081611863575b8115611848575b501561180357156117b557600c01928354925f1984019384116117a1577fcef8fac05afb87995942422eac900de6af11a555d80d075340af81db492119fe94848260409661174c9403611759575b5050612100565b82519182523390820152a1005b61177361176961179a9385612087565b9190549285612087565b81546001600160a01b03600392831b81811b199092169490921b9490941c1690921b179055565b8680611745565b634e487b7160e01b5f52601160045260245ffd5b600b01928354925f1984019384116117a1577fcef8fac05afb87995942422eac900de6af11a555d80d075340af81db492119fe9484826040966117fe9403611759575050612100565b61174c565b60405162461bcd60e51b815260048101869052601e60248201527f496e76616c696420696e64657820666f72207061727469636970616e747300006044820152606490fd5b905080611856575b866116f7565b50600b8201548410611850565b600c840154861091506116f0565b60405162461bcd60e51b815260048101879052601c60248201527f596f752068617665206e6f74206a6f696e6564207468697320706f74000000006044820152606490fd5b60e0366003190112610b0d576004356001600160401b038111610b0d5736602382011215610b0d576118f2903690602481600401359101611eec565b5f54600154604051631711922960e31b81526001600160a01b0391821660048201529160209183916024918391165afa908115610b02575f91611e64575b506119506119496006546001600160801b038416611fe0565b3414611fed565b60443515611e1f5760643515611dcc5760643560843511611d6b576004546119778161202c565b60049081556008546040516323b872dd60e01b8152339281019290925230602483015260c4356044830152602090829060649082905f906001600160a01b03165af1908115610b02575f91611d4c575b5015611cf5575f80546001546040516393cbf21760e01b81526001600160a01b039182166004820152602480359082015260448101939093529193602092859260649284926001600160801b0390911691165af1918215610b02575f92611cd4575b50805f52600a60205260405f2083516001600160401b038111611cc057611a508254611f65565b601f8111611c85575b506020601f8211600114611c0f5791815f805160206124a88339815191529692611bd1945f91611c04575b508160011b915f199060031b1c19161781555b60c43560018201555f60028201556001600160401b03600a8201951694805486600160401b600160e01b033360401b169163ffffffff60e01b161717905560443560048201556084356006820155606435600782015542600582015560a4356008820155611b11600982019160018355600b3391016120b0565b835f52600c60205260405f2090545f5260205260405f20335f5260205260405f20600160ff198254161790557f37bb26f2981ad94b38afe928452cad1bca628b82f1781d95ec69d53acf5d0d9b60405180611b79610140878352806020840152820185611f9d565b33604083015260c4356060830152604435608083015260843560a083015260643560c083015260a43560e083015261010097888301526024356101208301520390a16040519384938452806020850152830190611f9d565b33604083015260c4356060830152604435608083015260843560a083015260643560c083015260a43560e08301520390a1005b905083015188611a84565b825f5260205f20905f5b601f1984168110611c6d575082611bd194926001925f805160206124a88339815191529995601f19811610611c55575b5050811b018155611a97565b8501515f1960f88460031b161c191690558880611c49565b9091602060018192858b015181550193019101611c19565b611cb090835f5260205f20601f840160051c81019160208510611cb6575b601f0160051c0190612071565b85611a59565b9091508190611ca3565b634e487b7160e01b5f52604160045260245ffd5b611cee91925060203d602011610841576108338183611ecb565b9083611a29565b60405162461bcd60e51b815260206004820152602960248201527f43726561746f722073686f756c64206465706f7369742074686520696e697469604482015268185b08185b5bdd5b9d60ba1b6064820152608490fd5b611d65915060203d6020116104aa5761049c8183611ecb565b846119c7565b60405162461bcd60e51b815260206004820152603360248201527f4e756d657261746f72206d757374206265206c657373207468616e206f72206560448201527238bab0b6103a37903232b737b6b4b730ba37b960691b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f496e7465726573742064656e6f6d696e61746f72206d75737420626520706f73604482015264697469766560d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f526f746174696f6e206379636c65206d75737420626520706f736974697665006044820152606490fd5b611e7d915060203d6020116108795761086b8183611ecb565b82611930565b34610b0d575f366003190112610b0d576020906007548152f35b6001600160401b038111611cc057604052565b606081019081106001600160401b03821117611cc057604052565b90601f801991011681019081106001600160401b03821117611cc057604052565b9291926001600160401b038211611cc05760405191611f15601f8201601f191660200184611ecb565b829481845281830111610b0d578281602093845f960137010152565b600435906001600160a01b0382168203610b0d57565b9080601f83011215610b0d57816020611f6293359101611eec565b90565b90600182811c92168015611f93575b6020831014611f7f57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611f74565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90816020910312610b0d57516001600160801b0381168103610b0d5790565b919082018092116117a157565b15611ff457565b60405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b6044820152606490fd5b5f1981146117a15760010190565b90816020910312610b0d57518015158103610b0d5790565b90816020910312610b0d57516001600160401b0381168103610b0d5790565b81811061207c575050565b5f8155600101612071565b805482101561209c575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b90815491600160401b831015611cc057826120d39160016120f195018155612087565b90919060018060a01b038084549260031b9316831b921b1916179055565b565b919082039182116117a157565b8054801561212c575f1901906121168282612087565b81549060018060a01b039060031b1b1916905555565b634e487b7160e01b5f52603160045260245ffd5b818102929181159184041417156117a157565b5f52600a602052600761216f60405f2092600684015490612140565b91015490811561217d570490565b634e487b7160e01b5f52601260045260245ffd5b1561219857565b60405162461bcd60e51b815260206004820152601d60248201527f5369676e617475726520766572696669636174696f6e206661696c65640000006044820152606490fd5b156121e457565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b6001600160a01b03908116908115612274575f8051602061248883398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b604051631e4fbdf760e01b81525f6004820152602490fd5b60405160208101917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352603c820152603c81526122c981611eb0565b51902090565b5f80516020612488833981519152546001600160a01b031633036122ef57565b60405163118cdaa760e01b8152336004820152602490fd5b8151919060418303612337576123309250602082015190606060408401519301515f1a90612405565b9192909190565b50505f9160029190565b60048110156123b05780612353575050565b6001810361236d5760405163f645eedf60e01b8152600490fd5b6002810361238e5760405163fce698f760e01b815260048101839052602490fd5b6003146123985750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c16156123f357565b604051631afcd79f60e31b8152600490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161247c579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610b02575f516001600160a01b0381161561247257905f905f90565b505f906001905f90565b5050505f916003919056fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930043d2f309913f6afc5d717f60864d2d192b69963d25204b6a12765e2795bf027fa2646970667358221220f813019b501b78066a087003e28df5ced9f77b35226b8590ca41c9fcfcbd2eb464736f6c63430008190033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x7DD3F44 EQ PUSH2 0x1E83 JUMPI POP DUP1 PUSH4 0xFAE6443 EQ PUSH2 0x18B6 JUMPI DUP1 PUSH4 0x210EAEAE EQ PUSH2 0x168E JUMPI DUP1 PUSH4 0x2D971E63 EQ PUSH2 0x160F JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x15F2 JUMPI DUP1 PUSH4 0x31A0EDEC EQ PUSH2 0xF17 JUMPI DUP1 PUSH4 0x4A80409E EQ PUSH2 0x15CA JUMPI DUP1 PUSH4 0x4D781B31 EQ PUSH2 0x159D JUMPI DUP1 PUSH4 0x4DA1EC40 EQ PUSH2 0x1543 JUMPI DUP1 PUSH4 0x61E7D805 EQ PUSH2 0x128C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1225 JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x11ED JUMPI DUP1 PUSH4 0x77D5D2DC EQ PUSH2 0x1178 JUMPI DUP1 PUSH4 0x7C382D0B EQ PUSH2 0x112A JUMPI DUP1 PUSH4 0x7D77990C EQ PUSH2 0x1109 JUMPI DUP1 PUSH4 0x818C5548 EQ PUSH2 0xFD1 JUMPI DUP1 PUSH4 0x82199E3F EQ PUSH2 0xFB0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF7C JUMPI DUP1 PUSH4 0x91DC969E EQ PUSH2 0xF39 JUMPI DUP1 PUSH4 0x97D75776 EQ PUSH2 0xF17 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0xDF5 JUMPI DUP1 PUSH4 0xB7DB43C8 EQ PUSH2 0xCF4 JUMPI DUP1 PUSH4 0xBF2D9E0B EQ PUSH2 0xCD7 JUMPI DUP1 PUSH4 0xC3C3DF4F EQ PUSH2 0xB86 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8D2 JUMPI DUP1 PUSH4 0xCA829F10 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xEC71687B EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xF78AEDF9 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x19C JUMPI PUSH4 0xFA540801 EQ PUSH2 0x173 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH2 0x191 PUSH1 0x4 CALLDATALOAD PUSH2 0x228C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x199 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x199 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x552 JUMPI PUSH2 0x1F9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1F47 JUMP JUMPDEST SWAP2 DUP2 DUP2 MSTORE PUSH1 0x20 PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 PUSH1 0xB DUP5 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x8 DUP7 ADD SWAP3 DUP4 SLOAD GT ISZERO PUSH2 0x51F JUMPI DUP2 DUP6 MSTORE PUSH1 0xC DUP5 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x9 DUP8 ADD SLOAD SWAP1 DUP2 DUP8 MSTORE DUP6 MSTORE PUSH1 0x40 DUP7 KECCAK256 CALLER PUSH0 MSTORE DUP6 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD DUP6 DUP2 ADD DUP5 DUP2 MSTORE CALLER PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x54 DUP3 ADD MSTORE SWAP8 SWAP9 SWAP7 SWAP8 PUSH2 0x2C6 SWAP8 PUSH2 0x2D6 SWAP3 SWAP1 SWAP2 PUSH2 0x2A9 SWAP2 PUSH2 0x2A1 DUP2 PUSH1 0x74 DUP5 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1ECB JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x228C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 SWAP1 DUP11 AND SWAP3 DUP11 SWAP3 PUSH2 0x2CF SWAP3 SWAP2 SWAP1 PUSH2 0x2307 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2341 JUMP JUMPDEST AND EQ PUSH2 0x2191 JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH1 0xC DUP6 MSTORE PUSH1 0x40 DUP1 DUP9 KECCAK256 SWAP2 DUP9 MSTORE SWAP1 DUP6 MSTORE DUP1 DUP8 KECCAK256 CALLER PUSH0 DUP2 DUP2 MSTORE SWAP2 DUP8 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 SLOAD DUP12 DUP4 ADD DUP1 SLOAD SWAP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP2 SWAP9 SWAP1 SWAP5 SWAP3 SWAP2 DUP9 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP15 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4B1 JUMPI SWAP1 PUSH2 0x35D SWAP2 DUP11 SWAP2 PUSH2 0x484 JUMPI JUMPDEST POP PUSH2 0x21DD JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0xE DUP10 ADD DUP7 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x473 JUMPI JUMPDEST POP SLOAD PUSH1 0x4 DUP9 ADD SLOAD SWAP2 PUSH1 0x6 DUP10 ADD SLOAD SWAP4 PUSH1 0x7 DUP11 ADD SLOAD SWAP6 SLOAD SWAP7 PUSH1 0x40 MLOAD SWAP9 PUSH2 0x100 SWAP3 DUP11 MSTORE DUP3 DUP3 DUP12 ADD MSTORE DUP11 SWAP12 DUP1 SLOAD PUSH2 0x3A6 DUP2 PUSH2 0x1F65 JUMP JUMPDEST DUP1 SWAP6 DUP14 ADD MSTORE PUSH2 0x120 SWAP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH0 EQ PUSH2 0x449 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x402 JUMPI JUMPDEST POP DUP11 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 DUP1 DUP16 DUP14 DUP14 DUP14 DUP14 DUP14 CALLER PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST SWAP1 SWAP4 SWAP5 SWAP12 POP DUP11 MSTORE DUP1 DUP11 KECCAK256 SWAP3 DUP11 SWAP4 JUMPDEST DUP4 DUP6 LT PUSH2 0x436 JUMPI POP POP POP POP DUP7 ADD ADD SWAP7 DUP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 PUSH0 DUP1 PUSH2 0x3C5 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP13 ADD DUP8 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x410 JUMP JUMPDEST AND DUP7 DUP14 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP8 ADD ADD SWAP8 POP DUP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 PUSH0 DUP1 PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x47E SWAP1 CALLER SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH0 PUSH2 0x374 JUMP JUMPDEST PUSH2 0x4A4 SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x4AA JUMPI JUMPDEST PUSH2 0x49C DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH0 PUSH2 0x357 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C7265616479206A6F696E6564207468697320706F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x81A5B881D1A194818DD5C9C995B9D081C9BDD5B99 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x141BDD081A5CC8199D5B1B PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x580 PUSH2 0x573 PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0x57B PUSH2 0x22CF JUMP JUMPDEST PUSH2 0x221B JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x199 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP2 DUP4 MSTORE PUSH1 0x20 PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP7 SLOAD AND SWAP5 DUP1 PUSH1 0x1 SLOAD AND SWAP2 PUSH1 0xA DUP7 ADD SWAP6 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 PUSH1 0x84 DUP7 DUP11 SLOAD AND SWAP2 DUP13 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP5 DUP6 SWAP4 PUSH4 0x9371DF51 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP5 ADD MSTORE GAS CALL SWAP8 DUP9 ISZERO PUSH2 0x4B1 JUMPI DUP10 SWAP9 PUSH2 0x89F JUMPI JUMPDEST POP PUSH1 0xB DUP2 ADD SWAP8 DUP9 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x88B JUMPI PUSH2 0x646 DUP12 SWAP4 SWAP3 DUP7 SWAP3 MOD DUP12 PUSH2 0x2087 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP6 PUSH2 0x65C DUP8 PUSH1 0xC DUP5 ADD PUSH2 0x20B0 JUMP JUMPDEST DUP3 PUSH2 0x66D DUP12 SLOAD PUSH1 0x1 DUP6 ADD SLOAD SWAP1 PUSH2 0x2140 JUMP JUMPDEST SWAP3 PUSH2 0x688 PUSH2 0x67F PUSH1 0x64 DUP7 DIV DUP1 SWAP7 PUSH2 0x20F3 JUMP JUMPDEST SWAP5 PUSH1 0x5 SLOAD PUSH2 0x1FE0 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x695 DUP5 DUP8 PUSH2 0x2153 JUMP JUMPDEST SWAP5 DUP6 SWAP5 PUSH2 0x6B2 PUSH1 0x3 DUP5 ADD SWAP2 PUSH2 0x6AD DUP4 SLOAD SWAP9 DUP10 SWAP3 PUSH2 0x20F3 JUMP JUMPDEST PUSH2 0x1FE0 JUMP JUMPDEST SWAP7 DUP12 PUSH0 MSTORE PUSH1 0xD DUP5 ADD DUP14 MSTORE DUP8 PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH2 0x6D1 PUSH1 0x2 DUP6 ADD SWAP2 DUP3 SLOAD PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 SSTORE SSTORE DUP9 PUSH0 MSTORE PUSH1 0xE DUP2 ADD DUP11 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0x5 DUP3 ADD SSTORE DUP7 DUP3 SLOAD AND SWAP7 PUSH1 0x1 SLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x17119229 PUSH1 0xE3 SHL DUP3 MSTORE DUP9 PUSH1 0x4 DUP4 ADD MSTORE DUP12 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL DUP1 ISZERO PUSH2 0x880 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x64 SWAP2 DUP15 SWAP5 DUP8 SWAP2 PUSH2 0x853 JUMPI JUMPDEST POP AND SWAP10 PUSH2 0x740 DUP12 CALLVALUE EQ PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP4 DUP5 SWAP3 PUSH4 0x93CBF217 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP9 PUSH1 0x24 DUP5 ADD MSTORE DUP8 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP8 DUP9 ISZERO PUSH2 0x848 JUMPI PUSH32 0x9EF3FBD1495A53D36401C5153BE21A35A6214297031B5E106B12307835851D2F SWAP9 PUSH1 0xE0 SWAP9 PUSH1 0x9 SWAP5 SWAP2 PUSH2 0x81B JUMPI JUMPDEST POP AND SWAP11 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP9 DUP10 SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE DUP10 DUP7 ADD MSTORE DUP8 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE LOG1 DUP4 SLOAD SWAP3 DUP4 ISZERO ISZERO SWAP2 DUP3 PUSH2 0x809 JUMPI JUMPDEST POP POP DUP5 DUP5 SSTORE PUSH2 0x7F1 JUMPI DUP4 DUP1 RETURN JUMPDEST PUSH2 0x802 SWAP3 DUP5 MSTORE DUP4 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH0 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST PUSH2 0x812 SWAP1 PUSH2 0x202C JUMP JUMPDEST SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x7E4 JUMP JUMPDEST PUSH2 0x83B SWAP2 POP DUP13 DUP14 RETURNDATASIZE LT PUSH2 0x841 JUMPI JUMPDEST PUSH2 0x833 DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH0 PUSH2 0x79A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x873 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x879 JUMPI JUMPDEST PUSH2 0x86B DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH0 PUSH2 0x732 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST SWAP1 SWAP8 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8CB JUMPI JUMPDEST PUSH2 0x8B7 DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8C7 JUMPI MLOAD SWAP7 PUSH0 PUSH2 0x628 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x8AD JUMP JUMPDEST POP CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB0D JUMPI PUSH2 0x8ED PUSH2 0x1F31 JUMP JUMPDEST SWAP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND ISZERO SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0xB7E JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0xB74 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0xB6B JUMPI JUMPDEST POP PUSH2 0xB59 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR DUP6 SSTORE DUP3 PUSH2 0xB3A JUMPI JUMPDEST POP PUSH2 0x966 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x96E PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x977 CALLER PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1A33757D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x21 PUSH1 0x99 SHL ADD SWAP1 DUP5 DUP2 PUSH1 0x24 DUP2 PUSH0 DUP7 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xB02 JUMPI DUP6 SWAP2 PUSH2 0xB11 JUMPI JUMPDEST POP POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 DUP1 DUP3 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xB0D JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x4E606C47 PUSH1 0xE0 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0xB02 JUMPI PUSH2 0xAEF JUMPI JUMPDEST POP PUSH20 0x2FC95838C71E76EC69FF817983BFF17C710F34E0 SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0xAEB JUMPI DUP7 PUSH1 0x40 MLOAD PUSH4 0x36B91F2B PUSH1 0xE0 SHL DUP2 MSTORE DUP2 DUP2 PUSH1 0x24 DUP2 DUP4 PUSH20 0xE4860D3973802C7C42450D7B9741921C7711D039 SWAP10 DUP11 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x848 JUMPI PUSH2 0xAD7 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 DUP8 SLOAD AND OR DUP7 SSTORE PUSH20 0x6CC14824EA2918F5DE5C2F75A9DA968AD4BD6344 DUP2 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x6 SSTORE PUSH2 0xA97 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP2 PUSH9 0xFF0000000000000000 NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 PUSH0 DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH2 0xAE0 SWAP1 PUSH2 0x1E9D JUMP JUMPDEST PUSH2 0xAEB JUMPI DUP7 PUSH0 PUSH2 0xA4D JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH2 0xAFA SWAP2 SWAP7 POP PUSH2 0x1E9D JUMP JUMPDEST PUSH0 SWAP5 PUSH0 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xB33 JUMPI JUMPDEST PUSH2 0xB24 DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB0D JUMPI DUP4 PUSH0 PUSH2 0x9AB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB1A JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR DUP5 SSTORE PUSH0 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO PUSH0 PUSH2 0x941 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x939 JUMP JUMPDEST DUP5 SWAP2 POP PUSH2 0x92F JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD PUSH2 0xBB7 DUP2 PUSH2 0x1F65 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xCB9 JUMPI POP PUSH1 0x1 EQ PUSH2 0xC82 JUMPI JUMPDEST POP POP PUSH2 0xBE2 DUP4 PUSH2 0xC2E SWAP6 SUB DUP5 PUSH2 0x1ECB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP2 PUSH1 0x7 DUP7 ADD SLOAD SWAP4 PUSH1 0x8 DUP8 ADD SLOAD SWAP6 PUSH1 0xA PUSH1 0x9 DUP10 ADD SLOAD SWAP9 ADD SLOAD SWAP9 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 PUSH2 0x180 SWAP1 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1F9D JUMP JUMPDEST SWAP11 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x40 SHR AND PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH0 DUP4 DUP2 MSTORE DUP5 DUP2 KECCAK256 SWAP1 SWAP7 POP JUMPDEST DUP3 DUP8 LT PUSH2 0xCA6 JUMPI POP POP POP SWAP3 DUP3 ADD DUP2 ADD SWAP3 PUSH2 0xBE2 DUP4 PUSH2 0xBD1 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP9 ADD DUP7 ADD MSTORE SWAP6 DUP5 ADD SWAP6 DUP2 ADD PUSH2 0xC8D JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP8 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD DUP3 ADD SWAP4 POP PUSH2 0xBE2 DUP4 PUSH2 0xBD1 JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xB0D JUMPI PUSH2 0xD19 PUSH2 0x22CF JUMP JUMPDEST ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x5 SLOAD DUP1 ISZERO PUSH2 0xD97 JUMPI PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xB02 JUMPI PUSH2 0xD76 SWAP2 PUSH0 SWAP2 PUSH2 0xD78 JUMPI POP PUSH2 0x21DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD91 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49C DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP3 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F20726576656E756520746F207769746864726177 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP1 DUP1 SELFBALANCE DUP2 DUP2 ISZERO PUSH2 0xDEC JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0xB02 JUMPI STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0xDE2 JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0xD PUSH1 0x40 PUSH0 KECCAK256 ADD CALLER PUSH0 MSTORE DUP1 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO PUSH2 0xEDD JUMPI CALLER PUSH0 DUP2 DUP2 MSTORE SWAP2 DUP4 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x8 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP5 SWAP3 DUP5 SWAP2 DUP7 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0xB02 JUMPI PUSH2 0xEAD PUSH1 0x60 SWAP5 PUSH32 0x24B5EFA61DD1CFC659205A97FB8ED868F3CB8C81922BAB2B96423E5DE1DE2CB7 SWAP7 PUSH0 SWAP2 PUSH2 0xEC0 JUMPI POP PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH2 0xED7 SWAP2 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x4AA JUMPI PUSH2 0x49C DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP8 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2072657761726420746F20636C61696D PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH1 0x22 PUSH1 0x21 PUSH1 0x99 SHL ADD DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH2 0xF52 PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0xF5A PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2488 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH2 0xFC9 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xB0D JUMPI PUSH2 0x100A PUSH2 0x107E SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1F47 JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x1060 PUSH1 0x40 PUSH0 KECCAK256 SWAP4 PUSH1 0x40 MLOAD PUSH2 0x2A1 DUP2 PUSH2 0x293 PUSH1 0x20 DUP3 ADD SWAP5 DUP11 PUSH1 0x64 CALLDATALOAD SWAP2 CALLER SWAP1 DUP9 SWAP3 SWAP1 SWAP2 PUSH1 0x74 SWAP5 SWAP3 DUP5 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 PUSH1 0x60 SHL AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x54 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 SWAP2 PUSH2 0x2CF SWAP2 PUSH2 0x2C6 SWAP2 PUSH2 0x2307 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SWAP2 DUP3 SLOAD DUP2 DUP2 LT PUSH2 0x109E JUMPI DUP2 PUSH1 0x3 PUSH2 0x109A SWAP5 ADD SSTORE PUSH2 0x20F3 JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616D6F756E742073686F756C64206265206C657373207468616E206F72206571 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75616C20746F207269736B20706F6F6C2062616C616E63650000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x20 PUSH2 0x191 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x24 CALLDATALOAD PUSH2 0x1141 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x3 SSTORE DUP1 PUSH0 DUP2 ISZERO PUSH2 0x116F JUMPI JUMPDEST PUSH0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0xB02 JUMPI PUSH2 0x116A SWAP1 PUSH1 0x7 SLOAD PUSH2 0x1FE0 JUMP JUMPDEST PUSH1 0x7 SSTORE STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1150 JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH2 0x1190 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4AA7D2F7 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH0 PUSH1 0x22 PUSH1 0x21 PUSH1 0x99 SHL ADD GAS CALL DUP1 ISZERO PUSH2 0xB02 JUMPI PUSH2 0x11C6 JUMPI STOP JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11E6 JUMPI JUMPDEST PUSH2 0x11DC DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB0D JUMPI STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x11D2 JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x120E PUSH2 0x1F31 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH2 0x123D PUSH2 0x22CF JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2488 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x24 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xB0D JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xB0D JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0xB0D JUMPI PUSH1 0x5 DUP4 PUSH1 0x5 SHL SWAP5 DUP1 DUP7 DUP5 ADD ADD SWAP3 CALLDATASIZE DUP5 GT PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP5 DUP6 DUP2 ADD SWAP1 CALLER PUSH1 0x60 SHL DUP3 MSTORE DUP8 PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x34 DUP2 MSTORE PUSH2 0x1302 DUP2 PUSH2 0x1EB0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH1 0x3 SLOAD SWAP8 PUSH2 0x1319 DUP8 PUSH1 0x40 MLOAD SWAP12 ADD DUP12 PUSH2 0x1ECB JUMP JUMPDEST DUP10 MSTORE DUP4 ADD DUP6 DUP1 DUP11 ADD JUMPDEST DUP4 DUP4 LT PUSH2 0x1533 JUMPI POP POP POP POP SWAP4 PUSH0 SWAP5 JUMPDEST DUP8 MLOAD DUP7 LT ISZERO PUSH2 0x136E JUMPI DUP6 DUP5 SHL DUP9 ADD DUP6 ADD MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x135E JUMPI PUSH0 MSTORE DUP5 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 JUMPDEST SWAP6 ADD SWAP5 PUSH2 0x1331 JUMP JUMPDEST SWAP1 PUSH0 MSTORE DUP5 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1356 JUMP JUMPDEST SWAP1 DUP7 DUP6 SWAP3 SUB PUSH2 0x14FF JUMPI CALLER PUSH0 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x14A8 JUMPI PUSH2 0x1395 SWAP1 DUP3 PUSH2 0x20F3 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x7 SLOAD LT PUSH2 0x146C JUMPI PUSH2 0x13FB PUSH0 SWAP3 DUP5 SWAP3 CALLER DUP6 MSTORE PUSH1 0x9 DUP5 MSTORE PUSH1 0x40 DUP6 KECCAK256 SSTORE PUSH2 0x13BE DUP2 PUSH1 0x7 SLOAD PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP4 DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xB02 JUMPI PUSH0 SWAP2 PUSH2 0x144F JUMPI JUMPDEST POP ISZERO PUSH2 0x1415 JUMPI STOP JUMPDEST PUSH1 0x15 PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH21 0x165A595B19081D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1466 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x4AA JUMPI PUSH2 0x49C DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP4 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x15 DUP2 DUP7 ADD MSTORE PUSH21 0x139BC8199D5B991CC81A5B881D1A19481D985D5B1D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2A DUP2 DUP7 ADD MSTORE PUSH32 0x4E6F2066756E6473206C65667420746F20636C61696D206F7220616C72656164 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3C9031B630B4B6B2B217 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0xE PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH14 0x24B73B30B634B210383937B7B317 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP8 SWAP2 ADD PUSH2 0x1322 JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xB0D JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17119229 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL DUP1 ISZERO PUSH2 0xB02 JUMPI PUSH1 0x20 SWAP2 PUSH0 SWAP2 PUSH2 0x1671 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1688 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x879 JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP3 PUSH2 0x165F JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD DUP3 ISZERO DUP1 ISZERO DUP5 SUB PUSH2 0xB0D JUMPI DUP2 PUSH0 MSTORE PUSH1 0x20 SWAP4 PUSH1 0xA DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0xC DUP7 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x9 DUP5 ADD SLOAD PUSH0 MSTORE DUP7 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE DUP7 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1871 JUMPI DUP2 SWAP1 DUP2 PUSH2 0x1863 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1848 JUMPI JUMPDEST POP ISZERO PUSH2 0x1803 JUMPI ISZERO PUSH2 0x17B5 JUMPI PUSH1 0xC ADD SWAP3 DUP4 SLOAD SWAP3 PUSH0 NOT DUP5 ADD SWAP4 DUP5 GT PUSH2 0x17A1 JUMPI PUSH32 0xCEF8FAC05AFB87995942422EAC900DE6AF11A555D80D075340AF81DB492119FE SWAP5 DUP5 DUP3 PUSH1 0x40 SWAP7 PUSH2 0x174C SWAP5 SUB PUSH2 0x1759 JUMPI JUMPDEST POP POP PUSH2 0x2100 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH2 0x1773 PUSH2 0x1769 PUSH2 0x179A SWAP4 DUP6 PUSH2 0x2087 JUMP JUMPDEST SWAP2 SWAP1 SLOAD SWAP3 DUP6 PUSH2 0x2087 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 DUP4 SHL DUP2 DUP2 SHL NOT SWAP1 SWAP3 AND SWAP5 SWAP1 SWAP3 SHL SWAP5 SWAP1 SWAP5 SHR AND SWAP1 SWAP3 SHL OR SWAP1 SSTORE JUMP JUMPDEST DUP7 DUP1 PUSH2 0x1745 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xB ADD SWAP3 DUP4 SLOAD SWAP3 PUSH0 NOT DUP5 ADD SWAP4 DUP5 GT PUSH2 0x17A1 JUMPI PUSH32 0xCEF8FAC05AFB87995942422EAC900DE6AF11A555D80D075340AF81DB492119FE SWAP5 DUP5 DUP3 PUSH1 0x40 SWAP7 PUSH2 0x17FE SWAP5 SUB PUSH2 0x1759 JUMPI POP POP PUSH2 0x2100 JUMP JUMPDEST PUSH2 0x174C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420696E64657820666F72207061727469636970616E74730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP1 PUSH2 0x1856 JUMPI JUMPDEST DUP7 PUSH2 0x16F7 JUMP JUMPDEST POP PUSH1 0xB DUP3 ADD SLOAD DUP5 LT PUSH2 0x1850 JUMP JUMPDEST PUSH1 0xC DUP5 ADD SLOAD DUP7 LT SWAP2 POP PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F74206A6F696E6564207468697320706F7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xB0D JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xB0D JUMPI PUSH2 0x18F2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1EEC JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17119229 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB02 JUMPI PUSH0 SWAP2 PUSH2 0x1E64 JUMPI JUMPDEST POP PUSH2 0x1950 PUSH2 0x1949 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH2 0x1FE0 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD ISZERO PUSH2 0x1E1F JUMPI PUSH1 0x64 CALLDATALOAD ISZERO PUSH2 0x1DCC JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD GT PUSH2 0x1D6B JUMPI PUSH1 0x4 SLOAD PUSH2 0x1977 DUP2 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xB02 JUMPI PUSH0 SWAP2 PUSH2 0x1D4C JUMPI JUMPDEST POP ISZERO PUSH2 0x1CF5 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x93CBF217 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP4 PUSH1 0x20 SWAP3 DUP6 SWAP3 PUSH1 0x64 SWAP3 DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP2 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xB02 JUMPI PUSH0 SWAP3 PUSH2 0x1CD4 JUMPI JUMPDEST POP DUP1 PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1CC0 JUMPI PUSH2 0x1A50 DUP3 SLOAD PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1C85 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1C0F JUMPI SWAP2 DUP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP3 PUSH2 0x1BD1 SWAP5 PUSH0 SWAP2 PUSH2 0x1C04 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH0 PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xA DUP3 ADD SWAP6 AND SWAP5 DUP1 SLOAD DUP7 PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB CALLER PUSH1 0x40 SHL AND SWAP2 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND OR OR SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x7 DUP3 ADD SSTORE TIMESTAMP PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x1B11 PUSH1 0x9 DUP3 ADD SWAP2 PUSH1 0x1 DUP4 SSTORE PUSH1 0xB CALLER SWAP2 ADD PUSH2 0x20B0 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 SLOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x37BB26F2981AD94B38AFE928452CAD1BCA628B82F1781D95EC69D53ACF5D0D9B PUSH1 0x40 MLOAD DUP1 PUSH2 0x1B79 PUSH2 0x140 DUP8 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD DUP6 PUSH2 0x1F9D JUMP JUMPDEST CALLER PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 SWAP8 DUP9 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x120 DUP4 ADD MSTORE SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x1F9D JUMP JUMPDEST CALLER PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP4 ADD MLOAD DUP9 PUSH2 0x1A84 JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x1C6D JUMPI POP DUP3 PUSH2 0x1BD1 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1C55 JUMPI JUMPDEST POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0x1A97 JUMP JUMPDEST DUP6 ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x1C49 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1C19 JUMP JUMPDEST PUSH2 0x1CB0 SWAP1 DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1CB6 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2071 JUMP JUMPDEST DUP6 PUSH2 0x1A59 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1CEE SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x841 JUMPI PUSH2 0x833 DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x1A29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43726561746F722073686F756C64206465706F7369742074686520696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x185B08185B5BDD5B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1D65 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4AA JUMPI PUSH2 0x49C DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP5 PUSH2 0x19C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D657261746F72206D757374206265206C657373207468616E206F722065 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x38BAB0B6103A37903232B737B6B4B730BA37B9 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E7465726573742064656E6F6D696E61746F72206D75737420626520706F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6974697665 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F746174696F6E206379636C65206D75737420626520706F73697469766500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1E7D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x879 JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x1ECB JUMP JUMPDEST DUP3 PUSH2 0x1930 JUMP JUMPDEST CALLVALUE PUSH2 0xB0D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB0D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1CC0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1CC0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1CC0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1CC0 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1F15 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x1ECB JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0xB0D JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB0D JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xB0D JUMPI DUP2 PUSH1 0x20 PUSH2 0x1F62 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1EEC JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1F93 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1F7F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1F74 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xB0D JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xB0D JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x17A1 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1FF4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E73756666696369656E7420666565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x17A1 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xB0D JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xB0D JUMPI SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xB0D JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xB0D JUMPI SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x207C JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2071 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x209C JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x1CC0 JUMPI DUP3 PUSH2 0x20D3 SWAP2 PUSH1 0x1 PUSH2 0x20F1 SWAP6 ADD DUP2 SSTORE PUSH2 0x2087 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x17A1 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x212C JUMPI PUSH0 NOT ADD SWAP1 PUSH2 0x2116 DUP3 DUP3 PUSH2 0x2087 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x17A1 JUMPI JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x7 PUSH2 0x216F PUSH1 0x40 PUSH0 KECCAK256 SWAP3 PUSH1 0x6 DUP5 ADD SLOAD SWAP1 PUSH2 0x2140 JUMP JUMPDEST SWAP2 ADD SLOAD SWAP1 DUP2 ISZERO PUSH2 0x217D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0x2198 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E617475726520766572696669636174696F6E206661696C6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x21E4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2274 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2488 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP4 MSTORE PUSH1 0x3C DUP3 ADD MSTORE PUSH1 0x3C DUP2 MSTORE PUSH2 0x22C9 DUP2 PUSH2 0x1EB0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2488 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x22EF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x2337 JUMPI PUSH2 0x2330 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH0 BYTE SWAP1 PUSH2 0x2405 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x23B0 JUMPI DUP1 PUSH2 0x2353 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x236D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x238E JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x2398 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x23F3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x247C JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xB02 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2472 JUMPI SWAP1 PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x1 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP NUMBER 0xD2 RETURN MULMOD SWAP2 EXTCODEHASH PUSH11 0xFC5D717F60864D2D192B69 SWAP7 RETURNDATASIZE 0x25 KECCAK256 0x4B PUSH11 0x12765E2795BF027FA26469 PUSH17 0x667358221220F813019B501B78066A0870 SUB 0xE2 DUP14 CREATE2 0xCE 0xD9 0xF7 PUSH28 0x35226B8590CA41C9FCFCBD2EB464736F6C6343000819003300000000 ",
							"sourceMap": "674:18617:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19031:31;674:18617;19031:31;;;674:18617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;806:20;674:18617;;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;:::i;:::-;;;;;;9413:4;674:18617;;;;;9443:16;;;;674:18617;;;9469:19;;;;674:18617;;;-1:-1:-1;674:18617:12;;;;;;9523:12;674:18617;;;;;9544:16;;;674:18617;;;;;;;;;;9562:10;674:18617;;;;;;;;;;;;;;9673:61;;;674:18617;;;9562:10;674:18617;;-1:-1:-1;;674:18617:12;;;;;;;;;;;;;;;;;;;;;3859:27:4;;9822:90:12;;674:18617;;9776:36;;9673:61;674:18617;;;;9673:61;;674:18617;;9673:61;;;;;;:::i;:::-;674:18617;9663:72;;9776:36;:::i;:::-;9830:5;674:18617;-1:-1:-1;;;;;674:18617:12;;;;;;;3915:8:4;;674:18617:12;;3859:27:4;:::i;:::-;3915:8;;;;;:::i;:::-;674:18617:12;9830:48;9822:90;:::i;:::-;674:18617;;;9523:12;674:18617;;;;;;;;;;;;;;;9562:10;-1:-1:-1;674:18617:12;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;;;9469:19;674:18617;10088:10;;;674:18617;;;;-1:-1:-1;;;10038:61:12;;674:18617;10038:61;;674:18617;;;;10081:4;674:18617;;;;;;;;;;;;;;;;;;;;;;;;;;;;10038:61;;;;;;;;10030:89;10038:61;;;;;674:18617;10030:89;;:::i;:::-;9562:10;674:18617;;10134:10;;;674:18617;;;;;;;;10133:23;10129:86;;674:18617;;;;10289:26;;674:18617;10317:21;;;;674:18617;10340:23;;;;674:18617;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;9562:10;;-1:-1:-1;;;;;;;;;;;9562:10:12;;;;;;;;;674:18617;;;;;;;;;;;;;;;;;;;;;;;;10229:156;;;674:18617;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;674:18617:12;;;;;-1:-1:-1;;;;;;;;;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;674:18617:12;;;;;;;;-1:-1:-1;674:18617:12;-1:-1:-1;;;;;;;;;;;674:18617:12;;;;;10129:86;10171:33;9562:10;;10171:33;;:::i;:::-;10129:86;;;10038:61;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;674:18617;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;9443:16;674:18617;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;2357:1:0;674:18617:12;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;674:18617:12;;;;;;;;;;;;;;;;1118:29;674:18617;;;;;;;;-1:-1:-1;674:18617:12;;-1:-1:-1;;674:18617:12;;;;;;;;;;;;11528:4;674:18617;;;;;;;;;;;;;;;;;;;;;11826:18;11528:4;11826:18;;674:18617;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;;;;;;;;11794:79;;674:18617;11794:79;;674:18617;;;;;;;;;;;;;;;;;11794:79;;;;;;;;;;;674:18617;11929:16;;;;674:18617;;;;;;;;11979:29;674:18617;;;;;;11979:29;;:::i;:::-;674:18617;;;;;;;12018:11;:24;:11;;;;:24;:::i;:::-;674:18617;12180:36;674:18617;;;12206:10;;674:18617;12180:36;;:::i;:::-;674:18617;16380:23;16353:17;674:18617;;;16353:17;;;:::i;:::-;674:18617;16380:23;674:18617;16380:23;:::i;:::-;;674:18617;12365:51;;;;:::i;:::-;12466:22;;;12527:66;674:18617;12466:22;;674:18617;12528:34;674:18617;;12528:34;;;;:::i;:::-;12527:66;:::i;:::-;674:18617;;;;12603:13;;;674:18617;;;;;;;12655:38;:19;;;674:18617;;;12655:38;:::i;:::-;674:18617;;;;;;12739:10;;;674:18617;;;;;;;;;;;;;;12797:15;16380:23;12774:20;;674:18617;;;;;;;;;;;;;;;;12836:31;;;674:18617;12836:31;;674:18617;12836:31;;674:18617;12836:31;;;;;;;;-1:-1:-1;;;;;674:18617:12;12836:31;;;;;;;674:18617;;;12885:9;12877:45;12885:9;;:16;12877:45;:::i;:::-;674:18617;;;;;;;;;;12956:113;;674:18617;12956:113;;674:18617;;;;;;;;;;;12956:113;;;;;;;13129:131;12956:113;674:18617;12956:113;13163:16;12956:113;;;;674:18617;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;13163:16;674:18617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13129:131;674:18617;;13338:27;;;;13334:76;;;;674:18617;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;13334:76;13381:18;;;:::i;:::-;674:18617;;13334:76;;;;12956:113;;;;;;;-1:-1:-1;12956:113:12;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;674:18617;;;;;;;;;12836:31;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;674:18617;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;11794:79;;;;;;;;;;;;;;;;;:::i;:::-;;;674:18617;;;;;11794:79;;;;674:18617;;;;11794:79;;;;;674:18617;;;;;;;;;;;;;;;;:::i;:::-;8837:64:1;;674:18617:12;;;;;;;;;4301:16:1;674:18617:12;-1:-1:-1;;;;;674:18617:12;;4726:16:1;;:34;;;;674:18617:12;4805:1:1;4790:16;:50;;;;674:18617:12;4855:13:1;:30;;;;674:18617:12;4851:91:1;;;-1:-1:-1;;674:18617:12;;4805:1:1;674:18617:12;;;;4979:67:1;;674:18617:12;6893:76:1;;;:::i;:::-;;;:::i;:::-;6961:1;4866:10:12;6961:1:1;:::i;:::-;674:18617:12;;-1:-1:-1;;;4887:35:12;;4902:19;674:18617;4887:35;;674:18617;-1:-1:-1;;;;;4630:42:12;4887:35;674:18617;;;-1:-1:-1;4630:42:12;4887:35;;;;;;;;;;;674:18617;;;;;;;;;4969:62;674:18617;;;4969:62;674:18617;5041:29;;;;;674:18617;;;;;;;;;;;;;5041:29;;;;;;;;;;674:18617;5157:42;;5144:124;;;;;;674:18617;;;;;;5144:124;;5225:42;;674:18617;5225:42;;;5144:124;;674:18617;5144:124;;674:18617;5144:124;;;;;;;;674:18617;;;;;;;;;;;;;;;;5493:42;674:18617;4805:1:1;674:18617:12;;;4805:1:1;674:18617:12;4902:19;674:18617;;;4902:19;674:18617;5622:16;5605:33;674:18617;5066:101:1;;674:18617:12;;;5066:101:1;5142:14;674:18617:12;;;;;;;;;;4805:1:1;674:18617:12;;5142:14:1;5066:101;;674:18617:12;;;5144:124;;;;:::i;:::-;674:18617;;5144:124;;;;674:18617;;;;5041:29;;;;;;:::i;:::-;674:18617;5041:29;;;;;674:18617;;;;;;;;;5041:29;674:18617;;;4887:35;;;;;;;;;;;;:::i;:::-;;;674:18617;;;;4887:35;;;;;;;;;4979:67:1;-1:-1:-1;;674:18617:12;;;;;4979:67:1;;;4851:91;674:18617:12;;-1:-1:-1;;;4908:23:1;;674:18617:12;;4908:23:1;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;;;-1:-1:-1;4726:34:1;;674:18617:12;;;;;;;;;;;;;;;;;1296:35;674:18617;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1296:35;;674:18617;1296:35;;;;674:18617;1296:35;;;674:18617;;1296:35;;674:18617;1296:35;;;674:18617;1296:35;;;674:18617;1296:35;;;;674:18617;1296:35;;;;674:18617;1296:35;;;;;674:18617;1296:35;;674:18617;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;674:18617:12;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;-1:-1:-1;;674:18617:12;;;;;;;;;-1:-1:-1;674:18617:12;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;1085:27;674:18617;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;;;;;;;;2303:62:0;;:::i;:::-;16595:376:12;;;16645:12;674:18617;16679:17;;674:18617;;;16645:12;674:18617;;;16805:9;674:18617;;;-1:-1:-1;;;16805:45:12;;16824:10;674:18617;16805:45;;674:18617;;;;;;;;;;;;;;;;-1:-1:-1;;;;;674:18617:12;16805:45;;;;;;16797:73;16805:45;674:18617;16805:45;;;16797:73;;:::i;:::-;674:18617;16805:45;;;;674:18617;16805:45;674:18617;16805:45;;;;;;;:::i;:::-;;;;674:18617;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;16595:376;674:18617;16938:21;;;;16909:51;;;;;16595:376;16917:10;16909:51;;;;;674:18617;16909:51;;;;;674:18617;;;;;;;;;;;;;;;;;;;15499:4;674:18617;;15529:13;674:18617;;;15529:13;15543:10;674:18617;;;;;;;;;15529:29;674:18617;;15543:10;674:18617;;;;;;;;;;;;;;;;;15794:9;674:18617;;;-1:-1:-1;;;15794:45:12;;674:18617;15794:45;;674:18617;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;674:18617:12;15794:45;;;;;;;15786:73;674:18617;15794:45;15874:46;15794:45;674:18617;15794:45;;;15786:73;;:::i;:::-;674:18617;;;;;15543:10;674:18617;;;;;;;;15874:46;674:18617;15794:45;;;;;;;;;;;;;;:::i;:::-;;;;674:18617;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;17553:16:12;674:18617;;-1:-1:-1;;;;;;674:18617:12;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;-1:-1:-1;;;;;;;;;;;674:18617:12;;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;2303:62:0;;:::i;:::-;674:18617:12;;17657:24;674:18617;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;14268:90;674:18617;;;;;;:::i;:::-;;;;14074:4;674:18617;;14222:36;674:18617;;;;;;14128:52;;;674:18617;14128:52;;674:18617;;;;14153:10;;14128:52;;674:18617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14222:36;14276:5;674:18617;-1:-1:-1;;;;;674:18617:12;;;;;;3915:8:4;;3859:27;;;:::i;14268:90:12:-;14276:5;14376:19;;674:18617;;;14376:30;;;674:18617;;14477:22;;14519:31;14477:22;;674:18617;14519:31;:::i;:::-;674:18617;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;674:18617:12;;;;;;2303:62:0;;:::i;:::-;674:18617:12;;17357:24;674:18617;17391:37;674:18617;17391:37;;;;674:18617;;17399:10;;;;;;17391:37;;;;;17438:29;674:18617;17438:29;674:18617;17438:29;:::i;:::-;;674:18617;;17391:37;-1:-1:-1;17391:37:12;;;674:18617;;;;;;-1:-1:-1;;674:18617:12;;;;2303:62:0;;:::i;:::-;674:18617:12;;-1:-1:-1;;;17071:44:12;;17097:4;674:18617;17071:44;;674:18617;17104:10;674:18617;;;;17071:44;674:18617;;;-1:-1:-1;;;;;;17071:44:12;;;;;;;;674:18617;17071:44;;;;;;;;;;;;;;:::i;:::-;;;674:18617;;;;;17071:44;;;;;674:18617;;;;;;-1:-1:-1;;674:18617:12;;;;-1:-1:-1;;;;;674:18617:12;;:::i;:::-;;;;1245:45;674:18617;;;;;;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;674:18617:12;;-1:-1:-1;;;;;;674:18617:12;;;;;;;-1:-1:-1;;;;;674:18617:12;3975:40:0;674:18617:12;;3975:40:0;674:18617:12;;;;;;;-1:-1:-1;;674:18617:12;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17846:41;;;;17863:10;;674:18617;;;;;;;;;;17846:41;;;;;:::i;:::-;674:18617;17836:52;;674:18617;17938:10;674:18617;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;2069:27:5;;;;2111:13;674:18617:12;2106:116:5;2144:3;674:18617:12;;2126:16:5;;;;;674:18617:12;;;;;;;;;9318:5:5;;;;;;674:18617:12;9632:119:5;;;674:18617:12;;;9632:119:5;9318:51;2144:3;674:18617:12;2111:13:5;;;9318:51;9632:119;674:18617:12;9632:119:5;;;674:18617:12;;;9632:119:5;9318:51;;2126:16;;;;;1379:33;674:18617:12;;17863:10;674:18617;;18009:10;674:18617;;;;;;18049:28;;;674:18617;;;18160:28;;;;:::i;:::-;674:18617;;18206:18;674:18617;18206:37;674:18617;;18464:47;674:18617;17863:10;;;;674:18617;;18009:10;674:18617;;;;;;18362:37;674:18617;18206:18;674:18617;18362:37;:::i;:::-;18206:18;674:18617;18464:9;674:18617;;;-1:-1:-1;;;18464:47:12;;17863:10;674:18617;18464:47;;674:18617;;;;;;;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;;;;18464:47;;;;;;;;;;674:18617;18464:47;;;2106:116:5;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;18464:47;;;;;;;;;;;;;;:::i;:::-;;;;674:18617;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;;1445:84;674:18617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;;;19191:4;674:18617;;;19231:19;674:18617;;;19231:19;674:18617;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;1192:23;674:18617;;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;861:25;674:18617;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;;;;;-1:-1:-1;;;19031:31:12;;-1:-1:-1;;;;;674:18617:12;;;;19031:31;;674:18617;;19031:31;;674:18617;;;;;;;19031:31;;;;;;;;674:18617;19031:31;;;674:18617;;-1:-1:-1;;;;;674:18617:12;;;;;;;19031:31;;;;;;;;;;;;;;:::i;:::-;;;;674:18617;;;;;;-1:-1:-1;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;14670:4;674:18617;;;;;;14700:12;674:18617;;;;;14721:16;;;674:18617;;;;;;;;14739:10;674:18617;;;;;;;;;;;;;14802:40;;;;;674:18617;14801:94;;;;674:18617;;;;;14940:412;;;14700:12;14983:11;674:18617;;;;;;;;;;;;;15375:38;14973:32;;;674:18617;14973:32;15110:15;14973:32;;14969:128;;14940:412;15110:15;;;:::i;:::-;674:18617;;;;;14739:10;674:18617;;;;15375:38;674:18617;14969:128;15025:19;15047:35;15025:57;15047:35;;;:::i;:::-;674:18617;;;15025:19;;;:::i;:::-;674:18617;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;;;;15025:57;14969:128;;;;674:18617;;;;;;;;;;;;14940:412;15172:16;;674:18617;;;;;;;;;;;;;15375:38;15162:37;;;674:18617;15162:37;15319:20;15162:37;;15158:148;;15319:20;;;:::i;:::-;14940:412;;674:18617;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;14801:94;14848:46;-1:-1:-1;14848:46:12;;;14801:94;;;;14848:46;14871:16;;;;674:18617;14862:32;;14848:46;;14802:40;14700:12;14824:11;;674:18617;14815:27;;;-1:-1:-1;14802:40:12;;674:18617;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;6925:31:12;;-1:-1:-1;;;;;674:18617:12;;;;6925:31;;674:18617;;;;;;;;;;;6925:31;;;;;;;674:18617;6925:31;;;674:18617;;6966:60;6987:18;6991:14;674:18617;-1:-1:-1;;;;;674:18617:12;;6987:18;:::i;:::-;6974:9;:31;6966:60;:::i;:::-;674:18617;;7045:27;674:18617;;;;7126:24;674:18617;;;;;;7210:42;674:18617;;;;7334:11;;;:::i;:::-;674:18617;;;;7363:9;674:18617;;;-1:-1:-1;;;7363:58:12;;7386:10;7363:58;;;674:18617;;;;7406:4;674:18617;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;674:18617:12;7363:58;;;;;;;674:18617;7363:58;;;674:18617;;;;;;;;;;;;-1:-1:-1;;;7501:113:12;;-1:-1:-1;;;;;674:18617:12;;;;7501:113;;674:18617;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;7501:113;;;;;;;674:18617;7501:113;;;674:18617;;;;;7683:4;674:18617;;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7733:13;;674:18617;;7766:22;;;674:18617;-1:-1:-1;;;;;7683:4:12;7802:21;;674:18617;;;;;;-1:-1:-1;;;674:18617:12;;;;7386:10;674:18617;;;;;;;;;;;;;;;7890:29;;674:18617;;;6991:14;7955:24;;674:18617;;;8010:26;;;674:18617;8095:15;8069:23;;;674:18617;;;7363:9;8120:22;;674:18617;8204:36;8171:19;;;674:18617;;;;8204:19;7386:10;8204:19;;:36;:::i;:::-;674:18617;;;8250:12;674:18617;;;;;;;;;;;;;;7386:10;674:18617;;;;;;;;;;;;;;;;8324:159;674:18617;;;;;;;;;;;;;;;;;:::i;:::-;7386:10;674:18617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8324:159;;;674:18617;;;;;;;;;;;;;;;;:::i;:::-;7386:10;674:18617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8498:137;;;674:18617;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;674:18617:12;;;;;;;;;;;;;;;;7501:113;;;;;674:18617;7501:113;674:18617;7501:113;;;;;;;:::i;:::-;;;;;674:18617;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;7363:58;;;;674:18617;7363:58;674:18617;7363:58;;;;;;;:::i;:::-;;;;674:18617;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;;;;6925:31;;;;674:18617;6925:31;674:18617;6925:31;;;;;;;:::i;:::-;;;;674:18617;;;;;;-1:-1:-1;;674:18617:12;;;;;;1153:33;674:18617;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;;;;;-1:-1:-1;;674:18617:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;674:18617:12;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;674:18617:12;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;674:18617:12;;;;;;;;-1:-1:-1;;674:18617:12;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;-1:-1:-1;;674:18617:12;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;674:18617:12;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;674:18617:12;;-1:-1:-1;674:18617:12;;;-1:-1:-1;674:18617:12;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;674:18617:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15990:218::-;-1:-1:-1;674:18617:12;16115:4;674:18617;;16178:23;16144:31;674:18617;-1:-1:-1;674:18617:12;16154:21;;;;674:18617;16144:31;;:::i;:::-;16178:23;;674:18617;;;;;;;15990:218;:::o;674:18617::-;;;;-1:-1:-1;674:18617:12;;;;;-1:-1:-1;674:18617:12;;;;;:::o;:::-;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;674:18617:12;;;;;;;;;;;;-1:-1:-1;;;674:18617:12;;;;;;;3405:215:0;-1:-1:-1;;;;;674:18617:12;;;;3489:22:0;;3485:91;;-1:-1:-1;;;;;;;;;;;674:18617:12;;-1:-1:-1;;;;;;674:18617:12;;;;;;;;3975:40:0;-1:-1:-1;;3975:40:0;3405:215::o;3485:91::-;674:18617:12;;-1:-1:-1;;;3534:31:0;;3509:1;3534:31;;;674:18617:12;;;3534:31:0;18550:400:12;674:18617;;18867:66;;;674:18617;;;;;;;;;18867:66;;;;;:::i;:::-;674:18617;18844:99;;18550:400;:::o;2658:162:0:-;-1:-1:-1;;;;;;;;;;;674:18617:12;-1:-1:-1;;;;;674:18617:12;966:10:2;2717:23:0;2713:101;;2658:162::o;2713:101::-;674:18617:12;;-1:-1:-1;;;2763:40:0;;966:10:2;2763:40:0;;;674:18617:12;;;2763:40:0;2129:766:4;674:18617:12;;;2129:766:4;2276:2;2256:22;;2276:2;;2739:25;2539:180;;;;;;;;;;;;;;;-1:-1:-1;2539:180:4;2739:25;;:::i;:::-;2732:32;;;;;:::o;2252:637::-;2795:83;;2811:1;2795:83;2815:35;2795:83;;:::o;7196:532::-;674:18617:12;;;;;;7282:29:4;;;7327:7;;:::o;7278:444::-;674:18617:12;7378:38:4;;674:18617:12;;;;-1:-1:-1;;;7439:23:4;;674:18617:12;;7439:23:4;7374:348;7492:35;7483:44;;7492:35;;674:18617:12;;-1:-1:-1;;;7550:46:4;;674:18617:12;7550:46:4;;674:18617:12;;;;;7550:46:4;7479:243;7626:30;7617:39;7613:109;;7479:243;7196:532::o;7613:109::-;674:18617:12;;;;7679:32:4;;;;;;674:18617:12;7679:32:4;;674:18617:12;7679:32:4;674:18617:12;;;;7291:20:4;674:18617:12;;;;;7291:20:4;674:18617:12;7084:141:1;674:18617:12;8837:64:1;674:18617:12;;;;7150:18:1;7146:73;;7084:141::o;7146:73::-;674:18617:12;;-1:-1:-1;;;7191:17:1;;;;;5140:1530:4;;;6199:66;6186:79;;6182:164;;674:18617:12;;;;;;-1:-1:-1;674:18617:12;;;;;;;;;;;;;;;;;;;6457:24:4;;;;;;;;;-1:-1:-1;6457:24:4;-1:-1:-1;;;;;674:18617:12;;6495:20:4;6491:113;;6614:49;-1:-1:-1;6614:49:4;-1:-1:-1;5140:1530:4;:::o;6491:113::-;6531:62;-1:-1:-1;6531:62:4;6457:24;6531:62;-1:-1:-1;6531:62:4;:::o;6182:164::-;6281:54;;;6297:1;6281:54;6301:30;6281:54;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1893800",
								"executionCost": "24114",
								"totalCost": "1917914"
							},
							"external": {
								"BLAST()": "591",
								"USDB()": "283",
								"admin()": "2926",
								"calculateRiskPoolBalance(uint256,uint256)": "4898",
								"changeAdminSigner(address)": "infinite",
								"claimFunds(uint256,bytes32[])": "infinite",
								"claimMyContractsGas()": "infinite",
								"claimReward(uint256)": "infinite",
								"createPot(string,bytes32,uint256,uint256,uint256,uint256,uint256)": "infinite",
								"getEntropyFee()": "infinite",
								"getEthSignedMessageHash(bytes32)": "1042",
								"getRiskPoolBalance(uint256)": "2486",
								"hasClaimed(address)": "2653",
								"hasJoinedPot(uint256,uint256,address)": "2691",
								"initialize(address)": "infinite",
								"joinPot(uint256,bytes,uint256)": "infinite",
								"merkleRoot()": "2349",
								"owner()": "infinite",
								"potCreationFee()": "2836",
								"pots(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"rotateLiquidity(uint256,bytes32,bytes32,bytes32)": "infinite",
								"setMerkleRoot(bytes32,uint256)": "infinite",
								"totalRevenue()": "2745",
								"totalYielDeposited()": "2253",
								"transferOwnership(address)": "infinite",
								"updatePotCreationFee(uint256)": "infinite",
								"usdbToken()": "2417",
								"useRiskPool(uint256,uint256,bytes,uint256)": "infinite",
								"withdrawFromPot(uint256,uint256,bool)": "63294",
								"withdrawRevenue(bool)": "infinite"
							},
							"internal": {
								"deductRevenue(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 674,
									"end": 19291,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 969,
									"end": 970,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 969,
									"end": 970,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "RETURN",
									"source": 12
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 674,
									"end": 19291,
									"name": "REVERT",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f813019b501b78066a087003e28df5ced9f77b35226b8590ca41c9fcfcbd2eb464736f6c63430008190033",
									".code": [
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "7DD3F44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FAE6443"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "210EAEAE"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "2D971E63"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "2EB4A7AB"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "31A0EDEC"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4A80409E"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4D781B31"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4DA1EC40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "61E7D805"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "73B2E80E"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "77D5D2DC"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "7C382D0B"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "7D77990C"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "818C5548"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "82199E3F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "91DC969E"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "97D75776"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "AE169A50"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "B7DB43C8"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "BF2D9E0B"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "C3C3DF4F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "C4D66DE8"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "CA829F10"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "EC71687B"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "F78AEDF9"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "F851A440"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FA540801"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 806,
											"end": 826,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9413,
											"end": 9417,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9459,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9459,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 9443,
											"end": 9459,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9459,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9469,
											"end": 9488,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9469,
											"end": 9488,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 9469,
											"end": 9488,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9469,
											"end": 9488,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9523,
											"end": 9535,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9544,
											"end": 9560,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 9544,
											"end": 9560,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9544,
											"end": 9560,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 9822,
											"end": 9912,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9776,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 9776,
											"end": 9812,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 9673,
											"end": 9734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 9673,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9663,
											"end": 9735,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9663,
											"end": 9735,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9776,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 9776,
											"end": 9812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9776,
											"end": 9812,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 9776,
											"end": 9812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9830,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3859,
											"end": 3886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3915,
											"end": 3923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9830,
											"end": 9878,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 9822,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 9822,
											"end": 9912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9822,
											"end": 9912,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 9822,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9523,
											"end": 9535,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 9469,
											"end": 9488,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10098,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10098,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10098,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10081,
											"end": 10085,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10030,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10030,
											"end": 10119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10030,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 10030,
											"end": 10119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10030,
											"end": 10119,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 10030,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10134,
											"end": 10144,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 10134,
											"end": 10144,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 10134,
											"end": 10144,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10133,
											"end": 10156,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 10129,
											"end": 10215,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10317,
											"end": 10338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10317,
											"end": 10338,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 10317,
											"end": 10338,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 10317,
											"end": 10338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10340,
											"end": 10363,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10340,
											"end": 10363,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 10340,
											"end": 10363,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 10340,
											"end": 10363,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C97B5F71DE675C355B301D9BB4E0D9E2CC0D5F6FB5C2BCC4B55320CAC8F563E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "DUP16",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10229,
											"end": 10385,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10229,
											"end": 10385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10229,
											"end": 10385,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C97B5F71DE675C355B301D9BB4E0D9E2CC0D5F6FB5C2BCC4B55320CAC8F563E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C97B5F71DE675C355B301D9BB4E0D9E2CC0D5F6FB5C2BCC4B55320CAC8F563E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10215,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 10129,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10171,
											"end": 10204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9572,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 10171,
											"end": 10204,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10171,
											"end": 10204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 10171,
											"end": 10204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10171,
											"end": 10204,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 10171,
											"end": 10204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10215,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10129,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 10129,
											"end": 10215,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 10038,
											"end": 10099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 10038,
											"end": 10099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 10038,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "596F75206861766520616C7265616479206A6F696E6564207468697320706F74"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81A5B881D1A194818DD5C9C995B9D081C9BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9459,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141BDD081A5CC8199D5B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2357,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2303,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2357,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2358,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2357,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1147,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11528,
											"end": 11532,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11844,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11528,
											"end": 11532,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 11826,
											"end": 11844,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP13",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "9371DF51"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11945,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 11929,
											"end": 11945,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11945,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11979,
											"end": 12008,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 11979,
											"end": 12008,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 11979,
											"end": 12008,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 11979,
											"end": 12008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11979,
											"end": 12008,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 11979,
											"end": 12008,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12018,
											"end": 12029,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 12018,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 12018,
											"end": 12029,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12018,
											"end": 12029,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 12018,
											"end": 12029,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12018,
											"end": 12029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12018,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 12018,
											"end": 12042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12018,
											"end": 12042,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 12018,
											"end": 12042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12180,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12206,
											"end": 12216,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12206,
											"end": 12216,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 12180,
											"end": 12216,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12180,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 12180,
											"end": 12216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12180,
											"end": 12216,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 12180,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16380,
											"end": 16403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 16353,
											"end": 16370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 16353,
											"end": 16370,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16353,
											"end": 16370,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 16353,
											"end": 16370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16353,
											"end": 16370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16353,
											"end": 16370,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 16353,
											"end": 16370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16380,
											"end": 16403,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16380,
											"end": 16403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 16380,
											"end": 16403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16380,
											"end": 16403,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 16380,
											"end": 16403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16380,
											"end": 16403,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 12365,
											"end": 12416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 12365,
											"end": 12416,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12365,
											"end": 12416,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12365,
											"end": 12416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12365,
											"end": 12416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12365,
											"end": 12416,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 12365,
											"end": 12416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12466,
											"end": 12488,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12466,
											"end": 12488,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12466,
											"end": 12488,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12527,
											"end": 12593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 12466,
											"end": 12488,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12466,
											"end": 12488,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12528,
											"end": 12562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 12528,
											"end": 12562,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 12528,
											"end": 12562,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 12528,
											"end": 12562,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12528,
											"end": 12562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12528,
											"end": 12562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12528,
											"end": 12562,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 12528,
											"end": 12562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12527,
											"end": 12593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 12527,
											"end": 12593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12527,
											"end": 12593,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 12527,
											"end": 12593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12616,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 12603,
											"end": 12616,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 12655,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 12655,
											"end": 12674,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12655,
											"end": 12674,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12655,
											"end": 12674,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 12655,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 12655,
											"end": 12693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12655,
											"end": 12693,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 12655,
											"end": 12693,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12739,
											"end": 12749,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 12739,
											"end": 12749,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12739,
											"end": 12749,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 12797,
											"end": 12812,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 16380,
											"end": 16403,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 12774,
											"end": 12794,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12774,
											"end": 12794,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "17119229"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12885,
											"end": 12894,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 12877,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 12885,
											"end": 12894,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 12885,
											"end": 12894,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 12885,
											"end": 12901,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12877,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 12877,
											"end": 12922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12877,
											"end": 12922,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 12877,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "93CBF217"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13129,
											"end": 13260,
											"name": "PUSH",
											"source": 12,
											"value": "9EF3FBD1495A53D36401C5153BE21A35A6214297031B5E106B12307835851D2F"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 13163,
											"end": 13179,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13163,
											"end": 13179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13129,
											"end": 13260,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 13338,
											"end": 13365,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13338,
											"end": 13365,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13338,
											"end": 13365,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13338,
											"end": 13365,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13410,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13410,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 13334,
											"end": 13410,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13410,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 13334,
											"end": 13410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13381,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 13381,
											"end": 13399,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13381,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 13381,
											"end": 13399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13381,
											"end": 13399,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 13381,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13410,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13334,
											"end": 13410,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 13334,
											"end": 13410,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 12956,
											"end": 13069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 12956,
											"end": 13069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 12956,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 12836,
											"end": 12867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 12836,
											"end": 12867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 12836,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 11794,
											"end": 11873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 11794,
											"end": 11873,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8837,
											"end": 8901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8837,
											"end": 8901,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6893,
											"end": 6969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6893,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6893,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6969,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6893,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6893,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6893,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6969,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6893,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4866,
											"end": 4876,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6961,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6961,
											"end": 6962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6962,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6961,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A33757D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4921,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5031,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5031,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4E606C47"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5199,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5199,
											"name": "PUSH",
											"source": 12,
											"value": "2FC95838C71E76EC69FF817983BFF17C710F34E0"
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "36B91F2B"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5267,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5267,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5225,
											"end": 5267,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5267,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5267,
											"name": "PUSH",
											"source": 12,
											"value": "E4860D3973802C7C42450D7B9741921C7711D039"
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5535,
											"name": "PUSH",
											"source": 12,
											"value": "6CC14824EA2918F5DE5C2F75A9DA968AD4BD6344"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4921,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4921,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5622,
											"end": 5638,
											"name": "PUSH",
											"source": 12,
											"value": "38D7EA4C68000"
										},
										{
											"begin": 5605,
											"end": 5638,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FF0000000000000000"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5144,
											"end": 5268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 5144,
											"end": 5268,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5041,
											"end": 5070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 5041,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4887,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "10000000000000001"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP13",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP13",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2303,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16595,
											"end": 16971,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16595,
											"end": 16971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 16595,
											"end": 16971,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16645,
											"end": 16657,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16679,
											"end": 16696,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16679,
											"end": 16696,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16645,
											"end": 16657,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16814,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16824,
											"end": 16834,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16797,
											"end": 16870,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16797,
											"end": 16870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16797,
											"end": 16870,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 16797,
											"end": 16870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16797,
											"end": 16870,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 16797,
											"end": 16870,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 16805,
											"end": 16850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 16805,
											"end": 16850,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F20726576656E756520746F207769746864726177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16595,
											"end": 16971,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 16595,
											"end": 16971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16938,
											"end": 16959,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16938,
											"end": 16959,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16938,
											"end": 16959,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16938,
											"end": 16959,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16595,
											"end": 16971,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 16595,
											"end": 16971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16917,
											"end": 16927,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 16909,
											"end": 16960,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15499,
											"end": 15503,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15543,
											"end": 15553,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15529,
											"end": 15558,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15543,
											"end": 15553,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15803,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15786,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15874,
											"end": 15920,
											"name": "PUSH",
											"source": 12,
											"value": "24B5EFA61DD1CFC659205A97FB8ED868F3CB8C81922BAB2B96423E5DE1DE2CB7"
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15786,
											"end": 15859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15786,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 15786,
											"end": 15859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15786,
											"end": 15859,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 15786,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15543,
											"end": 15553,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15874,
											"end": 15920,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 15794,
											"end": 15839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 15794,
											"end": 15839,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2072657761726420746F20636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2303,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17553,
											"end": 17569,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "47F5C767712C0CB55E0943DE27DBB2DB3B8BDAC1E899AF22D477462089A99558"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2303,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 17657,
											"end": 17681,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 14268,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14222,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14128,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 14128,
											"end": 14180,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14128,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14128,
											"end": 14180,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14128,
											"end": 14180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 14153,
											"end": 14163,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14153,
											"end": 14163,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 14128,
											"end": 14180,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14128,
											"end": 14180,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14222,
											"end": 14258,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 14222,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14276,
											"end": 14281,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3859,
											"end": 3886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14268,
											"end": 14358,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 14268,
											"end": 14358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14276,
											"end": 14281,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 14376,
											"end": 14395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14376,
											"end": 14395,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 14376,
											"end": 14406,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14376,
											"end": 14406,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14376,
											"end": 14406,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14477,
											"end": 14499,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14477,
											"end": 14499,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 14519,
											"end": 14550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 14477,
											"end": 14499,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 14477,
											"end": 14499,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 14519,
											"end": 14550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14519,
											"end": 14550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14519,
											"end": 14550,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 14519,
											"end": 14550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "616D6F756E742073686F756C64206265206C657373207468616E206F72206571"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "75616C20746F207269736B20706F6F6C2062616C616E63650000000000000000"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2303,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 17357,
											"end": 17381,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17399,
											"end": 17409,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17399,
											"end": 17409,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17399,
											"end": 17409,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17399,
											"end": 17409,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17399,
											"end": 17409,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17399,
											"end": 17409,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17438,
											"end": 17467,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17438,
											"end": 17467,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 17438,
											"end": 17467,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 17438,
											"end": 17467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17438,
											"end": 17467,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 17438,
											"end": 17467,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17438,
											"end": 17467,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 17391,
											"end": 17428,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2303,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4AA7D2F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17097,
											"end": 17101,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17104,
											"end": 17114,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 17071,
											"end": 17115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 17071,
											"end": 17115,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2303,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "47F5C767712C0CB55E0943DE27DBB2DB3B8BDAC1E899AF22D477462089A99558"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17846,
											"end": 17887,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 17846,
											"end": 17887,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17846,
											"end": 17887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17846,
											"end": 17887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17873,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 17846,
											"end": 17887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17846,
											"end": 17887,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17846,
											"end": 17887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 17846,
											"end": 17887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17846,
											"end": 17887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 17846,
											"end": 17887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17846,
											"end": 17887,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 17846,
											"end": 17887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17836,
											"end": 17888,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17836,
											"end": 17888,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17938,
											"end": 17948,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2069,
											"end": 2096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2124,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2222,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2147,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 2144,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2126,
											"end": 2142,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2142,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2142,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 2126,
											"end": 2142,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9323,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9323,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 9318,
											"end": 9323,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9632,
											"end": 9751,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9632,
											"end": 9751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9751,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9369,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 9318,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2147,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2111,
											"end": 2124,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 2111,
											"end": 2124,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9369,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 9318,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9632,
											"end": 9751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9632,
											"end": 9751,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9632,
											"end": 9751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9751,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 9318,
											"end": 9369,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2142,
											"name": "tag",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 2126,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2142,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2142,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2142,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1412,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17873,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18009,
											"end": 18019,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 18049,
											"end": 18077,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18049,
											"end": 18077,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18049,
											"end": 18077,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18160,
											"end": 18188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 18160,
											"end": 18188,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18160,
											"end": 18188,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18160,
											"end": 18188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18160,
											"end": 18188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18160,
											"end": 18188,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 18160,
											"end": 18188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18224,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18243,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17863,
											"end": 17873,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17873,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17873,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17873,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18009,
											"end": 18019,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 18362,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18224,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 18362,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18362,
											"end": 18399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18362,
											"end": 18399,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 18362,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18224,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18473,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17873,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2106,
											"end": 2222,
											"name": "tag",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 2106,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "461BCD"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "165A595B19081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 18464,
											"end": 18511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 18464,
											"end": 18511,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC8199D5B991CC81A5B881D1A19481D985D5B1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F2066756E6473206C65667420746F20636C61696D206F7220616C72656164"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3C9031B630B4B6B2B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "461BCD"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B210383937B7B317"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1445,
											"end": 1529,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19191,
											"end": 19195,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19231,
											"end": 19250,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 19231,
											"end": 19250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1192,
											"end": 1215,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 861,
											"end": 886,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17119229"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 19031,
											"end": 19062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 19031,
											"end": 19062,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14670,
											"end": 14674,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14700,
											"end": 14712,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 14721,
											"end": 14737,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 14721,
											"end": 14737,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14721,
											"end": 14737,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 14739,
											"end": 14749,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 14842,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 14842,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 14842,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 14842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 14802,
											"end": 14842,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14801,
											"end": 14895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14801,
											"end": 14895,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14801,
											"end": 14895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 14801,
											"end": 14895,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 15352,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 15352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 14940,
											"end": 15352,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14700,
											"end": 14712,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 14983,
											"end": 14994,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15375,
											"end": 15413,
											"name": "PUSH",
											"source": 12,
											"value": "CEF8FAC05AFB87995942422EAC900DE6AF11A555D80D075340AF81DB492119FE"
										},
										{
											"begin": 14973,
											"end": 15005,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 14973,
											"end": 15005,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14973,
											"end": 15005,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14973,
											"end": 15005,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 15110,
											"end": 15125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 14973,
											"end": 15005,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 14973,
											"end": 15005,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 14969,
											"end": 15097,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 15352,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 14940,
											"end": 15352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15110,
											"end": 15125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15110,
											"end": 15125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15110,
											"end": 15125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 15110,
											"end": 15125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15110,
											"end": 15125,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 15110,
											"end": 15125,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14739,
											"end": 14749,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15375,
											"end": 15413,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15097,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 14969,
											"end": 15097,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15025,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 15047,
											"end": 15082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 15025,
											"end": 15082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 15047,
											"end": 15082,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15047,
											"end": 15082,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15047,
											"end": 15082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 15047,
											"end": 15082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15047,
											"end": 15082,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 15047,
											"end": 15082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15025,
											"end": 15044,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15025,
											"end": 15044,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15025,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 15025,
											"end": 15044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15025,
											"end": 15044,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 15025,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15025,
											"end": 15082,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 15025,
											"end": 15082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15097,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15097,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 14969,
											"end": 15097,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 15352,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 14940,
											"end": 15352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15172,
											"end": 15188,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 15172,
											"end": 15188,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15375,
											"end": 15413,
											"name": "PUSH",
											"source": 12,
											"value": "CEF8FAC05AFB87995942422EAC900DE6AF11A555D80D075340AF81DB492119FE"
										},
										{
											"begin": 15162,
											"end": 15199,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15162,
											"end": 15199,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15162,
											"end": 15199,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15162,
											"end": 15199,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 15319,
											"end": 15339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 15162,
											"end": 15199,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15162,
											"end": 15199,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15158,
											"end": 15306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 15158,
											"end": 15306,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15319,
											"end": 15339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15319,
											"end": 15339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15319,
											"end": 15339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 15319,
											"end": 15339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15319,
											"end": 15339,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 15319,
											"end": 15339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 15352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 14940,
											"end": 15352,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1E"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420696E64657820666F72207061727469636970616E74730000"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14801,
											"end": 14895,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 14801,
											"end": 14895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14848,
											"end": 14894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14848,
											"end": 14894,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14848,
											"end": 14894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 14848,
											"end": 14894,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14801,
											"end": 14895,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 14801,
											"end": 14895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14801,
											"end": 14895,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14801,
											"end": 14895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 14801,
											"end": 14895,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14848,
											"end": 14894,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 14848,
											"end": 14894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14871,
											"end": 14887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14871,
											"end": 14887,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 14871,
											"end": 14887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14871,
											"end": 14887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 14862,
											"end": 14894,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14862,
											"end": 14894,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14848,
											"end": 14894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 14848,
											"end": 14894,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 14842,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 14802,
											"end": 14842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14700,
											"end": 14712,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 14824,
											"end": 14835,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14824,
											"end": 14835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 14842,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 14842,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 14842,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14802,
											"end": 14842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 14802,
											"end": 14842,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "596F752068617665206E6F74206A6F696E6564207468697320706F7400000000"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17119229"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6966,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 6991,
											"end": 7005,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 6987,
											"end": 7005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6974,
											"end": 6983,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6974,
											"end": 7005,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6966,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 6966,
											"end": 7026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6966,
											"end": 7026,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 6966,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7045,
											"end": 7072,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7126,
											"end": 7150,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7210,
											"end": 7252,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 7334,
											"end": 7345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7372,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7396,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7406,
											"end": 7410,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "C4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "93CBF217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7683,
											"end": 7687,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C97B5F71DE675C355B301D9BB4E0D9E2CC0D5F6FB5C2BCC4B55320CAC8F563E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "C4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7733,
											"end": 7746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7733,
											"end": 7746,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7766,
											"end": 7788,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7766,
											"end": 7788,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 7788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7683,
											"end": 7687,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 7802,
											"end": 7823,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7802,
											"end": 7823,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7396,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7890,
											"end": 7919,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7890,
											"end": 7919,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6991,
											"end": 7005,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 7955,
											"end": 7979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7955,
											"end": 7979,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8010,
											"end": 8036,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 8010,
											"end": 8036,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8010,
											"end": 8036,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8110,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 8069,
											"end": 8092,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 8069,
											"end": 8092,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8069,
											"end": 8092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7372,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 8120,
											"end": 8142,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8120,
											"end": 8142,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8204,
											"end": 8240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 8171,
											"end": 8190,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 8171,
											"end": 8190,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8171,
											"end": 8190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8204,
											"end": 8223,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 7386,
											"end": 7396,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 8204,
											"end": 8223,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8204,
											"end": 8223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8204,
											"end": 8240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 8204,
											"end": 8240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8204,
											"end": 8240,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 8204,
											"end": 8240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8250,
											"end": 8262,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7396,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8324,
											"end": 8483,
											"name": "PUSH",
											"source": 12,
											"value": "37BB26F2981AD94B38AFE928452CAD1BCA628B82F1781D95EC69D53ACF5D0D9B"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7396,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "C4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8324,
											"end": 8483,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8324,
											"end": 8483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8324,
											"end": 8483,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7396,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "C4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C97B5F71DE675C355B301D9BB4E0D9E2CC0D5F6FB5C2BCC4B55320CAC8F563E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "F8"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7501,
											"end": 7614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 7501,
											"end": 7614,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "43726561746F722073686F756C64206465706F7369742074686520696E697469"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B08185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7363,
											"end": 7421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4E756D657261746F72206D757374206265206C657373207468616E206F722065"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38BAB0B6103A37903232B737B6B4B730BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "496E7465726573742064656E6F6D696E61746F72206D75737420626520706F73"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6974697665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "526F746174696F6E206379636C65206D75737420626520706F73697469766500"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6925,
											"end": 6956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 6925,
											"end": 6956,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E7420666565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 16208,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15990,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16115,
											"end": 16119,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16178,
											"end": 16201,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 16144,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16175,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16175,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 16154,
											"end": 16175,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16175,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16144,
											"end": 16175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16144,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 16144,
											"end": 16175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16144,
											"end": 16175,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 16144,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16178,
											"end": 16201,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16178,
											"end": 16201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 16208,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 16208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "5369676E617475726520766572696669636174696F6E206661696C6564000000"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 3485,
											"end": 3576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "47F5C767712C0CB55E0943DE27DBB2DB3B8BDAC1E899AF22D477462089A99558"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"name": "tag",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 3485,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18550,
											"end": 18950,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 18550,
											"end": 18950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18867,
											"end": 18933,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18867,
											"end": 18933,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18867,
											"end": 18933,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3C"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "3C"
										},
										{
											"begin": 18867,
											"end": 18933,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18867,
											"end": 18933,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18867,
											"end": 18933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 18867,
											"end": 18933,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18867,
											"end": 18933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 18867,
											"end": 18933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18867,
											"end": 18933,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 18867,
											"end": 18933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18844,
											"end": 18943,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18844,
											"end": 18943,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 18550,
											"end": 18950,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18550,
											"end": 18950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "47F5C767712C0CB55E0943DE27DBB2DB3B8BDAC1E899AF22D477462089A99558"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "624"
										},
										{
											"begin": 2276,
											"end": 2278,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "626"
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2719,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2739,
											"end": 2764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "tag",
											"source": 4,
											"value": "626"
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2732,
											"end": 2764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "tag",
											"source": 4,
											"value": "624"
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2795,
											"end": 2878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "629"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7327,
											"end": 7334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "tag",
											"source": 4,
											"value": "629"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F645EEDF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "tag",
											"source": 4,
											"value": "631"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "633"
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCE698F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "tag",
											"source": 4,
											"value": "633"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7656,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "635"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "tag",
											"source": 4,
											"value": "635"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 4,
											"value": "35E2F383"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 4,
											"value": "E2"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "tag",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8837,
											"end": 8901,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6265,
											"name": "PUSH",
											"source": 4,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "639"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 19291,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "643"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5140,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "643"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "tag",
											"source": 4,
											"value": "639"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									],
									".data": {
										"47F5C767712C0CB55E0943DE27DBB2DB3B8BDAC1E899AF22D477462089A99558": "9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300",
										"C97B5F71DE675C355B301D9BB4E0D9E2CC0D5F6FB5C2BCC4B55320CAC8F563E0": "43d2f309913f6afc5d717f60864d2d192b69963d25204b6a12765e2795bf027f"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol",
								"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol",
								"@pythnetwork/entropy-sdk-solidity/IEntropy.sol",
								"contracts/IBlast.sol",
								"contracts/IBlastPoints.sol",
								"contracts/IERC20Rebasing.sol",
								"contracts/QuailFinance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BLAST()": "97d75776",
							"USDB()": "31a0edec",
							"admin()": "f851a440",
							"calculateRiskPoolBalance(uint256,uint256)": "7d77990c",
							"changeAdminSigner(address)": "91dc969e",
							"claimFunds(uint256,bytes32[])": "61e7d805",
							"claimMyContractsGas()": "77d5d2dc",
							"claimReward(uint256)": "ae169a50",
							"createPot(string,bytes32,uint256,uint256,uint256,uint256,uint256)": "0fae6443",
							"getEntropyFee()": "2d971e63",
							"getEthSignedMessageHash(bytes32)": "fa540801",
							"getRiskPoolBalance(uint256)": "4d781b31",
							"hasClaimed(address)": "73b2e80e",
							"hasJoinedPot(uint256,uint256,address)": "4da1ec40",
							"initialize(address)": "c4d66de8",
							"joinPot(uint256,bytes,uint256)": "f78aedf9",
							"merkleRoot()": "2eb4a7ab",
							"owner()": "8da5cb5b",
							"potCreationFee()": "ec71687b",
							"pots(uint256)": "c3c3df4f",
							"renounceOwnership()": "715018a6",
							"rotateLiquidity(uint256,bytes32,bytes32,bytes32)": "ca829f10",
							"setMerkleRoot(bytes32,uint256)": "7c382d0b",
							"totalRevenue()": "bf2d9e0b",
							"totalYielDeposited()": "07dd3f44",
							"transferOwnership(address)": "f2fde38b",
							"updatePotCreationFee(uint256)": "82199e3f",
							"usdbToken()": "4a80409e",
							"useRiskPool(uint256,uint256,bytes,uint256)": "818c5548",
							"withdrawFromPot(uint256,uint256,bool)": "210eaeae",
							"withdrawRevenue(bool)": "b7db43c8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"potId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rotationCycleInSeconds\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_interestDenominator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_interestNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_numParticipants\",\"type\":\"uint256\"}],\"name\":\"ParticipantJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"potId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"ParticipantRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"potId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rotationCycleInSeconds\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_interestDenominator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_interestNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_numParticipants\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"userCommitment\",\"type\":\"bytes32\"}],\"name\":\"PotCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"potId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"potId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"userCommitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usedRiskPoolBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RotationCompleted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLAST\",\"outputs\":[{\"internalType\":\"contract IBlast\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDB\",\"outputs\":[{\"internalType\":\"contract IERC20Rebasing\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_potId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateRiskPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdminSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claimFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimMyContractsGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_potId\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"userCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_rotationCycleInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_interestDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_interestNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_numParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"createPot\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntropyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"potId\",\"type\":\"uint256\"}],\"name\":\"getRiskPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"riskPoolBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasJoinedPot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_entropy\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_potId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"joinPot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potCreationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pots\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"riskPoolBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"useRiskPoolBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rotationCycleInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRotationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentRound\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"potCreator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_potId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"userCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"userRandom\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"providerRandom\",\"type\":\"bytes32\"}],\"name\":\"rotateLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRevenue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalYielDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updatePotCreationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdbToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_potId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"useRiskPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_potId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isWinner\",\"type\":\"bool\"}],\"name\":\"withdrawFromPot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isUsdb\",\"type\":\"bool\"}],\"name\":\"withdrawRevenue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/QuailFinance.sol\":\"QuailFinance\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol\":{\"keccak256\":\"0xd8a8c77c864481ee7620adf8b92219f3c68c626271887e26330362642053f504\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f918e6fcdf4cc8c991ff4c7d81860c6b0e3b4b536e543361309cfecd8a8ecf67\",\"dweb:/ipfs/QmdBuzs7dyGGaceP4QDqu3MLnqeBLbsEpCKGWyz3a9kY8v\"]},\"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol\":{\"keccak256\":\"0xace052155e23df810ba04a93da02fc527efd0a6fd9244d95574af5d8891934e7\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://31d77a8a3cfb552c684867ec96bb8ea0e59573db7d3108cd561b03e4749fd415\",\"dweb:/ipfs/QmepPDf6digkAGepANKv3yW8d5QqmJQqWjgmWSzNJVkMLq\"]},\"@pythnetwork/entropy-sdk-solidity/IEntropy.sol\":{\"keccak256\":\"0x9d4556ea3b36960a43e6f4c2df53f5e4ffa980deaa2c15bfdefc5f66258ca748\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://21d4bded2b3b30f3ced6ea24694e3b04bb94cab28796ee2786720a80e0b73bdd\",\"dweb:/ipfs/QmQfBFzSZj9cNxne8izUE1fYvfFoGjAisUa3aeh2YYDuqc\"]},\"contracts/IBlast.sol\":{\"keccak256\":\"0x55ca30a5c12bd255a306b9342e7e101ce0c88d62679318372771b8cb0b7ce733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df42814393047e060e4188a8736131ff4cac706080d04e207809a810b73bbc80\",\"dweb:/ipfs/QmZxXg2RDc8qopt354UD7qVTKBwYtt7cFJ1tpqJNyxpK1Q\"]},\"contracts/IBlastPoints.sol\":{\"keccak256\":\"0xb39cc4f8d44b519407f1176b4bf37351c78828046287f8702a118aa0f097fecb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b604a8f941e1d868736776fb40db3a619e28c8f7890376582c2e09fd5cb44f17\",\"dweb:/ipfs/QmT5C6WKNyCwkSUKAScmD6cRyqoQTmPe95wbxUBuwDntko\"]},\"contracts/IERC20Rebasing.sol\":{\"keccak256\":\"0xd7456daba0e57d0561815401c9f24a2fcf8b4daa471c16055c92af915aaaf33f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43cbe83d82e6c965beb79df69c3154803aa59f6b71c326697e408d7884dc46e4\",\"dweb:/ipfs/QmTYC1k7XZ5XftKRXk8ZHVvpACxUbLh7CQVAa2tbdEKLvo\"]},\"contracts/QuailFinance.sol\":{\"keccak256\":\"0xeae668c446d3b971f283c0bfdbabddd8d34b14a3a26dcc6dcb8dc9f9344d96ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fe78366a92a984894c2c1ebbd8ab1a4abb987aff0ee0508f6fb454f354471ea\",\"dweb:/ipfs/QmccmwchLc7e479CP9BgPXcyBPa69B2npSTvjKVKU9PtcR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1768,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "entropy",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IEntropy)1696"
							},
							{
								"astId": 1770,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "entropyProvider",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1772,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "admin",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1777,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "merkleRoot",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 1780,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "nextPotId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1788,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "totalRevenue",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1790,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "potCreationFee",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1792,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "totalYielDeposited",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1795,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "usdbToken",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(IERC20)572"
							},
							{
								"astId": 1799,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "hasClaimed",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1804,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "pots",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_struct(Pot)1855_storage)"
							},
							{
								"astId": 1808,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "userYield",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1816,
								"contract": "contracts/QuailFinance.sol:QuailFinance",
								"label": "hasJoinedPot",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)572": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IEntropy)1696": {
								"encoding": "inplace",
								"label": "contract IEntropy",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							"t_mapping(t_uint256,t_struct(Pot)1855_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct QuailFinance.Pot)",
								"numberOfBytes": "32",
								"value": "t_struct(Pot)1855_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Pot)1855_storage": {
								"encoding": "inplace",
								"label": "struct QuailFinance.Pot",
								"members": [
									{
										"astId": 1818,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1820,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1822,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "riskPoolBalance",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1824,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "useRiskPoolBalance",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1826,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "rotationCycleInSeconds",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1828,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "lastRotationTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1830,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "interestNumerator",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1832,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "interestDenominator",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1834,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "numParticipants",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 1836,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "currentRound",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 1838,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "sequenceNumber",
										"offset": 0,
										"slot": "10",
										"type": "t_uint64"
									},
									{
										"astId": 1840,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "potCreator",
										"offset": 8,
										"slot": "10",
										"type": "t_address"
									},
									{
										"astId": 1843,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "participants",
										"offset": 0,
										"slot": "11",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 1846,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "winners",
										"offset": 0,
										"slot": "12",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 1850,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "amountWon",
										"offset": 0,
										"slot": "13",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 1854,
										"contract": "contracts/QuailFinance.sol:QuailFinance",
										"label": "hasWon",
										"offset": 0,
										"slot": "14",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "480"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 495,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								494,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 449,
							"src": "126:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"728:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:2"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "800:7:2",
										"statements": []
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:2"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 494,
									"src": "748:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "875:7:2",
										"statements": []
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:2"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:2"
									},
									"scope": 494,
									"src": "813:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "949:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "959:17:2"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 494,
									"src": "887:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1056:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 481,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 480,
												"id": 483,
												"nodeType": "Return",
												"src": "1066:15:2"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1040:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:2"
									},
									"scope": 494,
									"src": "989:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "1166:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 489,
												"id": 491,
												"nodeType": "Return",
												"src": "1176:8:2"
											}
										]
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1157:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:2"
									},
									"scope": 494,
									"src": "1094:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 495,
							"src": "688:505:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							572
						]
					},
					"id": 573,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 497,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 572,
							"linearizedBaseContracts": [
								572
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 506,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 515,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 572,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 572,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 572,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 572,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 572,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 572,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 573,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								506,
								515
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							920
						]
					},
					"id": 921,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 574,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 575,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:4",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 920,
							"linearizedBaseContracts": [
								920
							],
							"name": "ECDSA",
							"nameLocation": "352:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 580,
									"members": [
										{
											"id": 576,
											"name": "NoError",
											"nameLocation": "392:7:4",
											"nodeType": "EnumValue",
											"src": "392:7:4"
										},
										{
											"id": 577,
											"name": "InvalidSignature",
											"nameLocation": "409:16:4",
											"nodeType": "EnumValue",
											"src": "409:16:4"
										},
										{
											"id": 578,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:4",
											"nodeType": "EnumValue",
											"src": "435:22:4"
										},
										{
											"id": 579,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:4",
											"nodeType": "EnumValue",
											"src": "467:17:4"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:4",
									"nodeType": "EnumDefinition",
									"src": "364:126:4"
								},
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:4",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 583,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:4"
									},
									"src": "564:30:4"
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:4",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 588,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "699:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:4"
									},
									"src": "665:50:4"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:4",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 593,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "840:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 590,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:4"
									},
									"src": "811:40:4"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "2242:653:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 608,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "2256:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "2781:108:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 630,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 634,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "2815:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$580_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:4",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 578,
																		"src": "2815:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$580",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 638,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "2860:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:4",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 636,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 641,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 607,
															"id": 642,
															"nodeType": "Return",
															"src": "2795:83:4"
														}
													]
												},
												"id": 644,
												"nodeType": "IfStatement",
												"src": "2252:637:4",
												"trueBody": {
													"id": 629,
													"nodeType": "Block",
													"src": "2280:495:4",
													"statements": [
														{
															"assignments": [
																613
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 613,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 629,
																	"src": "2294:9:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 612,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 614,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:4"
														},
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 629,
																	"src": "2317:9:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 617,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:4"
														},
														{
															"assignments": [
																619
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 619,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 629,
																	"src": "2340:7:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 618,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:4"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:4",
																"nodeType": "YulBlock",
																"src": "2548:171:4",
																"statements": [
																	{
																		"nativeSrc": "2566:32:4",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:4",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:4",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:4",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:4",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:4"
																					},
																					"nativeSrc": "2577:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:4"
																			},
																			"nativeSrc": "2571:27:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:4"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:4",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:4",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:4",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:4",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:4",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:4"
																					},
																					"nativeSrc": "2626:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:4"
																			},
																			"nativeSrc": "2620:27:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:4"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:4",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:4",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:4",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:4",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:4"
																							},
																							"nativeSrc": "2683:20:4",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:4"
																					},
																					"nativeSrc": "2677:27:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:4"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:4"
																			},
																			"nativeSrc": "2669:36:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:4"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:4"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 613,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:4",
																	"valueSize": 1
																},
																{
																	"declaration": 616,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:4",
																	"valueSize": 1
																},
																{
																	"declaration": 598,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:4",
																	"valueSize": 1
																},
																{
																	"declaration": 598,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:4",
																	"valueSize": 1
																},
																{
																	"declaration": 598,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:4",
																	"valueSize": 1
																},
																{
																	"declaration": 619,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:4",
																	"valueSize": 1
																}
															],
															"id": 621,
															"nodeType": "InlineAssembly",
															"src": "2539:180:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 623,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "2750:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 624,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "2756:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 625,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "2759:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 626,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "2762:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 622,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		646,
																		726,
																		834
																	],
																	"referencedDeclaration": 834,
																	"src": "2739:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 607,
															"id": 628,
															"nodeType": "Return",
															"src": "2732:32:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:4",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2149:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 595,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2163:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 597,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:4"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2210:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2219:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$580",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 602,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 580,
														"src": "2219:12:4"
													},
													"referencedDeclaration": 580,
													"src": "2219:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$580",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2233:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 605,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:4"
									},
									"scope": 920,
									"src": "2129:766:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "3789:168:4",
										"statements": [
											{
												"assignments": [
													657,
													660,
													662
												],
												"declarations": [
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "3800:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 656,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "3819:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$580",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 659,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 658,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 580,
																"src": "3819:12:4"
															},
															"referencedDeclaration": 580,
															"src": "3819:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "3839:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 661,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"arguments": [
														{
															"id": 664,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "3870:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 665,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "3876:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 663,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															646,
															726,
															834
														],
														"referencedDeclaration": 646,
														"src": "3859:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "3908:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 670,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "3915:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 668,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "3896:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$580_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:4"
											},
											{
												"expression": {
													"id": 673,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 657,
													"src": "3941:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 655,
												"id": 674,
												"nodeType": "Return",
												"src": "3934:16:4"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:4",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "3719:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 648,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "3733:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "3780:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:4"
									},
									"scope": 920,
									"src": "3702:255:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "4285:342:4",
										"statements": [
											{
												"id": 724,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:4",
												"statements": [
													{
														"assignments": [
															694
														],
														"declarations": [
															{
																"constant": false,
																"id": 694,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 724,
																"src": "4319:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 693,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 701,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 695,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "4331:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 696,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:4"
													},
													{
														"assignments": [
															703
														],
														"declarations": [
															{
																"constant": false,
																"id": 703,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 724,
																"src": "4522:7:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 702,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 716,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 708,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 683,
																							"src": "4547:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 707,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 706,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 710,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 712,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 704,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:4",
																	"typeDescriptions": {}
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 718,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "4596:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 719,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "4602:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 720,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "4605:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 721,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "4608:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 717,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	646,
																	726,
																	834
																],
																"referencedDeclaration": 834,
																"src": "4585:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 692,
														"id": 723,
														"nodeType": "Return",
														"src": "4578:32:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:4",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "4193:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 678,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "4207:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 680,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "4218:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 682,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:4"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "4253:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "4262:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$580",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 688,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 687,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 580,
														"src": "4262:12:4"
													},
													"referencedDeclaration": 580,
													"src": "4262:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$580",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "4276:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 690,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:4"
									},
									"scope": 920,
									"src": "4173:454:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "4840:164:4",
										"statements": [
											{
												"assignments": [
													739,
													742,
													744
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "4851:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 738,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "4870:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$580",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 741,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 740,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 580,
																"src": "4870:12:4"
															},
															"referencedDeclaration": 580,
															"src": "4870:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 744,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "4890:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 743,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"initialValue": {
													"arguments": [
														{
															"id": 746,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "4921:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 747,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "4927:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 748,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4930:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 745,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															646,
															726,
															834
														],
														"referencedDeclaration": 726,
														"src": "4910:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 752,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "4955:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 753,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "4962:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 751,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "4943:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$580_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:4"
											},
											{
												"expression": {
													"id": 756,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 739,
													"src": "4988:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 737,
												"id": 757,
												"nodeType": "Return",
												"src": "4981:16:4"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:4",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4771:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 728,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4785:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 730,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4796:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 732,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:4"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4831:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:4"
									},
									"scope": 920,
									"src": "4754:250:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "5298:1372:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 780,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "6194:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 778,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "6182:164:4",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "6267:79:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 786,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 784,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 788,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "6301:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$580_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:4",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 579,
																		"src": "6301:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$580",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 790,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "6333:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 791,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 777,
															"id": 792,
															"nodeType": "Return",
															"src": "6281:54:4"
														}
													]
												}
											},
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "6440:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 795,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 803,
												"initialValue": {
													"arguments": [
														{
															"id": 798,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "6467:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 799,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "6473:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 800,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "6476:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 801,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "6479:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 797,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 804,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "6495:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 805,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "6491:113:4",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "6517:87:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 810,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 814,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "6551:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$580_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:4",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 577,
																		"src": "6551:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$580",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 818,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 816,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 820,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 777,
															"id": 821,
															"nodeType": "Return",
															"src": "6531:62:4"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 824,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "6622:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 825,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "6630:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$580_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:4",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 576,
															"src": "6630:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 827,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 831,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 777,
												"id": 832,
												"nodeType": "Return",
												"src": "6614:49:4"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:4",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "5169:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 761,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "5191:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 763,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "5208:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 765,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "5227:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 767,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:4"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "5266:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "5275:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$580",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 772,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 580,
														"src": "5275:12:4"
													},
													"referencedDeclaration": 580,
													"src": "5275:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$580",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "5289:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 775,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:4"
									},
									"scope": 920,
									"src": "5140:1530:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "6897:166:4",
										"statements": [
											{
												"assignments": [
													849,
													852,
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 849,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "6908:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 848,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "6927:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$580",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 851,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 850,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 580,
																"src": "6927:12:4"
															},
															"referencedDeclaration": 580,
															"src": "6927:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "6947:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 853,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 856,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "6978:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 857,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "6984:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 858,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "6987:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 859,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "6990:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 855,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															646,
															726,
															834
														],
														"referencedDeclaration": 834,
														"src": "6967:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$580_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "7014:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 864,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "7021:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 862,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "7002:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$580_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:4"
											},
											{
												"expression": {
													"id": 867,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 849,
													"src": "7047:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 847,
												"id": 868,
												"nodeType": "Return",
												"src": "7040:16:4"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:4",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "6820:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 836,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "6834:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 838,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "6843:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 840,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "6854:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 842,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:4"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "6888:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:4"
									},
									"scope": 920,
									"src": "6803:260:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "7268:460:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$580",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 879,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "7282:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$580",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 880,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "7291:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$580_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:4",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 576,
														"src": "7291:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$580",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$580",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 885,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "7378:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 886,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "7387:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$580_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:4",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 577,
															"src": "7387:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$580",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 893,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "7483:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$580",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 894,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7492:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$580_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:4",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 578,
																"src": "7492:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$580",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$580",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 905,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "7617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$580",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 906,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "7626:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$580_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:4",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 579,
																	"src": "7626:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$580",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 914,
															"nodeType": "IfStatement",
															"src": "7613:109:4",
															"trueBody": {
																"id": 913,
																"nodeType": "Block",
																"src": "7658:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 910,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 876,
																					"src": "7702:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 909,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 593,
																				"src": "7679:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 912,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:4"
																	}
																]
															}
														},
														"id": 915,
														"nodeType": "IfStatement",
														"src": "7479:243:4",
														"trueBody": {
															"id": 904,
															"nodeType": "Block",
															"src": "7529:78:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 900,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 876,
																						"src": "7586:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 899,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 898,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 897,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "7550:27:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 903,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:4"
																}
															]
														}
													},
													"id": 916,
													"nodeType": "IfStatement",
													"src": "7374:348:4",
													"trueBody": {
														"id": 892,
														"nodeType": "Block",
														"src": "7418:55:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 889,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "7439:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 891,
																"nodeType": "RevertStatement",
																"src": "7432:30:4"
															}
														]
													}
												},
												"id": 917,
												"nodeType": "IfStatement",
												"src": "7278:444:4",
												"trueBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "7313:55:4",
													"statements": [
														{
															"functionReturnParameters": 878,
															"id": 883,
															"nodeType": "Return",
															"src": "7327:7:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:4",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "7217:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$580",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 873,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 872,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 580,
														"src": "7217:12:4"
													},
													"referencedDeclaration": 580,
													"src": "7217:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$580",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "7237:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 875,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:4"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:4"
									},
									"scope": 920,
									"src": "7196:532:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 921,
							"src": "344:7386:4",
							"usedErrors": [
								583,
								588,
								593
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
					"exportedSymbols": {
						"MerkleProof": [
							1457
						]
					},
					"id": 1458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 922,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MerkleProof",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 923,
								"nodeType": "StructuredDocumentation",
								"src": "144:658:5",
								"text": " @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box."
							},
							"fullyImplemented": true,
							"id": 1457,
							"linearizedBaseContracts": [
								1457
							],
							"name": "MerkleProof",
							"nameLocation": "811:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "829:60:5",
										"text": "@dev The multiproof provided is not valid."
									},
									"errorSelector": "35140492",
									"id": 926,
									"name": "MerkleProofInvalidMultiproof",
									"nameLocation": "900:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:2:5"
									},
									"src": "894:37:5"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "1362:57:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 940,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "1392:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															{
																"id": 941,
																"name": "leaf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "1399:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 939,
															"name": "processProof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "1379:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32[] memory,bytes32) pure returns (bytes32)"
															}
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1379:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 943,
														"name": "root",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "1408:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1379:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 938,
												"id": 945,
												"nodeType": "Return",
												"src": "1372:40:5"
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "937:323:5",
										"text": " @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "1274:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1298:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1281:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 928,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1281:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 929,
													"nodeType": "ArrayTypeName",
													"src": "1281:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "1313:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1305:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 931,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "1327:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1319:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 933,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:52:5"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1356:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 936,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1356:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1355:6:5"
									},
									"scope": 1457,
									"src": "1265:154:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "1589:65:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 961,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "1627:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																	"typeString": "bytes32[] calldata"
																}
															},
															{
																"id": 962,
																"name": "leaf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "1634:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																	"typeString": "bytes32[] calldata"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 960,
															"name": "processProofCalldata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "1606:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32[] calldata,bytes32) pure returns (bytes32)"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1606:33:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 964,
														"name": "root",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "1643:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1606:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 959,
												"id": 966,
												"nodeType": "Return",
												"src": "1599:48:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "1425:52:5",
										"text": " @dev Calldata version of {verify}"
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCalldata",
									"nameLocation": "1491:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1525:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1506:24:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 949,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1506:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 950,
													"nodeType": "ArrayTypeName",
													"src": "1506:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "1540:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1532:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 952,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "1554:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1546:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 954,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1505:54:5"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1583:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1583:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:6:5"
									},
									"scope": 1457,
									"src": "1482:172:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "2059:198:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "computedHash",
														"nameLocation": "2077:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1007,
														"src": "2069:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 979,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2069:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 982,
												"initialValue": {
													"id": 981,
													"name": "leaf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 974,
													"src": "2092:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2069:27:5"
											},
											{
												"body": {
													"id": 1003,
													"nodeType": "Block",
													"src": "2149:73:5",
													"statements": [
														{
															"expression": {
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 994,
																	"name": "computedHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "2163:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 996,
																			"name": "computedHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "2188:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 997,
																				"name": "proof",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "2202:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																					"typeString": "bytes32[] memory"
																				}
																			},
																			"id": 999,
																			"indexExpression": {
																				"id": 998,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "2208:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2202:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 995,
																		"name": "_hashPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "2178:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																			"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2178:33:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2163:48:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1002,
															"nodeType": "ExpressionStatement",
															"src": "2163:48:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 987,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "2126:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 988,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "2130:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2136:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2130:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2126:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"initializationExpression": {
													"assignments": [
														984
													],
													"declarations": [
														{
															"constant": false,
															"id": 984,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2119:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1004,
															"src": "2111:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 983,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2111:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 986,
													"initialValue": {
														"hexValue": "30",
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2123:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2111:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2144:3:5",
														"subExpression": {
															"id": 991,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "2144:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 993,
													"nodeType": "ExpressionStatement",
													"src": "2144:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2106:116:5"
											},
											{
												"expression": {
													"id": 1005,
													"name": "computedHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 980,
													"src": "2238:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 978,
												"id": 1006,
												"nodeType": "Return",
												"src": "2231:19:5"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "1660:302:5",
										"text": " @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted."
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "processProof",
									"nameLocation": "1976:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "2006:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1989:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 970,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1989:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 971,
													"nodeType": "ArrayTypeName",
													"src": "1989:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "2021:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "2013:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 973,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2013:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:38:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "2050:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 976,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2049:9:5"
									},
									"scope": 1457,
									"src": "1967:290:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "2428:198:5",
										"statements": [
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "computedHash",
														"nameLocation": "2446:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1047,
														"src": "2438:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1019,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2438:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"id": 1021,
													"name": "leaf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1014,
													"src": "2461:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2438:27:5"
											},
											{
												"body": {
													"id": 1043,
													"nodeType": "Block",
													"src": "2518:73:5",
													"statements": [
														{
															"expression": {
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1034,
																	"name": "computedHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "2532:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1036,
																			"name": "computedHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "2557:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1037,
																				"name": "proof",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1012,
																				"src": "2571:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																					"typeString": "bytes32[] calldata"
																				}
																			},
																			"id": 1039,
																			"indexExpression": {
																				"id": 1038,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1024,
																				"src": "2577:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2571:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1035,
																		"name": "_hashPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "2547:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																			"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																		}
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2547:33:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2532:48:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1042,
															"nodeType": "ExpressionStatement",
															"src": "2532:48:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1027,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "2495:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1028,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "2499:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2505:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2499:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2495:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1044,
												"initializationExpression": {
													"assignments": [
														1024
													],
													"declarations": [
														{
															"constant": false,
															"id": 1024,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2488:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1044,
															"src": "2480:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1023,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2480:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1026,
													"initialValue": {
														"hexValue": "30",
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2492:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2480:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2513:3:5",
														"subExpression": {
															"id": 1031,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "2513:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1033,
													"nodeType": "ExpressionStatement",
													"src": "2513:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2475:116:5"
											},
											{
												"expression": {
													"id": 1045,
													"name": "computedHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1020,
													"src": "2607:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1046,
												"nodeType": "Return",
												"src": "2600:19:5"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "2263:58:5",
										"text": " @dev Calldata version of {processProof}"
									},
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "processProofCalldata",
									"nameLocation": "2335:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "2375:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "2356:24:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1010,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2356:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1011,
													"nodeType": "ArrayTypeName",
													"src": "2356:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "2390:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "2382:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1013,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:40:5"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "2419:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1016,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2419:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2418:9:5"
									},
									"scope": 1457,
									"src": "2326:300:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "3131:76:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1066,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "3166:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															{
																"id": 1067,
																"name": "proofFlags",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "3173:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
																	"typeString": "bool[] memory"
																}
															},
															{
																"id": 1068,
																"name": "leaves",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "3185:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																},
																{
																	"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
																	"typeString": "bool[] memory"
																},
																{
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															],
															"id": 1065,
															"name": "processMultiProof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "3148:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3148:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1070,
														"name": "root",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "3196:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3148:52:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1072,
												"nodeType": "Return",
												"src": "3141:59:5"
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "2632:312:5",
										"text": " @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "multiProofVerify",
									"nameLocation": "2958:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "3001:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "2984:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1050,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2984:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1051,
													"nodeType": "ArrayTypeName",
													"src": "2984:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "proofFlags",
												"nameLocation": "3030:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "3016:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 1053,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "3016:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1054,
													"nodeType": "ArrayTypeName",
													"src": "3016:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "3058:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "3050:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "leaves",
												"nameLocation": "3089:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "3072:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1058,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3072:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1059,
													"nodeType": "ArrayTypeName",
													"src": "3072:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:127:5"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "3125:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3125:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3124:6:5"
									},
									"scope": 1457,
									"src": "2949:258:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "3574:84:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1092,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "3617:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																	"typeString": "bytes32[] calldata"
																}
															},
															{
																"id": 1093,
																"name": "proofFlags",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "3624:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
																	"typeString": "bool[] calldata"
																}
															},
															{
																"id": 1094,
																"name": "leaves",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "3636:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																	"typeString": "bytes32[] calldata"
																},
																{
																	"typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
																	"typeString": "bool[] calldata"
																},
																{
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															],
															"id": 1091,
															"name": "processMultiProofCalldata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "3591:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:52:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1096,
														"name": "root",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3647:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3591:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1090,
												"id": 1098,
												"nodeType": "Return",
												"src": "3584:67:5"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "3213:162:5",
										"text": " @dev Calldata version of {multiProofVerify}\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "multiProofVerifyCalldata",
									"nameLocation": "3389:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "3442:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "3423:24:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1076,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3423:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1077,
													"nodeType": "ArrayTypeName",
													"src": "3423:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "proofFlags",
												"nameLocation": "3473:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "3457:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 1079,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "3457:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1080,
													"nodeType": "ArrayTypeName",
													"src": "3457:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "3501:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "3493:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1082,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "leaves",
												"nameLocation": "3532:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "3515:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1084,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3515:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1085,
													"nodeType": "ArrayTypeName",
													"src": "3515:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3413:131:5"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "3568:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3568:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3567:6:5"
									},
									"scope": 1457,
									"src": "3380:278:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "4574:2107:5",
										"statements": [
											{
												"assignments": [
													1116
												],
												"declarations": [
													{
														"constant": false,
														"id": 1116,
														"mutability": "mutable",
														"name": "leavesLen",
														"nameLocation": "4966:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "4958:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4958:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"expression": {
														"id": 1117,
														"name": "leaves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "4978:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[] memory"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4985:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4978:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4958:33:5"
											},
											{
												"assignments": [
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "proofLen",
														"nameLocation": "5009:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "5001:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5001:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1124,
												"initialValue": {
													"expression": {
														"id": 1122,
														"name": "proof",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "5020:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[] memory"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5026:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5020:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5001:31:5"
											},
											{
												"assignments": [
													1126
												],
												"declarations": [
													{
														"constant": false,
														"id": 1126,
														"mutability": "mutable",
														"name": "totalHashes",
														"nameLocation": "5050:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "5042:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5042:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"expression": {
														"id": 1127,
														"name": "proofFlags",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "5064:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
															"typeString": "bool[] memory"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5075:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5064:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5042:39:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1130,
															"name": "leavesLen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "5129:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1131,
															"name": "proofLen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "5141:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5129:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1133,
															"name": "totalHashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "5153:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5167:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5153:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5129:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "5125:107:5",
												"trueBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "5170:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1137,
																	"name": "MerkleProofInvalidMultiproof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "5191:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5191:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1139,
															"nodeType": "RevertStatement",
															"src": "5184:37:5"
														}
													]
												}
											},
											{
												"assignments": [
													1146
												],
												"declarations": [
													{
														"constant": false,
														"id": 1146,
														"mutability": "mutable",
														"name": "hashes",
														"nameLocation": "5493:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "5476:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1144,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "5476:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1145,
															"nodeType": "ArrayTypeName",
															"src": "5476:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1152,
												"initialValue": {
													"arguments": [
														{
															"id": 1150,
															"name": "totalHashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "5516:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5502:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1147,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "5506:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1148,
															"nodeType": "ArrayTypeName",
															"src": "5506:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5502:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5476:52:5"
											},
											{
												"assignments": [
													1154
												],
												"declarations": [
													{
														"constant": false,
														"id": 1154,
														"mutability": "mutable",
														"name": "leafPos",
														"nameLocation": "5546:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "5538:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1153,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5538:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1156,
												"initialValue": {
													"hexValue": "30",
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5556:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5538:19:5"
											},
											{
												"assignments": [
													1158
												],
												"declarations": [
													{
														"constant": false,
														"id": 1158,
														"mutability": "mutable",
														"name": "hashPos",
														"nameLocation": "5575:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "5567:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1157,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5567:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"initialValue": {
													"hexValue": "30",
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5585:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5567:19:5"
											},
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "proofPos",
														"nameLocation": "5604:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "5596:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1164,
												"initialValue": {
													"hexValue": "30",
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5615:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5596:20:5"
											},
											{
												"body": {
													"id": 1223,
													"nodeType": "Block",
													"src": "6034:292:5",
													"statements": [
														{
															"assignments": [
																1176
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1176,
																	"mutability": "mutable",
																	"name": "a",
																	"nameLocation": "6056:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1223,
																	"src": "6048:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1175,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6048:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1189,
															"initialValue": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1177,
																		"name": "leafPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "6060:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 1178,
																		"name": "leavesLen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1116,
																		"src": "6070:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6060:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"baseExpression": {
																		"id": 1184,
																		"name": "hashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "6102:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1187,
																	"indexExpression": {
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "6109:9:5",
																		"subExpression": {
																			"id": 1185,
																			"name": "hashPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "6109:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6102:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "6060:59:5",
																"trueExpression": {
																	"baseExpression": {
																		"id": 1180,
																		"name": "leaves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "6082:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1183,
																	"indexExpression": {
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "6089:9:5",
																		"subExpression": {
																			"id": 1181,
																			"name": "leafPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "6089:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6082:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6048:71:5"
														},
														{
															"assignments": [
																1191
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1191,
																	"mutability": "mutable",
																	"name": "b",
																	"nameLocation": "6141:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1223,
																	"src": "6133:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1190,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6133:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1213,
															"initialValue": {
																"condition": {
																	"baseExpression": {
																		"id": 1192,
																		"name": "proofFlags",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "6145:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
																			"typeString": "bool[] memory"
																		}
																	},
																	"id": 1194,
																	"indexExpression": {
																		"id": 1193,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "6156:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6145:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"baseExpression": {
																		"id": 1208,
																		"name": "proof",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "6257:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1211,
																	"indexExpression": {
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "6263:10:5",
																		"subExpression": {
																			"id": 1209,
																			"name": "proofPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "6263:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6257:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "6145:129:5",
																"trueExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1195,
																					"name": "leafPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1154,
																					"src": "6178:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1196,
																					"name": "leavesLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "6188:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6178:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"baseExpression": {
																					"id": 1202,
																					"name": "hashes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1146,
																					"src": "6220:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 1205,
																				"indexExpression": {
																					"id": 1204,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "6227:9:5",
																					"subExpression": {
																						"id": 1203,
																						"name": "hashPos",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1158,
																						"src": "6227:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6220:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "6178:59:5",
																			"trueExpression": {
																				"baseExpression": {
																					"id": 1198,
																					"name": "leaves",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "6200:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 1201,
																				"indexExpression": {
																					"id": 1200,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "6207:9:5",
																					"subExpression": {
																						"id": 1199,
																						"name": "leafPos",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1154,
																						"src": "6207:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6200:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"id": 1207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6177:61:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6133:141:5"
														},
														{
															"expression": {
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1214,
																		"name": "hashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "6288:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1216,
																	"indexExpression": {
																		"id": 1215,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "6295:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6288:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1218,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1176,
																			"src": "6310:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 1219,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1191,
																			"src": "6313:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1217,
																		"name": "_hashPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "6300:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																			"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6300:15:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "6288:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1222,
															"nodeType": "ExpressionStatement",
															"src": "6288:27:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1169,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "6012:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1170,
														"name": "totalHashes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "6016:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6012:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"initializationExpression": {
													"assignments": [
														1166
													],
													"declarations": [
														{
															"constant": false,
															"id": 1166,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6005:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1224,
															"src": "5997:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1165,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5997:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1168,
													"initialValue": {
														"hexValue": "30",
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6009:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5997:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6029:3:5",
														"subExpression": {
															"id": 1172,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "6029:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1174,
													"nodeType": "ExpressionStatement",
													"src": "6029:3:5"
												},
												"nodeType": "ForStatement",
												"src": "5992:334:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1225,
														"name": "totalHashes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "6340:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6354:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6340:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1244,
															"name": "leavesLen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "6573:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6585:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6573:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1256,
														"nodeType": "Block",
														"src": "6635:40:5",
														"statements": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 1252,
																		"name": "proof",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "6656:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1254,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6662:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6656:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"functionReturnParameters": 1114,
																"id": 1255,
																"nodeType": "Return",
																"src": "6649:15:5"
															}
														]
													},
													"id": 1257,
													"nodeType": "IfStatement",
													"src": "6569:106:5",
													"trueBody": {
														"id": 1251,
														"nodeType": "Block",
														"src": "6588:41:5",
														"statements": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 1247,
																		"name": "leaves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "6609:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1249,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6616:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6609:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"functionReturnParameters": 1114,
																"id": 1250,
																"nodeType": "Return",
																"src": "6602:16:5"
															}
														]
													}
												},
												"id": 1258,
												"nodeType": "IfStatement",
												"src": "6336:339:5",
												"trueBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "6357:206:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1228,
																	"name": "proofPos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "6375:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1229,
																	"name": "proofLen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "6387:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6375:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1235,
															"nodeType": "IfStatement",
															"src": "6371:96:5",
															"trueBody": {
																"id": 1234,
																"nodeType": "Block",
																"src": "6397:70:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1231,
																				"name": "MerkleProofInvalidMultiproof",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 926,
																				"src": "6422:28:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6422:30:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1233,
																		"nodeType": "RevertStatement",
																		"src": "6415:37:5"
																	}
																]
															}
														},
														{
															"id": 1242,
															"nodeType": "UncheckedBlock",
															"src": "6480:73:5",
															"statements": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 1236,
																			"name": "hashes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6515:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1240,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1237,
																				"name": "totalHashes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1126,
																				"src": "6522:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6536:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "6522:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6515:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"functionReturnParameters": 1114,
																	"id": 1241,
																	"nodeType": "Return",
																	"src": "6508:30:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "3664:730:5",
										"text": " @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer)."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "processMultiProof",
									"nameLocation": "4408:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "4452:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "4435:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1102,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4435:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1103,
													"nodeType": "ArrayTypeName",
													"src": "4435:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "proofFlags",
												"nameLocation": "4481:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "4467:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 1105,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "4467:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1106,
													"nodeType": "ArrayTypeName",
													"src": "4467:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "leaves",
												"nameLocation": "4518:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "4501:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4501:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "4501:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4425:105:5"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "merkleRoot",
												"nameLocation": "4562:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "4554:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4554:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4553:20:5"
									},
									"scope": 1457,
									"src": "4399:2282:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "7043:2107:5",
										"statements": [
											{
												"assignments": [
													1276
												],
												"declarations": [
													{
														"constant": false,
														"id": 1276,
														"mutability": "mutable",
														"name": "leavesLen",
														"nameLocation": "7435:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "7427:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7427:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1279,
												"initialValue": {
													"expression": {
														"id": 1277,
														"name": "leaves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "7447:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[] memory"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7454:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7447:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7427:33:5"
											},
											{
												"assignments": [
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "proofLen",
														"nameLocation": "7478:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "7470:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7470:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"initialValue": {
													"expression": {
														"id": 1282,
														"name": "proof",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "7489:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
															"typeString": "bytes32[] calldata"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7495:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7489:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7470:31:5"
											},
											{
												"assignments": [
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "totalHashes",
														"nameLocation": "7519:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "7511:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7511:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1289,
												"initialValue": {
													"expression": {
														"id": 1287,
														"name": "proofFlags",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "7533:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
															"typeString": "bool[] calldata"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7544:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7533:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7511:39:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1290,
															"name": "leavesLen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "7598:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1291,
															"name": "proofLen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "7610:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7598:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1293,
															"name": "totalHashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "7622:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7636:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "7622:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7598:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1301,
												"nodeType": "IfStatement",
												"src": "7594:107:5",
												"trueBody": {
													"id": 1300,
													"nodeType": "Block",
													"src": "7639:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1297,
																	"name": "MerkleProofInvalidMultiproof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "7660:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7660:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1299,
															"nodeType": "RevertStatement",
															"src": "7653:37:5"
														}
													]
												}
											},
											{
												"assignments": [
													1306
												],
												"declarations": [
													{
														"constant": false,
														"id": 1306,
														"mutability": "mutable",
														"name": "hashes",
														"nameLocation": "7962:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "7945:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1304,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7945:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1305,
															"nodeType": "ArrayTypeName",
															"src": "7945:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1312,
												"initialValue": {
													"arguments": [
														{
															"id": 1310,
															"name": "totalHashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "7985:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7971:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1307,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7975:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1308,
															"nodeType": "ArrayTypeName",
															"src": "7975:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7971:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7945:52:5"
											},
											{
												"assignments": [
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "leafPos",
														"nameLocation": "8015:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "8007:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8007:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1316,
												"initialValue": {
													"hexValue": "30",
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8025:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8007:19:5"
											},
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "hashPos",
														"nameLocation": "8044:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "8036:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8036:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"hexValue": "30",
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8054:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8036:19:5"
											},
											{
												"assignments": [
													1322
												],
												"declarations": [
													{
														"constant": false,
														"id": 1322,
														"mutability": "mutable",
														"name": "proofPos",
														"nameLocation": "8073:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "8065:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1324,
												"initialValue": {
													"hexValue": "30",
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8084:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8065:20:5"
											},
											{
												"body": {
													"id": 1383,
													"nodeType": "Block",
													"src": "8503:292:5",
													"statements": [
														{
															"assignments": [
																1336
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1336,
																	"mutability": "mutable",
																	"name": "a",
																	"nameLocation": "8525:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1383,
																	"src": "8517:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1335,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "8517:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1349,
															"initialValue": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1337,
																		"name": "leafPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1314,
																		"src": "8529:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 1338,
																		"name": "leavesLen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1276,
																		"src": "8539:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8529:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"baseExpression": {
																		"id": 1344,
																		"name": "hashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "8571:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1347,
																	"indexExpression": {
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "8578:9:5",
																		"subExpression": {
																			"id": 1345,
																			"name": "hashPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1318,
																			"src": "8578:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8571:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "8529:59:5",
																"trueExpression": {
																	"baseExpression": {
																		"id": 1340,
																		"name": "leaves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "8551:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1343,
																	"indexExpression": {
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "8558:9:5",
																		"subExpression": {
																			"id": 1341,
																			"name": "leafPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1314,
																			"src": "8558:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8551:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8517:71:5"
														},
														{
															"assignments": [
																1351
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1351,
																	"mutability": "mutable",
																	"name": "b",
																	"nameLocation": "8610:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1383,
																	"src": "8602:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1350,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "8602:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1373,
															"initialValue": {
																"condition": {
																	"baseExpression": {
																		"id": 1352,
																		"name": "proofFlags",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "8614:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
																			"typeString": "bool[] calldata"
																		}
																	},
																	"id": 1354,
																	"indexExpression": {
																		"id": 1353,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "8625:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8614:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"baseExpression": {
																		"id": 1368,
																		"name": "proof",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "8726:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																			"typeString": "bytes32[] calldata"
																		}
																	},
																	"id": 1371,
																	"indexExpression": {
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "8732:10:5",
																		"subExpression": {
																			"id": 1369,
																			"name": "proofPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "8732:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8726:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "8614:129:5",
																"trueExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1355,
																					"name": "leafPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1314,
																					"src": "8647:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1356,
																					"name": "leavesLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1276,
																					"src": "8657:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8647:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"baseExpression": {
																					"id": 1362,
																					"name": "hashes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1306,
																					"src": "8689:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 1365,
																				"indexExpression": {
																					"id": 1364,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "8696:9:5",
																					"subExpression": {
																						"id": 1363,
																						"name": "hashPos",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1318,
																						"src": "8696:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8689:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "8647:59:5",
																			"trueExpression": {
																				"baseExpression": {
																					"id": 1358,
																					"name": "leaves",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1270,
																					"src": "8669:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 1361,
																				"indexExpression": {
																					"id": 1360,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "8676:9:5",
																					"subExpression": {
																						"id": 1359,
																						"name": "leafPos",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1314,
																						"src": "8676:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8669:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"id": 1367,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8646:61:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8602:141:5"
														},
														{
															"expression": {
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1374,
																		"name": "hashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "8757:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1376,
																	"indexExpression": {
																		"id": 1375,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "8764:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8757:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1378,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1336,
																			"src": "8779:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 1379,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1351,
																			"src": "8782:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1377,
																		"name": "_hashPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "8769:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																			"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																		}
																	},
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8769:15:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "8757:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1382,
															"nodeType": "ExpressionStatement",
															"src": "8757:27:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1329,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "8481:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1330,
														"name": "totalHashes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "8485:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8481:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1384,
												"initializationExpression": {
													"assignments": [
														1326
													],
													"declarations": [
														{
															"constant": false,
															"id": 1326,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8474:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1384,
															"src": "8466:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1325,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8466:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1328,
													"initialValue": {
														"hexValue": "30",
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8478:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8466:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8498:3:5",
														"subExpression": {
															"id": 1332,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "8498:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1334,
													"nodeType": "ExpressionStatement",
													"src": "8498:3:5"
												},
												"nodeType": "ForStatement",
												"src": "8461:334:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1385,
														"name": "totalHashes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "8809:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8823:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8809:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1404,
															"name": "leavesLen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "9042:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9054:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9042:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1416,
														"nodeType": "Block",
														"src": "9104:40:5",
														"statements": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 1412,
																		"name": "proof",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "9125:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																			"typeString": "bytes32[] calldata"
																		}
																	},
																	"id": 1414,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9131:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9125:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"functionReturnParameters": 1274,
																"id": 1415,
																"nodeType": "Return",
																"src": "9118:15:5"
															}
														]
													},
													"id": 1417,
													"nodeType": "IfStatement",
													"src": "9038:106:5",
													"trueBody": {
														"id": 1411,
														"nodeType": "Block",
														"src": "9057:41:5",
														"statements": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 1407,
																		"name": "leaves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "9078:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1409,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9085:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9078:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"functionReturnParameters": 1274,
																"id": 1410,
																"nodeType": "Return",
																"src": "9071:16:5"
															}
														]
													}
												},
												"id": 1418,
												"nodeType": "IfStatement",
												"src": "8805:339:5",
												"trueBody": {
													"id": 1403,
													"nodeType": "Block",
													"src": "8826:206:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1388,
																	"name": "proofPos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "8844:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1389,
																	"name": "proofLen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "8856:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8844:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1395,
															"nodeType": "IfStatement",
															"src": "8840:96:5",
															"trueBody": {
																"id": 1394,
																"nodeType": "Block",
																"src": "8866:70:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1391,
																				"name": "MerkleProofInvalidMultiproof",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 926,
																				"src": "8891:28:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8891:30:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1393,
																		"nodeType": "RevertStatement",
																		"src": "8884:37:5"
																	}
																]
															}
														},
														{
															"id": 1402,
															"nodeType": "UncheckedBlock",
															"src": "8949:73:5",
															"statements": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 1396,
																			"name": "hashes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1306,
																			"src": "8984:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1400,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1397,
																				"name": "totalHashes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1286,
																				"src": "8991:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9005:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "8991:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8984:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"functionReturnParameters": 1274,
																	"id": 1401,
																	"nodeType": "Return",
																	"src": "8977:30:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "6687:164:5",
										"text": " @dev Calldata version of {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "processMultiProofCalldata",
									"nameLocation": "6865:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "6919:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "6900:24:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1262,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "6900:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1263,
													"nodeType": "ArrayTypeName",
													"src": "6900:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "proofFlags",
												"nameLocation": "6950:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "6934:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 1265,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "6934:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1266,
													"nodeType": "ArrayTypeName",
													"src": "6934:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "leaves",
												"nameLocation": "6987:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "6970:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1268,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "6970:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1269,
													"nodeType": "ArrayTypeName",
													"src": "6970:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6890:109:5"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "merkleRoot",
												"nameLocation": "7031:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "7023:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1272,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7023:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7022:20:5"
									},
									"scope": 1457,
									"src": "6856:2294:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "9301:75:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1430,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "9318:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1431,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "9322:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "9318:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 1438,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "9364:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1439,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "9367:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1437,
															"name": "_efficientHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "9349:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
															}
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9349:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9318:51:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 1434,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "9341:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1435,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "9344:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1433,
															"name": "_efficientHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "9326:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9326:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1429,
												"id": 1442,
												"nodeType": "Return",
												"src": "9311:58:5"
											}
										]
									},
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "9156:68:5",
										"text": " @dev Sorts the pair (a, b) and hashes the result."
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashPair",
									"nameLocation": "9238:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9256:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "9248:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1422,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9248:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9267:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "9259:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1424,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9259:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9247:22:5"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "9292:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1427,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9292:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9291:9:5"
									},
									"scope": 1457,
									"src": "9229:147:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "9579:178:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "9641:110:5",
													"nodeType": "YulBlock",
													"src": "9641:110:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9662:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9662:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "a",
																		"nativeSrc": "9668:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9668:1:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9655:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9655:6:5"
																},
																"nativeSrc": "9655:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9655:15:5"
															},
															"nativeSrc": "9655:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9655:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9690:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9690:4:5",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "9696:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9696:1:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9683:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9683:6:5"
																},
																"nativeSrc": "9683:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9683:15:5"
															},
															"nativeSrc": "9683:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9683:15:5"
														},
														{
															"nativeSrc": "9711:30:5",
															"nodeType": "YulAssignment",
															"src": "9711:30:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9730:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9730:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9736:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9736:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "9720:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "9720:9:5"
																},
																"nativeSrc": "9720:21:5",
																"nodeType": "YulFunctionCall",
																"src": "9720:21:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9711:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9711:5:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1447,
														"isOffset": false,
														"isSlot": false,
														"src": "9668:1:5",
														"valueSize": 1
													},
													{
														"declaration": 1449,
														"isOffset": false,
														"isSlot": false,
														"src": "9696:1:5",
														"valueSize": 1
													},
													{
														"declaration": 1452,
														"isOffset": false,
														"isSlot": false,
														"src": "9711:5:5",
														"valueSize": 1
													}
												],
												"id": 1454,
												"nodeType": "InlineAssembly",
												"src": "9632:119:5"
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "9382:109:5",
										"text": " @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_efficientHash",
									"nameLocation": "9505:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9528:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "9520:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1446,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9520:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9539:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "9531:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9531:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9519:22:5"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9572:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "9564:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9564:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9563:15:5"
									},
									"scope": 1457,
									"src": "9496:261:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1458,
							"src": "803:8956:5",
							"usedErrors": [
								926
							],
							"usedEvents": []
						}
					],
					"src": "118:9642:5"
				},
				"id": 5
			},
			"@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol": {
				"ast": {
					"absolutePath": "@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol",
					"exportedSymbols": {
						"EntropyEvents": [
							1524
						],
						"EntropyStructs": [
							1565
						]
					},
					"id": 1525,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:6"
						},
						{
							"absolutePath": "@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol",
							"file": "./EntropyStructs.sol",
							"id": 1460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 1566,
							"src": "64:30:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EntropyEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 1524,
							"linearizedBaseContracts": [
								1524
							],
							"name": "EntropyEvents",
							"nameLocation": "106:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e8f6e85c6989b145143cc6d502c37cd7d64b8c25ca22b8dd1af3b2a83cf1a41e",
									"id": 1465,
									"name": "Registered",
									"nameLocation": "132:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "171:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "143:36:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ProviderInfo_$1547_memory_ptr",
													"typeString": "struct EntropyStructs.ProviderInfo"
												},
												"typeName": {
													"id": 1462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1461,
														"name": "EntropyStructs.ProviderInfo",
														"nameLocations": [
															"143:14:6",
															"158:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1547,
														"src": "143:27:6"
													},
													"referencedDeclaration": 1547,
													"src": "143:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProviderInfo_$1547_storage_ptr",
														"typeString": "struct EntropyStructs.ProviderInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "142:38:6"
									},
									"src": "126:55:6"
								},
								{
									"anonymous": false,
									"eventSelector": "20e2c2fc72b2cb9fbae9d7d8fd4bdf5bdcc4579043e1e9854e2baf045b6a31d3",
									"id": 1470,
									"name": "Requested",
									"nameLocation": "193:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"indexed": false,
												"mutability": "mutable",
												"name": "request",
												"nameLocation": "226:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "203:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$1564_memory_ptr",
													"typeString": "struct EntropyStructs.Request"
												},
												"typeName": {
													"id": 1467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1466,
														"name": "EntropyStructs.Request",
														"nameLocations": [
															"203:14:6",
															"218:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1564,
														"src": "203:22:6"
													},
													"referencedDeclaration": 1564,
													"src": "203:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$1564_storage_ptr",
														"typeString": "struct EntropyStructs.Request"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:32:6"
									},
									"src": "187:48:6"
								},
								{
									"anonymous": false,
									"eventSelector": "a4c85ab66677ced5caabbbba151714887944b9e0fee05f320e42a1b13a01fbc6",
									"id": 1483,
									"name": "RequestedWithCallback",
									"nameLocation": "246:21:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "293:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "277:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestor",
												"nameLocation": "327:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "311:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"indexed": true,
												"mutability": "mutable",
												"name": "sequenceNumber",
												"nameLocation": "361:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "346:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1475,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "346:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"indexed": false,
												"mutability": "mutable",
												"name": "userRandomNumber",
												"nameLocation": "393:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "385:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"indexed": false,
												"mutability": "mutable",
												"name": "request",
												"nameLocation": "442:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "419:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$1564_memory_ptr",
													"typeString": "struct EntropyStructs.Request"
												},
												"typeName": {
													"id": 1480,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1479,
														"name": "EntropyStructs.Request",
														"nameLocations": [
															"419:14:6",
															"434:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1564,
														"src": "419:22:6"
													},
													"referencedDeclaration": 1564,
													"src": "419:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$1564_storage_ptr",
														"typeString": "struct EntropyStructs.Request"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "267:188:6"
									},
									"src": "240:216:6"
								},
								{
									"anonymous": false,
									"eventSelector": "39c729f66b0c8aa543d92bc83fb7e0914c9701326b96365b593f28ba706976e4",
									"id": 1496,
									"name": "Revealed",
									"nameLocation": "468:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"indexed": false,
												"mutability": "mutable",
												"name": "request",
												"nameLocation": "509:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "486:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$1564_memory_ptr",
													"typeString": "struct EntropyStructs.Request"
												},
												"typeName": {
													"id": 1485,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1484,
														"name": "EntropyStructs.Request",
														"nameLocations": [
															"486:14:6",
															"501:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1564,
														"src": "486:22:6"
													},
													"referencedDeclaration": 1564,
													"src": "486:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$1564_storage_ptr",
														"typeString": "struct EntropyStructs.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"indexed": false,
												"mutability": "mutable",
												"name": "userRevelation",
												"nameLocation": "534:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "526:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1487,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"indexed": false,
												"mutability": "mutable",
												"name": "providerRevelation",
												"nameLocation": "566:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "558:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockHash",
												"nameLocation": "602:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "594:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1491,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"indexed": false,
												"mutability": "mutable",
												"name": "randomNumber",
												"nameLocation": "629:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "621:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:171:6"
									},
									"src": "462:186:6"
								},
								{
									"anonymous": false,
									"eventSelector": "40be225f151772416d8785647e5641a0b53507623d0ee3fb88802b7d6bdbf728",
									"id": 1507,
									"name": "RevealedWithCallback",
									"nameLocation": "659:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"indexed": false,
												"mutability": "mutable",
												"name": "request",
												"nameLocation": "712:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "689:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$1564_memory_ptr",
													"typeString": "struct EntropyStructs.Request"
												},
												"typeName": {
													"id": 1498,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1497,
														"name": "EntropyStructs.Request",
														"nameLocations": [
															"689:14:6",
															"704:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1564,
														"src": "689:22:6"
													},
													"referencedDeclaration": 1564,
													"src": "689:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$1564_storage_ptr",
														"typeString": "struct EntropyStructs.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"indexed": false,
												"mutability": "mutable",
												"name": "userRandomNumber",
												"nameLocation": "737:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "729:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1500,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"indexed": false,
												"mutability": "mutable",
												"name": "providerRevelation",
												"nameLocation": "771:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "763:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"indexed": false,
												"mutability": "mutable",
												"name": "randomNumber",
												"nameLocation": "807:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "799:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1504,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "679:146:6"
									},
									"src": "653:173:6"
								},
								{
									"anonymous": false,
									"eventSelector": "40873158a9e1446599b5dee14bfd652e53a6f48605dab5aaac3b8a12a56c7fce",
									"id": 1515,
									"name": "ProviderFeeUpdated",
									"nameLocation": "838:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "865:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "857:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldFee",
												"nameLocation": "883:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "875:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1510,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "899:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "891:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1512,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:50:6"
									},
									"src": "832:75:6"
								},
								{
									"anonymous": false,
									"eventSelector": "1efad1d69168ff2e29c45661eed77d2de2b8c95f412cd22a65b15a38e24f7088",
									"id": 1523,
									"name": "ProviderUriUpdated",
									"nameLocation": "919:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "946:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "938:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldUri",
												"nameLocation": "962:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "956:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1518,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "956:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"indexed": false,
												"mutability": "mutable",
												"name": "newUri",
												"nameLocation": "976:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "970:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "970:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:46:6"
									},
									"src": "913:71:6"
								}
							],
							"scope": 1525,
							"src": "96:890:6",
							"usedErrors": [],
							"usedEvents": [
								1465,
								1470,
								1483,
								1496,
								1507,
								1515,
								1523
							]
						}
					],
					"src": "39:948:6"
				},
				"id": 6
			},
			"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol": {
				"ast": {
					"absolutePath": "@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol",
					"exportedSymbols": {
						"EntropyStructs": [
							1565
						]
					},
					"id": 1566,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1526,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EntropyStructs",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1565,
							"linearizedBaseContracts": [
								1565
							],
							"name": "EntropyStructs",
							"nameLocation": "72:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EntropyStructs.ProviderInfo",
									"id": 1547,
									"members": [
										{
											"constant": false,
											"id": 1528,
											"mutability": "mutable",
											"name": "feeInWei",
											"nameLocation": "131:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "123:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1527,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "123:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1530,
											"mutability": "mutable",
											"name": "accruedFeesInWei",
											"nameLocation": "157:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "149:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1529,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "149:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1532,
											"mutability": "mutable",
											"name": "originalCommitment",
											"nameLocation": "472:18:7",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "464:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1531,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "464:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1534,
											"mutability": "mutable",
											"name": "originalCommitmentSequenceNumber",
											"nameLocation": "507:32:7",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "500:39:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1533,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "500:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1536,
											"mutability": "mutable",
											"name": "commitmentMetadata",
											"nameLocation": "747:18:7",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "741:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1535,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "741:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1538,
											"mutability": "mutable",
											"name": "uri",
											"nameLocation": "1050:3:7",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "1044:9:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1537,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1044:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1540,
											"mutability": "mutable",
											"name": "endSequenceNumber",
											"nameLocation": "1404:17:7",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "1397:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1539,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1397:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1542,
											"mutability": "mutable",
											"name": "sequenceNumber",
											"nameLocation": "1525:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "1518:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1541,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1518:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1544,
											"mutability": "mutable",
											"name": "currentCommitment",
											"nameLocation": "1938:17:7",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "1930:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1543,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1930:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1546,
											"mutability": "mutable",
											"name": "currentCommitmentSequenceNumber",
											"nameLocation": "1972:31:7",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "1965:38:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1545,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1965:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ProviderInfo",
									"nameLocation": "100:12:7",
									"nodeType": "StructDefinition",
									"scope": 1565,
									"src": "93:1917:7",
									"visibility": "public"
								},
								{
									"canonicalName": "EntropyStructs.Request",
									"id": 1564,
									"members": [
										{
											"constant": false,
											"id": 1549,
											"mutability": "mutable",
											"name": "provider",
											"nameLocation": "2078:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1564,
											"src": "2070:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1548,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2070:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1551,
											"mutability": "mutable",
											"name": "sequenceNumber",
											"nameLocation": "2103:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1564,
											"src": "2096:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1550,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2096:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1553,
											"mutability": "mutable",
											"name": "numHashes",
											"nameLocation": "2210:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1564,
											"src": "2203:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1552,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2203:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1555,
											"mutability": "mutable",
											"name": "commitment",
											"nameLocation": "2424:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1564,
											"src": "2416:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1554,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2416:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1557,
											"mutability": "mutable",
											"name": "blockNumber",
											"nameLocation": "2812:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 1564,
											"src": "2805:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1556,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2805:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1559,
											"mutability": "mutable",
											"name": "requester",
											"nameLocation": "2899:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1564,
											"src": "2891:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1558,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2891:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1561,
											"mutability": "mutable",
											"name": "useBlockhash",
											"nameLocation": "3017:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1564,
											"src": "3012:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1560,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3012:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1563,
											"mutability": "mutable",
											"name": "isRequestWithCallback",
											"nameLocation": "3131:21:7",
											"nodeType": "VariableDeclaration",
											"scope": 1564,
											"src": "3126:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1562,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3126:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Request",
									"nameLocation": "2023:7:7",
									"nodeType": "StructDefinition",
									"scope": 1565,
									"src": "2016:1210:7",
									"visibility": "public"
								}
							],
							"scope": 1566,
							"src": "63:3165:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "38:3191:7"
				},
				"id": 7
			},
			"@pythnetwork/entropy-sdk-solidity/IEntropy.sol": {
				"ast": {
					"absolutePath": "@pythnetwork/entropy-sdk-solidity/IEntropy.sol",
					"exportedSymbols": {
						"EntropyEvents": [
							1524
						],
						"EntropyStructs": [
							1565
						],
						"IEntropy": [
							1696
						]
					},
					"id": 1697,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1567,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:8"
						},
						{
							"absolutePath": "@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol",
							"file": "./EntropyEvents.sol",
							"id": 1568,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1697,
							"sourceUnit": 1525,
							"src": "62:29:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1569,
										"name": "EntropyEvents",
										"nameLocations": [
											"115:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1524,
										"src": "115:13:8"
									},
									"id": 1570,
									"nodeType": "InheritanceSpecifier",
									"src": "115:13:8"
								}
							],
							"canonicalName": "IEntropy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1696,
							"linearizedBaseContracts": [
								1696,
								1524
							],
							"name": "IEntropy",
							"nameLocation": "103:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "38b049c6",
									"id": 1583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nameLocation": "511:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "feeInWei",
												"nameLocation": "537:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "529:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1571,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "commitment",
												"nameLocation": "563:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "555:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "commitmentMetadata",
												"nameLocation": "598:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "583:33:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1575,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "583:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "chainLength",
												"nameLocation": "633:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "626:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1577,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "626:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "669:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "654:18:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "654:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "519:159:8"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "687:0:8"
									},
									"scope": 1696,
									"src": "502:186:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02387a7b",
									"id": 1588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "939:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "956:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "948:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1584,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:16:8"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "972:0:8"
									},
									"scope": 1696,
									"src": "930:43:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "93cbf217",
									"id": 1599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "request",
									"nameLocation": "1803:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "1828:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "1820:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "userCommitment",
												"nameLocation": "1854:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "1846:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1591,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "useBlockHash",
												"nameLocation": "1883:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "1878:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1593,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1878:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1810:91:8"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "assignedSequenceNumber",
												"nameLocation": "1935:22:8",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "1928:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1596,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1928:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:31:8"
									},
									"scope": 1696,
									"src": "1794:165:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "19cb825f",
									"id": 1608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestWithCallback",
									"nameLocation": "2547:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "2584:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2576:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "userRandomNumber",
												"nameLocation": "2610:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2602:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1602,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2602:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2566:66:8"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "assignedSequenceNumber",
												"nameLocation": "2666:22:8",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2659:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1605,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2659:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2658:31:8"
									},
									"scope": 1696,
									"src": "2538:152:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9371df51",
									"id": 1621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reveal",
									"nameLocation": "3332:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "3356:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "3348:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "sequenceNumber",
												"nameLocation": "3381:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "3374:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1611,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3374:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "userRevelation",
												"nameLocation": "3413:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "3405:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1613,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3405:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "providerRevelation",
												"nameLocation": "3445:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "3437:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1615,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3437:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3338:131:8"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "randomNumber",
												"nameLocation": "3496:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "3488:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1618,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:22:8"
									},
									"scope": 1696,
									"src": "3323:187:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3d30bc0e",
									"id": 1632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revealWithCallback",
									"nameLocation": "4471:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "4507:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "4499:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4499:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "sequenceNumber",
												"nameLocation": "4532:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "4525:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1624,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4525:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "userRandomNumber",
												"nameLocation": "4564:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "4556:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1626,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4556:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "providerRevelation",
												"nameLocation": "4598:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "4590:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4590:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:133:8"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4631:0:8"
									},
									"scope": 1696,
									"src": "4462:170:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7583902f",
									"id": 1640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProviderInfo",
									"nameLocation": "4647:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "4680:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4672:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4672:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4662:32:8"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "4753:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4718:39:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ProviderInfo_$1547_memory_ptr",
													"typeString": "struct EntropyStructs.ProviderInfo"
												},
												"typeName": {
													"id": 1637,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1636,
														"name": "EntropyStructs.ProviderInfo",
														"nameLocations": [
															"4718:14:8",
															"4733:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1547,
														"src": "4718:27:8"
													},
													"referencedDeclaration": 1547,
													"src": "4718:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProviderInfo_$1547_storage_ptr",
														"typeString": "struct EntropyStructs.ProviderInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:41:8"
									},
									"scope": 1696,
									"src": "4638:121:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "82ee990c",
									"id": 1645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDefaultProvider",
									"nameLocation": "4774:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4792:2:8"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "4826:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "4818:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4818:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4817:18:8"
									},
									"scope": 1696,
									"src": "4765:71:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6151ab1f",
									"id": 1655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequest",
									"nameLocation": "4851:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "4879:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "4871:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4871:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "sequenceNumber",
												"nameLocation": "4904:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "4897:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1648,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4897:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4861:63:8"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "req",
												"nameLocation": "4978:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "4948:33:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$1564_memory_ptr",
													"typeString": "struct EntropyStructs.Request"
												},
												"typeName": {
													"id": 1652,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1651,
														"name": "EntropyStructs.Request",
														"nameLocations": [
															"4948:14:8",
															"4963:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1564,
														"src": "4948:22:8"
													},
													"referencedDeclaration": 1564,
													"src": "4948:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$1564_storage_ptr",
														"typeString": "struct EntropyStructs.Request"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4947:35:8"
									},
									"scope": 1696,
									"src": "4842:141:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b88c9148",
									"id": 1662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFee",
									"nameLocation": "4998:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "5013:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "5005:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5005:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5004:18:8"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "feeAmount",
												"nameLocation": "5054:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "5046:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1659,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5046:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5045:19:8"
									},
									"scope": 1696,
									"src": "4989:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c970835c",
									"id": 1667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAccruedPythFees",
									"nameLocation": "5080:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5098:2:8"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "accruedPythFeesInWei",
												"nameLocation": "5156:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "5148:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1664,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5148:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5147:30:8"
									},
									"scope": 1696,
									"src": "5071:107:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ace63a7e",
									"id": 1672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setProviderFee",
									"nameLocation": "5193:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "newFeeInWei",
												"nameLocation": "5216:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "5208:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1668,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:21:8"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5237:0:8"
									},
									"scope": 1696,
									"src": "5184:54:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b469f1c9",
									"id": 1677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setProviderUri",
									"nameLocation": "5253:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "newUri",
												"nameLocation": "5283:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "5268:21:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5268:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5267:23:8"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5299:0:8"
									},
									"scope": 1696,
									"src": "5244:56:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c715aa2e",
									"id": 1684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "constructUserCommitment",
									"nameLocation": "5315:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "userRandomness",
												"nameLocation": "5356:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "5348:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1678,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5348:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5338:38:8"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "userCommitment",
												"nameLocation": "5408:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "5400:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5400:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5399:24:8"
									},
									"scope": 1696,
									"src": "5306:118:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "14e82e8c",
									"id": 1695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "combineRandomValues",
									"nameLocation": "5439:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "userRandomness",
												"nameLocation": "5476:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "5468:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1685,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5468:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "providerRandomness",
												"nameLocation": "5508:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "5500:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5500:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "blockHash",
												"nameLocation": "5544:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "5536:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5536:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5458:101:8"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "combinedRandomness",
												"nameLocation": "5591:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "5583:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1692,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5582:28:8"
									},
									"scope": 1696,
									"src": "5430:181:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1697,
							"src": "93:5520:8",
							"usedErrors": [],
							"usedEvents": [
								1465,
								1470,
								1483,
								1496,
								1507,
								1515,
								1523
							]
						}
					],
					"src": "37:5577:8"
				},
				"id": 8
			},
			"contracts/IBlast.sol": {
				"ast": {
					"absolutePath": "contracts/IBlast.sol",
					"exportedSymbols": {
						"IBlast": [
							1711
						]
					},
					"id": 1712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1698,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBlast",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1711,
							"linearizedBaseContracts": [
								1711
							],
							"name": "IBlast",
							"nameLocation": "66:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4e606c47",
									"id": 1701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureClaimableGas",
									"nameLocation": "146:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:9"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:0:9"
									},
									"scope": 1711,
									"src": "137:42:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "954fa5ee",
									"id": 1710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimAllGas",
									"nameLocation": "191:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "211:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "203:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "236:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "228:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:44:9"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "265:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:9:9"
									},
									"scope": 1711,
									"src": "182:92:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1712,
							"src": "56:220:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:244:9"
				},
				"id": 9
			},
			"contracts/IBlastPoints.sol": {
				"ast": {
					"absolutePath": "contracts/IBlastPoints.sol",
					"exportedSymbols": {
						"IBlastPoints": [
							1719
						]
					},
					"id": 1720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBlastPoints",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1719,
							"linearizedBaseContracts": [
								1719
							],
							"name": "IBlastPoints",
							"nameLocation": "66:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "36b91f2b",
									"id": 1718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configurePointsOperator",
									"nameLocation": "91:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "123:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "115:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:18:10"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "141:0:10"
									},
									"scope": 1719,
									"src": "82:60:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1720,
							"src": "56:88:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:112:10"
				},
				"id": 10
			},
			"contracts/IERC20Rebasing.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20Rebasing.sol",
					"exportedSymbols": {
						"IERC20Rebasing": [
							1750
						],
						"YieldMode": [
							1725
						]
					},
					"id": 1751,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1721,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"canonicalName": "YieldMode",
							"id": 1725,
							"members": [
								{
									"id": 1722,
									"name": "AUTOMATIC",
									"nameLocation": "75:9:11",
									"nodeType": "EnumValue",
									"src": "75:9:11"
								},
								{
									"id": 1723,
									"name": "VOID",
									"nameLocation": "88:4:11",
									"nodeType": "EnumValue",
									"src": "88:4:11"
								},
								{
									"id": 1724,
									"name": "CLAIMABLE",
									"nameLocation": "96:9:11",
									"nodeType": "EnumValue",
									"src": "96:9:11"
								}
							],
							"name": "YieldMode",
							"nameLocation": "61:9:11",
							"nodeType": "EnumDefinition",
							"src": "56:51:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Rebasing",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1750,
							"linearizedBaseContracts": [
								1750
							],
							"name": "IERC20Rebasing",
							"nameLocation": "119:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1a33757d",
									"id": 1733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configure",
									"nameLocation": "246:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "256:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_YieldMode_$1725",
													"typeString": "enum YieldMode"
												},
												"typeName": {
													"id": 1727,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1726,
														"name": "YieldMode",
														"nameLocations": [
															"256:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1725,
														"src": "256:9:11"
													},
													"referencedDeclaration": 1725,
													"src": "256:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_YieldMode_$1725",
														"typeString": "enum YieldMode"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:11:11"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "285:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "284:9:11"
									},
									"scope": 1750,
									"src": "237:57:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aad3ec96",
									"id": 1742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "404:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "418:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "410:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "437:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "429:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:35:11"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "463:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:9:11"
									},
									"scope": 1750,
									"src": "395:77:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e12f3a61",
									"id": 1749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimableAmount",
									"nameLocation": "530:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "557:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "549:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:17:11"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "589:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:9:11"
									},
									"scope": 1750,
									"src": "521:77:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1751,
							"src": "109:491:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:569:11"
				},
				"id": 11
			},
			"contracts/QuailFinance.sol": {
				"ast": {
					"absolutePath": "contracts/QuailFinance.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"ECDSA": [
							920
						],
						"EntropyEvents": [
							1524
						],
						"EntropyStructs": [
							1565
						],
						"IBlast": [
							1711
						],
						"IBlastPoints": [
							1719
						],
						"IERC20": [
							572
						],
						"IERC20Rebasing": [
							1750
						],
						"IEntropy": [
							1696
						],
						"Initializable": [
							448
						],
						"MerkleProof": [
							1457
						],
						"OwnableUpgradeable": [
							194
						],
						"QuailFinance": [
							3064
						],
						"YieldMode": [
							1725
						]
					},
					"id": 3065,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1752,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 573,
							"src": "193:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC20Rebasing.sol",
							"file": "./IERC20Rebasing.sol",
							"id": 1754,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 1751,
							"src": "250:30:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBlast.sol",
							"file": "./IBlast.sol",
							"id": 1755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 1712,
							"src": "281:22:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBlastPoints.sol",
							"file": "./IBlastPoints.sol",
							"id": 1756,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 1720,
							"src": "304:28:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
							"id": 1757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 1458,
							"src": "333:68:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@pythnetwork/entropy-sdk-solidity/IEntropy.sol",
							"file": "@pythnetwork/entropy-sdk-solidity/IEntropy.sol",
							"id": 1758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 1697,
							"src": "402:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 1759,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 921,
							"src": "459:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1760,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 195,
							"src": "522:75:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1761,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 449,
							"src": "598:75:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1762,
										"name": "Initializable",
										"nameLocations": [
											"699:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "699:13:12"
									},
									"id": 1763,
									"nodeType": "InheritanceSpecifier",
									"src": "699:13:12"
								},
								{
									"baseName": {
										"id": 1764,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"714:18:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "714:18:12"
									},
									"id": 1765,
									"nodeType": "InheritanceSpecifier",
									"src": "714:18:12"
								}
							],
							"canonicalName": "QuailFinance",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3064,
							"linearizedBaseContracts": [
								3064,
								194,
								494,
								448
							],
							"name": "QuailFinance",
							"nameLocation": "683:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1768,
									"mutability": "mutable",
									"name": "entropy",
									"nameLocation": "756:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "739:24:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IEntropy_$1696",
										"typeString": "contract IEntropy"
									},
									"typeName": {
										"id": 1767,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1766,
											"name": "IEntropy",
											"nameLocations": [
												"739:8:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1696,
											"src": "739:8:12"
										},
										"referencedDeclaration": 1696,
										"src": "739:8:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IEntropy_$1696",
											"typeString": "contract IEntropy"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1770,
									"mutability": "mutable",
									"name": "entropyProvider",
									"nameLocation": "785:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "769:31:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1769,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "769:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 1772,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "821:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "806:20:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1771,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"global": false,
									"id": 1775,
									"libraryName": {
										"id": 1773,
										"name": "ECDSA",
										"nameLocations": [
											"838:5:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 920,
										"src": "838:5:12"
									},
									"nodeType": "UsingForDirective",
									"src": "832:24:12",
									"typeName": {
										"id": 1774,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "848:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2eb4a7ab",
									"id": 1777,
									"mutability": "mutable",
									"name": "merkleRoot",
									"nameLocation": "876:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "861:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1776,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "861:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1780,
									"mutability": "mutable",
									"name": "nextPotId",
									"nameLocation": "957:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "941:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1778,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "941:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1779,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "969:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "97d75776",
									"id": 1786,
									"mutability": "constant",
									"name": "BLAST",
									"nameLocation": "1021:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "998:81:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBlast_$1711",
										"typeString": "contract IBlast"
									},
									"typeName": {
										"id": 1782,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1781,
											"name": "IBlast",
											"nameLocations": [
												"998:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1711,
											"src": "998:6:12"
										},
										"referencedDeclaration": 1711,
										"src": "998:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBlast_$1711",
											"typeString": "contract IBlast"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303232",
												"id": 1784,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1036:42:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x4200000000000000000000000000000000000022"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1783,
											"name": "IBlast",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1711,
											"src": "1029:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IBlast_$1711_$",
												"typeString": "type(contract IBlast)"
											}
										},
										"id": 1785,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1029:50:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBlast_$1711",
											"typeString": "contract IBlast"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bf2d9e0b",
									"id": 1788,
									"mutability": "mutable",
									"name": "totalRevenue",
									"nameLocation": "1100:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1085:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1787,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1085:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec71687b",
									"id": 1790,
									"mutability": "mutable",
									"name": "potCreationFee",
									"nameLocation": "1133:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1118:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1789,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1118:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "07dd3f44",
									"id": 1792,
									"mutability": "mutable",
									"name": "totalYielDeposited",
									"nameLocation": "1168:18:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1153:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1791,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1153:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4a80409e",
									"id": 1795,
									"mutability": "mutable",
									"name": "usdbToken",
									"nameLocation": "1206:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1192:23:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$572",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1794,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1793,
											"name": "IERC20",
											"nameLocations": [
												"1192:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 572,
											"src": "1192:6:12"
										},
										"referencedDeclaration": 572,
										"src": "1192:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$572",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73b2e80e",
									"id": 1799,
									"mutability": "mutable",
									"name": "hasClaimed",
									"nameLocation": "1280:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1245:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1798,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1796,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1797,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1264:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c3c3df4f",
									"id": 1804,
									"mutability": "mutable",
									"name": "pots",
									"nameLocation": "1327:4:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1296:35:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pot_$1855_storage_$",
										"typeString": "mapping(uint256 => struct QuailFinance.Pot)"
									},
									"typeName": {
										"id": 1803,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1800,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1304:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1296:23:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pot_$1855_storage_$",
											"typeString": "mapping(uint256 => struct QuailFinance.Pot)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1802,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1801,
												"name": "Pot",
												"nameLocations": [
													"1315:3:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1855,
												"src": "1315:3:12"
											},
											"referencedDeclaration": 1855,
											"src": "1315:3:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
												"typeString": "struct QuailFinance.Pot"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1808,
									"mutability": "mutable",
									"name": "userYield",
									"nameLocation": "1430:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1394:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1807,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1805,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1402:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1394:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1806,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1413:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "4da1ec40",
									"id": 1816,
									"mutability": "mutable",
									"name": "hasJoinedPot",
									"nameLocation": "1517:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1445:84:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))"
									},
									"typeName": {
										"id": 1815,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1809,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1453:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1445:64:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1814,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1810,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1472:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1464:44:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
												"typeString": "mapping(uint256 => mapping(address => bool))"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1813,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1483:24:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1502:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "QuailFinance.Pot",
									"id": 1855,
									"members": [
										{
											"constant": false,
											"id": 1818,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "3231:4:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3224:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1817,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3224:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1820,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3253:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3245:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1819,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3245:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1822,
											"mutability": "mutable",
											"name": "riskPoolBalance",
											"nameLocation": "3277:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3269:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1821,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3269:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1824,
											"mutability": "mutable",
											"name": "useRiskPoolBalance",
											"nameLocation": "3310:18:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3302:26:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1823,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3302:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1826,
											"mutability": "mutable",
											"name": "rotationCycleInSeconds",
											"nameLocation": "3346:22:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3338:30:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1825,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3338:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1828,
											"mutability": "mutable",
											"name": "lastRotationTime",
											"nameLocation": "3386:16:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3378:24:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1827,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3378:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1830,
											"mutability": "mutable",
											"name": "interestNumerator",
											"nameLocation": "3420:17:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3412:25:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1829,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3412:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1832,
											"mutability": "mutable",
											"name": "interestDenominator",
											"nameLocation": "3455:19:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3447:27:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1831,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3447:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1834,
											"mutability": "mutable",
											"name": "numParticipants",
											"nameLocation": "3492:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3484:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1833,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3484:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1836,
											"mutability": "mutable",
											"name": "currentRound",
											"nameLocation": "3525:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3517:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1835,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3517:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1838,
											"mutability": "mutable",
											"name": "sequenceNumber",
											"nameLocation": "3554:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3547:21:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1837,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "3547:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1840,
											"mutability": "mutable",
											"name": "potCreator",
											"nameLocation": "3586:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3578:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1839,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3578:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1843,
											"mutability": "mutable",
											"name": "participants",
											"nameLocation": "3616:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3606:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3606:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1842,
												"nodeType": "ArrayTypeName",
												"src": "3606:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1846,
											"mutability": "mutable",
											"name": "winners",
											"nameLocation": "3648:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3638:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3638:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1845,
												"nodeType": "ArrayTypeName",
												"src": "3638:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1850,
											"mutability": "mutable",
											"name": "amountWon",
											"nameLocation": "3693:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3665:37:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1849,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3673:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "3665:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1854,
											"mutability": "mutable",
											"name": "hasWon",
											"nameLocation": "3783:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1855,
											"src": "3758:31:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 1853,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3766:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "3758:24:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3777:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Pot",
									"nameLocation": "3210:3:12",
									"nodeType": "StructDefinition",
									"scope": 3064,
									"src": "3203:593:12",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "37bb26f2981ad94b38afe928452cad1bca628b82f1781d95ec69d53acf5d0d9b",
									"id": 1877,
									"name": "PotCreated",
									"nameLocation": "3822:10:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"indexed": false,
												"mutability": "mutable",
												"name": "potId",
												"nameLocation": "3841:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "3833:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3855:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "3848:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1858,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3848:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"indexed": false,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3869:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "3861:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3861:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3886:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "3878:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"indexed": false,
												"mutability": "mutable",
												"name": "rotationCycleInSeconds",
												"nameLocation": "3902:22:12",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "3894:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"indexed": false,
												"mutability": "mutable",
												"name": "_interestDenominator",
												"nameLocation": "3934:20:12",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "3926:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"indexed": false,
												"mutability": "mutable",
												"name": "_interestNumerator",
												"nameLocation": "3964:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "3956:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"indexed": false,
												"mutability": "mutable",
												"name": "_numParticipants",
												"nameLocation": "3992:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "3984:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3984:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"indexed": false,
												"mutability": "mutable",
												"name": "sequenceNumber",
												"nameLocation": "4017:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "4010:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1872,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4010:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"indexed": false,
												"mutability": "mutable",
												"name": "userCommitment",
												"nameLocation": "4041:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "4033:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1874,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4033:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:224:12"
									},
									"src": "3816:241:12"
								},
								{
									"anonymous": false,
									"eventSelector": "43d2f309913f6afc5d717f60864d2d192b69963d25204b6a12765e2795bf027f",
									"id": 1895,
									"name": "ParticipantJoined",
									"nameLocation": "4068:17:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"indexed": false,
												"mutability": "mutable",
												"name": "potId",
												"nameLocation": "4094:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "4086:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "4108:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "4101:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1880,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4101:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"indexed": false,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "4122:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "4114:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4114:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4143:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "4135:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4135:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"indexed": false,
												"mutability": "mutable",
												"name": "rotationCycleInSeconds",
												"nameLocation": "4159:22:12",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "4151:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4151:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"indexed": false,
												"mutability": "mutable",
												"name": "_interestDenominator",
												"nameLocation": "4191:20:12",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "4183:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4183:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"indexed": false,
												"mutability": "mutable",
												"name": "_interestNumerator",
												"nameLocation": "4221:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "4213:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"indexed": false,
												"mutability": "mutable",
												"name": "_numParticipants",
												"nameLocation": "4249:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "4241:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4085:181:12"
									},
									"src": "4062:205:12"
								},
								{
									"anonymous": false,
									"eventSelector": "cef8fac05afb87995942422eac900de6af11a555d80d075340af81db492119fe",
									"id": 1901,
									"name": "ParticipantRemoved",
									"nameLocation": "4278:18:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"indexed": false,
												"mutability": "mutable",
												"name": "potId",
												"nameLocation": "4305:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "4297:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4297:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"indexed": false,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "4320:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "4312:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4312:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4296:36:12"
									},
									"src": "4272:61:12"
								},
								{
									"anonymous": false,
									"eventSelector": "9ef3fbd1495a53d36401c5153be21a35a6214297031b5e106b12307835851d2f",
									"id": 1917,
									"name": "RotationCompleted",
									"nameLocation": "4344:17:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"indexed": false,
												"mutability": "mutable",
												"name": "potId",
												"nameLocation": "4370:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4362:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"indexed": false,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "4385:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4377:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4377:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"indexed": false,
												"mutability": "mutable",
												"name": "round",
												"nameLocation": "4401:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4393:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4393:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"indexed": false,
												"mutability": "mutable",
												"name": "sequenceNumber",
												"nameLocation": "4415:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4408:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1908,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4408:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"indexed": false,
												"mutability": "mutable",
												"name": "userCommitment",
												"nameLocation": "4438:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4430:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1910,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4430:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"indexed": false,
												"mutability": "mutable",
												"name": "usedRiskPoolBalance",
												"nameLocation": "4462:19:12",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4454:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4454:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4491:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4483:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4361:137:12"
									},
									"src": "4338:161:12"
								},
								{
									"anonymous": false,
									"eventSelector": "24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb7",
									"id": 1925,
									"name": "RewardClaimed",
									"nameLocation": "4510:13:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"indexed": false,
												"mutability": "mutable",
												"name": "potId",
												"nameLocation": "4532:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "4524:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4524:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"indexed": false,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "4547:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "4539:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4539:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4563:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "4555:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4555:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4523:47:12"
									},
									"src": "4504:67:12"
								},
								{
									"constant": true,
									"functionSelector": "31a0edec",
									"id": 1931,
									"mutability": "constant",
									"name": "USDB",
									"nameLocation": "4608:4:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "4577:96:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Rebasing_$1750",
										"typeString": "contract IERC20Rebasing"
									},
									"typeName": {
										"id": 1927,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1926,
											"name": "IERC20Rebasing",
											"nameLocations": [
												"4577:14:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1750,
											"src": "4577:14:12"
										},
										"referencedDeclaration": 1750,
										"src": "4577:14:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Rebasing_$1750",
											"typeString": "contract IERC20Rebasing"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303232",
												"id": 1929,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4630:42:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x4200000000000000000000000000000000000022"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1928,
											"name": "IERC20Rebasing",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1750,
											"src": "4615:14:12",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20Rebasing_$1750_$",
												"typeString": "type(contract IERC20Rebasing)"
											}
										},
										"id": 1930,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "4615:58:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Rebasing_$1750",
											"typeString": "contract IERC20Rebasing"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "4736:906:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1939,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4866:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4870:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4866:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1938,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "4851:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4851:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "4851:26:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1946,
																"name": "YieldMode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "4902:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_YieldMode_$1725_$",
																	"typeString": "type(enum YieldMode)"
																}
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4912:9:12",
															"memberName": "CLAIMABLE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1724,
															"src": "4902:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_YieldMode_$1725",
																"typeString": "enum YieldMode"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_YieldMode_$1725",
																"typeString": "enum YieldMode"
															}
														],
														"expression": {
															"id": 1943,
															"name": "USDB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "4887:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Rebasing_$1750",
																"typeString": "contract IERC20Rebasing"
															}
														},
														"id": 1945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4892:9:12",
														"memberName": "configure",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1733,
														"src": "4887:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_enum$_YieldMode_$1725_$returns$_t_uint256_$",
															"typeString": "function (enum YieldMode) external returns (uint256)"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4887:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "4887:35:12"
											},
											{
												"expression": {
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1950,
														"name": "usdbToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "4969:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$572",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303232",
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4988:42:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x4200000000000000000000000000000000000022"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1951,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "4981:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$572_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4981:50:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$572",
															"typeString": "contract IERC20"
														}
													},
													"src": "4969:62:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$572",
														"typeString": "contract IERC20"
													}
												},
												"id": 1955,
												"nodeType": "ExpressionStatement",
												"src": "4969:62:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1956,
															"name": "BLAST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "5041:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBlast_$1711",
																"typeString": "contract IBlast"
															}
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5047:21:12",
														"memberName": "configureClaimableGas",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1701,
														"src": "5041:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5041:29:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1960,
												"nodeType": "ExpressionStatement",
												"src": "5041:29:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307845343836304433393733383032433743343234353044376239373431393231433737313144303339",
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5225:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xE4860D3973802C7C42450D7b9741921C7711D039"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307832666339353833386337316537366563363966663831373938334246663137633731304633344530",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5157:42:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x2fc95838c71e76ec69ff817983BFf17c710F34E0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1961,
																"name": "IBlastPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "5144:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBlastPoints_$1719_$",
																	"typeString": "type(contract IBlastPoints)"
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5144:56:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBlastPoints_$1719",
																"typeString": "contract IBlastPoints"
															}
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5201:23:12",
														"memberName": "configurePointsOperator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1718,
														"src": "5144:80:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5144:124:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "5144:124:12"
											},
											{
												"expression": {
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1968,
														"name": "entropy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "5437:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEntropy_$1696",
															"typeString": "contract IEntropy"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1970,
																"name": "_entropy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1933,
																"src": "5456:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1969,
															"name": "IEntropy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "5447:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IEntropy_$1696_$",
																"typeString": "type(contract IEntropy)"
															}
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5447:18:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEntropy_$1696",
															"typeString": "contract IEntropy"
														}
													},
													"src": "5437:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEntropy_$1696",
														"typeString": "contract IEntropy"
													}
												},
												"id": 1973,
												"nodeType": "ExpressionStatement",
												"src": "5437:28:12"
											},
											{
												"expression": {
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1974,
														"name": "entropyProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "5475:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307836434331343832344561323931386635446535433266373541394461393638616434424436333434",
														"id": 1975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5493:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x6CC14824Ea2918f5De5C2f75A9Da968ad4BD6344"
													},
													"src": "5475:60:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1977,
												"nodeType": "ExpressionStatement",
												"src": "5475:60:12"
											},
											{
												"expression": {
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1978,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "5545:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307845343836304433393733383032433743343234353044376239373431393231433737313144303339",
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5553:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xE4860D3973802C7C42450D7b9741921C7711D039"
													},
													"src": "5545:50:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "5545:50:12"
											},
											{
												"expression": {
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1982,
														"name": "potCreationFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "5605:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030303030303030303030303030",
														"id": 1983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5622:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000_by_1",
															"typeString": "int_const 1000000000000000"
														},
														"value": "1000000000000000"
													},
													"src": "5605:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1985,
												"nodeType": "ExpressionStatement",
												"src": "5605:33:12"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1936,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1935,
												"name": "initializer",
												"nameLocations": [
													"4724:11:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "4724:11:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4724:11:12"
										}
									],
									"name": "initialize",
									"nameLocation": "4688:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "_entropy",
												"nameLocation": "4707:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "4699:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4699:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4698:18:12"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4736:0:12"
									},
									"scope": 3064,
									"src": "4679:963:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "6901:1741:12",
										"statements": [
											{
												"assignments": [
													2005
												],
												"declarations": [
													{
														"constant": false,
														"id": 2005,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "6919:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2194,
														"src": "6911:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6911:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2010,
												"initialValue": {
													"arguments": [
														{
															"id": 2008,
															"name": "entropyProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "6940:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2006,
															"name": "entropy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "6925:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEntropy_$1696",
																"typeString": "contract IEntropy"
															}
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6933:6:12",
														"memberName": "getFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1662,
														"src": "6925:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint128_$",
															"typeString": "function (address) view external returns (uint128)"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6925:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6911:45:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2012,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6974:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6978:5:12",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "6974:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2014,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2005,
																	"src": "6987:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2015,
																	"name": "potCreationFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "6991:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6987:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6974:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420666565",
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7007:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af",
																"typeString": "literal_string \"Insufficient fee\""
															},
															"value": "Insufficient fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af",
																"typeString": "literal_string \"Insufficient fee\""
															}
														],
														"id": 2011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6966:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6966:60:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "6966:60:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2022,
																"name": "_rotationCycleInSeconds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "7045:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7071:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7045:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f746174696f6e206379636c65206d75737420626520706f736974697665",
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7074:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_644daccc679a6ca61015d1fce69e5d96e924c184d194d1757cba87c3697f315c",
																"typeString": "literal_string \"Rotation cycle must be positive\""
															},
															"value": "Rotation cycle must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_644daccc679a6ca61015d1fce69e5d96e924c184d194d1757cba87c3697f315c",
																"typeString": "literal_string \"Rotation cycle must be positive\""
															}
														],
														"id": 2021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7037:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7037:71:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2027,
												"nodeType": "ExpressionStatement",
												"src": "7037:71:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2029,
																"name": "_interestDenominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1995,
																"src": "7126:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7149:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7126:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e7465726573742064656e6f6d696e61746f72206d75737420626520706f736974697665",
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7152:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8eeed1a25e2c88696722912f25b363cb940c4a216eba4af8f521b48becc0b736",
																"typeString": "literal_string \"Interest denominator must be positive\""
															},
															"value": "Interest denominator must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8eeed1a25e2c88696722912f25b363cb940c4a216eba4af8f521b48becc0b736",
																"typeString": "literal_string \"Interest denominator must be positive\""
															}
														],
														"id": 2028,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7118:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7118:74:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2034,
												"nodeType": "ExpressionStatement",
												"src": "7118:74:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2036,
																"name": "_interestNumerator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "7210:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2037,
																"name": "_interestDenominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1995,
																"src": "7232:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7210:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d657261746f72206d757374206265206c657373207468616e206f7220657175616c20746f2064656e6f6d696e61746f72",
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7254:53:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c61461cd5d9d889bac51d9c122a79a59ef235e48fea5f03afa428c76ce5a98e4",
																"typeString": "literal_string \"Numerator must be less than or equal to denominator\""
															},
															"value": "Numerator must be less than or equal to denominator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c61461cd5d9d889bac51d9c122a79a59ef235e48fea5f03afa428c76ce5a98e4",
																"typeString": "literal_string \"Numerator must be less than or equal to denominator\""
															}
														],
														"id": 2035,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7202:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7202:106:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2041,
												"nodeType": "ExpressionStatement",
												"src": "7202:106:12"
											},
											{
												"assignments": [
													2043
												],
												"declarations": [
													{
														"constant": false,
														"id": 2043,
														"mutability": "mutable",
														"name": "potId",
														"nameLocation": "7326:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2194,
														"src": "7318:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2042,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7318:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2046,
												"initialValue": {
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7334:11:12",
													"subExpression": {
														"id": 2044,
														"name": "nextPotId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1780,
														"src": "7334:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7318:27:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2050,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7386:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7390:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7386:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2054,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7406:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_QuailFinance_$3064",
																				"typeString": "contract QuailFinance"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_QuailFinance_$3064",
																				"typeString": "contract QuailFinance"
																			}
																		],
																		"id": 2053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7398:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2052,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7398:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7398:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2056,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2001,
																	"src": "7413:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2048,
																	"name": "usdbToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "7363:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7373:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 571,
																"src": "7363:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7363:58:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726561746f722073686f756c64206465706f7369742074686520696e697469616c20616d6f756e74",
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7423:43:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_503f75b40e3b1512228ea5db731d4b1751954000ab64681d4987c96c3f2d0c89",
																"typeString": "literal_string \"Creator should deposit the initial amount\""
															},
															"value": "Creator should deposit the initial amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_503f75b40e3b1512228ea5db731d4b1751954000ab64681d4987c96c3f2d0c89",
																"typeString": "literal_string \"Creator should deposit the initial amount\""
															}
														],
														"id": 2047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7355:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7355:112:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2060,
												"nodeType": "ExpressionStatement",
												"src": "7355:112:12"
											},
											{
												"assignments": [
													2062
												],
												"declarations": [
													{
														"constant": false,
														"id": 2062,
														"mutability": "mutable",
														"name": "sequenceNumber",
														"nameLocation": "7484:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2194,
														"src": "7477:21:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 2061,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7477:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2071,
												"initialValue": {
													"arguments": [
														{
															"id": 2067,
															"name": "entropyProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "7542:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2068,
															"name": "userCommitment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "7571:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7599:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 2063,
																"name": "entropy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "7501:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IEntropy_$1696",
																	"typeString": "contract IEntropy"
																}
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7509:7:12",
															"memberName": "request",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1599,
															"src": "7501:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bool_$returns$_t_uint64_$",
																"typeString": "function (address,bytes32,bool) payable external returns (uint64)"
															}
														},
														"id": 2066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2065,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2005,
																"src": "7524:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "7501:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bool_$returns$_t_uint64_$value",
															"typeString": "function (address,bytes32,bool) payable external returns (uint64)"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7501:113:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7477:137:12"
											},
											{
												"assignments": [
													2074
												],
												"declarations": [
													{
														"constant": false,
														"id": 2074,
														"mutability": "mutable",
														"name": "newPot",
														"nameLocation": "7674:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2194,
														"src": "7662:18:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
															"typeString": "struct QuailFinance.Pot"
														},
														"typeName": {
															"id": 2073,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2072,
																"name": "Pot",
																"nameLocations": [
																	"7662:3:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1855,
																"src": "7662:3:12"
															},
															"referencedDeclaration": 1855,
															"src": "7662:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2078,
												"initialValue": {
													"baseExpression": {
														"id": 2075,
														"name": "pots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "7683:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pot_$1855_storage_$",
															"typeString": "mapping(uint256 => struct QuailFinance.Pot storage ref)"
														}
													},
													"id": 2077,
													"indexExpression": {
														"id": 2076,
														"name": "potId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "7688:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7683:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pot_$1855_storage",
														"typeString": "struct QuailFinance.Pot storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7662:32:12"
											},
											{
												"expression": {
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2079,
															"name": "newPot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "7704:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7711:4:12",
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1818,
														"src": "7704:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2082,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "7718:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "7704:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2084,
												"nodeType": "ExpressionStatement",
												"src": "7704:19:12"
											},
											{
												"expression": {
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2085,
															"name": "newPot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "7733:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2087,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7740:6:12",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1820,
														"src": "7733:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2088,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2001,
														"src": "7749:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7733:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2090,
												"nodeType": "ExpressionStatement",
												"src": "7733:23:12"
											},
											{
												"expression": {
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2091,
															"name": "newPot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "7766:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7773:15:12",
														"memberName": "riskPoolBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1822,
														"src": "7766:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7791:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7766:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "7766:26:12"
											},
											{
												"expression": {
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2097,
															"name": "newPot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "7802:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7809:14:12",
														"memberName": "sequenceNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1838,
														"src": "7802:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2100,
														"name": "sequenceNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2062,
														"src": "7826:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7802:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 2102,
												"nodeType": "ExpressionStatement",
												"src": "7802:38:12"
											},
											{
												"expression": {
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2103,
															"name": "newPot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "7850:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2105,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7857:10:12",
														"memberName": "potCreator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1840,
														"src": "7850:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2106,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7870:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7874:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7870:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7850:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2109,
												"nodeType": "ExpressionStatement",
												"src": "7850:30:12"
											},
											{
												"expression": {
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2110,
															"name": "newPot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "7890:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2112,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7897:22:12",
														"memberName": "rotationCycleInSeconds",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1826,
														"src": "7890:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2113,
														"name": "_rotationCycleInSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "7922:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7890:55:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2115,
												"nodeType": "ExpressionStatement",
												"src": "7890:55:12"
											},
											{
												"expression": {
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2116,
															"name": "newPot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "7955:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2118,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7962:17:12",
														"memberName": "interestNumerator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1830,
														"src": "7955:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2119,
														"name": "_interestNumerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "7982:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7955:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "7955:45:12"
											},
											{
												"expression": {
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2122,
															"name": "newPot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "8010:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2124,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8017:19:12",
														"memberName": "interestDenominator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1832,
														"src": "8010:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2125,
														"name": "_interestDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1995,
														"src": "8039:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8010:49:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2127,
												"nodeType": "ExpressionStatement",
												"src": "8010:49:12"
											},
											{
												"expression": {
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2128,
															"name": "newPot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "8069:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2130,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8076:16:12",
														"memberName": "lastRotationTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1828,
														"src": "8069:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2131,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8095:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8101:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8095:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8069:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2134,
												"nodeType": "ExpressionStatement",
												"src": "8069:41:12"
											},
											{
												"expression": {
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2135,
															"name": "newPot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "8120:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8127:15:12",
														"memberName": "numParticipants",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1834,
														"src": "8120:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2138,
														"name": "_numParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "8145:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8120:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2140,
												"nodeType": "ExpressionStatement",
												"src": "8120:41:12"
											},
											{
												"expression": {
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2141,
															"name": "newPot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "8171:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2143,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8178:12:12",
														"memberName": "currentRound",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1836,
														"src": "8171:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8193:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8171:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2146,
												"nodeType": "ExpressionStatement",
												"src": "8171:23:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2152,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8229:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8233:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8229:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 2147,
																"name": "newPot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2074,
																"src": "8204:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8211:12:12",
															"memberName": "participants",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1843,
															"src": "8204:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8224:4:12",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "8204:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8204:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2155,
												"nodeType": "ExpressionStatement",
												"src": "8204:36:12"
											},
											{
												"expression": {
													"id": 2166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2156,
																	"name": "hasJoinedPot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "8250:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))"
																	}
																},
																"id": 2162,
																"indexExpression": {
																	"id": 2157,
																	"name": "potId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2043,
																	"src": "8263:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8250:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 2163,
															"indexExpression": {
																"expression": {
																	"id": 2158,
																	"name": "newPot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "8270:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																		"typeString": "struct QuailFinance.Pot storage pointer"
																	}
																},
																"id": 2159,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8277:12:12",
																"memberName": "currentRound",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1836,
																"src": "8270:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8250:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2164,
														"indexExpression": {
															"expression": {
																"id": 2160,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8291:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8295:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8291:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8250:52:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8305:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8250:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2167,
												"nodeType": "ExpressionStatement",
												"src": "8250:59:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2169,
															"name": "potId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "8335:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2170,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "8342:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2171,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8349:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8353:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8349:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2173,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "8361:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2174,
															"name": "_rotationCycleInSeconds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "8370:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2175,
															"name": "_interestNumerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "8395:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2176,
															"name": "_interestDenominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "8415:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2177,
															"name": "_numParticipants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "8436:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2178,
															"name": "sequenceNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "8453:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 2179,
															"name": "userCommitment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "8468:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2168,
														"name": "PotCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "8324:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$_t_bytes32_$returns$__$",
															"typeString": "function (uint256,string memory,address,uint256,uint256,uint256,uint256,uint256,uint64,bytes32)"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8324:159:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2181,
												"nodeType": "EmitStatement",
												"src": "8319:164:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2183,
															"name": "potId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "8516:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2184,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "8523:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2185,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8530:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8534:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8530:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2187,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "8542:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2188,
															"name": "_rotationCycleInSeconds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "8551:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2189,
															"name": "_interestNumerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "8576:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2190,
															"name": "_interestDenominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "8596:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2191,
															"name": "_numParticipants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "8618:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2182,
														"name": "ParticipantJoined",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "8498:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,string memory,address,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8498:137:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2193,
												"nodeType": "EmitStatement",
												"src": "8493:142:12"
											}
										]
									},
									"functionSelector": "0fae6443",
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPot",
									"nameLocation": "6697:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "6721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "6707:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6707:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "userCommitment",
												"nameLocation": "6736:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "6728:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1990,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6728:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "_rotationCycleInSeconds",
												"nameLocation": "6760:23:12",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "6752:31:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6752:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "_interestDenominator",
												"nameLocation": "6793:20:12",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "6785:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6785:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "_interestNumerator",
												"nameLocation": "6823:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "6815:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6815:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "_numParticipants",
												"nameLocation": "6851:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "6843:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6877:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "6869:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6869:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6706:179:12"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6901:0:12"
									},
									"scope": 3064,
									"src": "6688:1954:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2327,
										"nodeType": "Block",
										"src": "9385:1007:12",
										"statements": [
											{
												"assignments": [
													2206
												],
												"declarations": [
													{
														"constant": false,
														"id": 2206,
														"mutability": "mutable",
														"name": "pot",
														"nameLocation": "9407:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2327,
														"src": "9395:15:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
															"typeString": "struct QuailFinance.Pot"
														},
														"typeName": {
															"id": 2205,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2204,
																"name": "Pot",
																"nameLocations": [
																	"9395:3:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1855,
																"src": "9395:3:12"
															},
															"referencedDeclaration": 1855,
															"src": "9395:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2210,
												"initialValue": {
													"baseExpression": {
														"id": 2207,
														"name": "pots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "9413:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pot_$1855_storage_$",
															"typeString": "mapping(uint256 => struct QuailFinance.Pot storage ref)"
														}
													},
													"id": 2209,
													"indexExpression": {
														"id": 2208,
														"name": "_potId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2197,
														"src": "9418:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9413:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pot_$1855_storage",
														"typeString": "struct QuailFinance.Pot storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9395:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 2212,
																		"name": "pot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2206,
																		"src": "9443:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																			"typeString": "struct QuailFinance.Pot storage pointer"
																		}
																	},
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9447:12:12",
																	"memberName": "participants",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1843,
																	"src": "9443:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9460:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9443:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 2215,
																	"name": "pot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "9469:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																		"typeString": "struct QuailFinance.Pot storage pointer"
																	}
																},
																"id": 2216,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9473:15:12",
																"memberName": "numParticipants",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1834,
																"src": "9469:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9443:45:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f742069732066756c6c",
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9490:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94551e96037beb1a5b9d23fab781e5d7b8691d9c26e03416898ad0c190be852",
																"typeString": "literal_string \"Pot is full\""
															},
															"value": "Pot is full"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94551e96037beb1a5b9d23fab781e5d7b8691d9c26e03416898ad0c190be852",
																"typeString": "literal_string \"Pot is full\""
															}
														],
														"id": 2211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9435:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9435:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2220,
												"nodeType": "ExpressionStatement",
												"src": "9435:69:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9522:51:12",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2222,
																			"name": "hasJoinedPot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1816,
																			"src": "9523:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$",
																				"typeString": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))"
																			}
																		},
																		"id": 2224,
																		"indexExpression": {
																			"id": 2223,
																			"name": "_potId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2197,
																			"src": "9536:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9523:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(address => bool))"
																		}
																	},
																	"id": 2227,
																	"indexExpression": {
																		"expression": {
																			"id": 2225,
																			"name": "pot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2206,
																			"src": "9544:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																				"typeString": "struct QuailFinance.Pot storage pointer"
																			}
																		},
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9548:12:12",
																		"memberName": "currentRound",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1836,
																		"src": "9544:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9523:38:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2230,
																"indexExpression": {
																	"expression": {
																		"id": 2228,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9562:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9566:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9562:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9523:50:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206861766520616c7265616479206a6f696e6564207468697320706f7420696e207468652063757272656e7420726f756e64",
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9575:55:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f013563c61815f76d75d57e35021c8b7565eedee896d4e8c5ab62b3d8225958",
																"typeString": "literal_string \"You have already joined this pot in the current round\""
															},
															"value": "You have already joined this pot in the current round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f013563c61815f76d75d57e35021c8b7565eedee896d4e8c5ab62b3d8225958",
																"typeString": "literal_string \"You have already joined this pot in the current round\""
															}
														],
														"id": 2221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9514:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9514:117:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2234,
												"nodeType": "ExpressionStatement",
												"src": "9514:117:12"
											},
											{
												"assignments": [
													2236
												],
												"declarations": [
													{
														"constant": false,
														"id": 2236,
														"mutability": "mutable",
														"name": "messageHash",
														"nameLocation": "9649:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 2327,
														"src": "9641:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2235,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9641:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2248,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2240,
																	"name": "_potId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "9690:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2241,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9698:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9702:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9698:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2243,
																		"name": "pot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2206,
																		"src": "9710:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																			"typeString": "struct QuailFinance.Pot storage pointer"
																		}
																	},
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9714:12:12",
																	"memberName": "currentRound",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1836,
																	"src": "9710:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2245,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "9728:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2238,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9673:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9677:12:12",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9673:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9673:61:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2237,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9663:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9663:72:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9641:94:12"
											},
											{
												"assignments": [
													2250
												],
												"declarations": [
													{
														"constant": false,
														"id": 2250,
														"mutability": "mutable",
														"name": "ethSignedMessageHash",
														"nameLocation": "9753:20:12",
														"nodeType": "VariableDeclaration",
														"scope": 2327,
														"src": "9745:28:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2249,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9745:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2254,
												"initialValue": {
													"arguments": [
														{
															"id": 2252,
															"name": "messageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "9800:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2251,
														"name": "getEthSignedMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3028,
														"src": "9776:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9776:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9745:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2256,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "9830:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2259,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2199,
																		"src": "9868:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2257,
																		"name": "ethSignedMessageHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2250,
																		"src": "9839:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9860:7:12",
																	"memberName": "recover",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 676,
																	"src": "9839:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$",
																		"typeString": "function (bytes32,bytes memory) pure returns (address)"
																	}
																},
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9839:39:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9830:48:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5369676e617475726520766572696669636174696f6e206661696c6564",
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9880:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b77f5b3e2dbe114cd7aa585ae20e38bc4b116f621141d4b4d003fdef37ab19b6",
																"typeString": "literal_string \"Signature verification failed\""
															},
															"value": "Signature verification failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b77f5b3e2dbe114cd7aa585ae20e38bc4b116f621141d4b4d003fdef37ab19b6",
																"typeString": "literal_string \"Signature verification failed\""
															}
														],
														"id": 2255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9822:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9822:90:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2264,
												"nodeType": "ExpressionStatement",
												"src": "9822:90:12"
											},
											{
												"expression": {
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2265,
																	"name": "hasJoinedPot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "9922:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))"
																	}
																},
																"id": 2271,
																"indexExpression": {
																	"id": 2266,
																	"name": "_potId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "9935:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9922:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 2272,
															"indexExpression": {
																"expression": {
																	"id": 2267,
																	"name": "pot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "9943:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																		"typeString": "struct QuailFinance.Pot storage pointer"
																	}
																},
																"id": 2268,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9947:12:12",
																"memberName": "currentRound",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1836,
																"src": "9943:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9922:38:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2273,
														"indexExpression": {
															"expression": {
																"id": 2269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9961:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9965:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9961:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9922:50:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9975:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9922:57:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2276,
												"nodeType": "ExpressionStatement",
												"src": "9922:57:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2280,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10061:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10065:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10061:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2284,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10081:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_QuailFinance_$3064",
																				"typeString": "contract QuailFinance"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_QuailFinance_$3064",
																				"typeString": "contract QuailFinance"
																			}
																		],
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10073:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2282,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10073:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10073:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2286,
																		"name": "pot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2206,
																		"src": "10088:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																			"typeString": "struct QuailFinance.Pot storage pointer"
																		}
																	},
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10092:6:12",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1820,
																	"src": "10088:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2278,
																	"name": "usdbToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "10038:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10048:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 571,
																"src": "10038:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10038:61:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10101:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 2277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10030:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10030:89:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2291,
												"nodeType": "ExpressionStatement",
												"src": "10030:89:12"
											},
											{
												"condition": {
													"id": 2297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10133:23:12",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 2292,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "10134:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10138:6:12",
															"memberName": "hasWon",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1854,
															"src": "10134:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2296,
														"indexExpression": {
															"expression": {
																"id": 2294,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10145:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10149:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10145:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10134:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2308,
												"nodeType": "IfStatement",
												"src": "10129:86:12",
												"trueBody": {
													"id": 2307,
													"nodeType": "Block",
													"src": "10157:58:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2303,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10193:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10197:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10193:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2298,
																			"name": "pot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2206,
																			"src": "10171:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																				"typeString": "struct QuailFinance.Pot storage pointer"
																			}
																		},
																		"id": 2301,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10175:12:12",
																		"memberName": "participants",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1843,
																		"src": "10171:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10188:4:12",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "10171:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10171:33:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2306,
															"nodeType": "ExpressionStatement",
															"src": "10171:33:12"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2310,
															"name": "_potId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "10247:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2311,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "10255:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10259:4:12",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1818,
															"src": "10255:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 2313,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10265:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10269:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10265:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2315,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "10277:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10281:6:12",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1820,
															"src": "10277:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2317,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "10289:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10293:22:12",
															"memberName": "rotationCycleInSeconds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1826,
															"src": "10289:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2319,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "10317:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2320,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10321:17:12",
															"memberName": "interestNumerator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1830,
															"src": "10317:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2321,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "10340:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10344:19:12",
															"memberName": "interestDenominator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1832,
															"src": "10340:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2323,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "10365:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2324,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10369:15:12",
															"memberName": "numParticipants",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1834,
															"src": "10365:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2309,
														"name": "ParticipantJoined",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "10229:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,string memory,address,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10229:156:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2326,
												"nodeType": "EmitStatement",
												"src": "10224:161:12"
											}
										]
									},
									"functionSelector": "f78aedf9",
									"id": 2328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "joinPot",
									"nameLocation": "9313:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "_potId",
												"nameLocation": "9329:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "9321:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "9350:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "9337:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9337:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "9369:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "9361:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9361:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:55:12"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9385:0:12"
									},
									"scope": 3064,
									"src": "9304:1088:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2513,
										"nodeType": "Block",
										"src": "11500:1949:12",
										"statements": [
											{
												"assignments": [
													2341
												],
												"declarations": [
													{
														"constant": false,
														"id": 2341,
														"mutability": "mutable",
														"name": "pot",
														"nameLocation": "11522:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "11510:15:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
															"typeString": "struct QuailFinance.Pot"
														},
														"typeName": {
															"id": 2340,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2339,
																"name": "Pot",
																"nameLocations": [
																	"11510:3:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1855,
																"src": "11510:3:12"
															},
															"referencedDeclaration": 1855,
															"src": "11510:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2345,
												"initialValue": {
													"baseExpression": {
														"id": 2342,
														"name": "pots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "11528:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pot_$1855_storage_$",
															"typeString": "mapping(uint256 => struct QuailFinance.Pot storage ref)"
														}
													},
													"id": 2344,
													"indexExpression": {
														"id": 2343,
														"name": "_potId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2330,
														"src": "11533:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11528:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pot_$1855_storage",
														"typeString": "struct QuailFinance.Pot storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11510:30:12"
											},
											{
												"assignments": [
													2347
												],
												"declarations": [
													{
														"constant": false,
														"id": 2347,
														"mutability": "mutable",
														"name": "randomNumber",
														"nameLocation": "11779:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "11771:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2346,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "11771:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2356,
												"initialValue": {
													"arguments": [
														{
															"id": 2350,
															"name": "entropyProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "11809:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2351,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "11826:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2352,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11830:14:12",
															"memberName": "sequenceNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1838,
															"src": "11826:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 2353,
															"name": "userRandom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "11846:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2354,
															"name": "providerRandom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "11858:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2348,
															"name": "entropy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "11794:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEntropy_$1696",
																"typeString": "contract IEntropy"
															}
														},
														"id": 2349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11802:6:12",
														"memberName": "reveal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1621,
														"src": "11794:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint64_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (address,uint64,bytes32,bytes32) external returns (bytes32)"
														}
													},
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11794:79:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11771:102:12"
											},
											{
												"assignments": [
													2358
												],
												"declarations": [
													{
														"constant": false,
														"id": 2358,
														"mutability": "mutable",
														"name": "winnerIndex",
														"nameLocation": "11891:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "11883:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11883:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2367,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2361,
																"name": "randomNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2347,
																"src": "11913:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11905:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2359,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11905:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11905:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2363,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "11929:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11933:12:12",
															"memberName": "participants",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1843,
															"src": "11929:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11946:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11929:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11905:47:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11883:69:12"
											},
											{
												"assignments": [
													2369
												],
												"declarations": [
													{
														"constant": false,
														"id": 2369,
														"mutability": "mutable",
														"name": "winner",
														"nameLocation": "11970:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "11962:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2368,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11962:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2374,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 2370,
															"name": "pot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "11979:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2371,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11983:12:12",
														"memberName": "participants",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1843,
														"src": "11979:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2373,
													"indexExpression": {
														"id": 2372,
														"name": "winnerIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2358,
														"src": "11996:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11979:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11962:46:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2380,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2369,
															"src": "12035:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 2375,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "12018:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12022:7:12",
															"memberName": "winners",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1846,
															"src": "12018:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12030:4:12",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "12018:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12018:24:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2382,
												"nodeType": "ExpressionStatement",
												"src": "12018:24:12"
											},
											{
												"assignments": [
													2384
												],
												"declarations": [
													{
														"constant": false,
														"id": 2384,
														"mutability": "mutable",
														"name": "totalPotAmount",
														"nameLocation": "12163:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "12155:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12155:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2391,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2385,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "12180:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12184:12:12",
															"memberName": "participants",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1843,
															"src": "12180:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12197:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12180:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"expression": {
															"id": 2388,
															"name": "pot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "12206:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2389,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12210:6:12",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1820,
														"src": "12206:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12180:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12155:61:12"
											},
											{
												"assignments": [
													2393
												],
												"declarations": [
													{
														"constant": false,
														"id": 2393,
														"mutability": "mutable",
														"name": "amountAfterRevenue",
														"nameLocation": "12234:18:12",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "12226:26:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2392,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12226:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2397,
												"initialValue": {
													"arguments": [
														{
															"id": 2395,
															"name": "totalPotAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2384,
															"src": "12269:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2394,
														"name": "deductRevenue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2816,
														"src": "12255:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) returns (uint256)"
														}
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12255:29:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12226:58:12"
											},
											{
												"assignments": [
													2399
												],
												"declarations": [
													{
														"constant": false,
														"id": 2399,
														"mutability": "mutable",
														"name": "riskPoolBalance",
														"nameLocation": "12347:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "12339:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12339:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2404,
												"initialValue": {
													"arguments": [
														{
															"id": 2401,
															"name": "_potId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "12390:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2402,
															"name": "amountAfterRevenue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2393,
															"src": "12397:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2400,
														"name": "calculateRiskPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "12365:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12365:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12339:77:12"
											},
											{
												"assignments": [
													2406
												],
												"declarations": [
													{
														"constant": false,
														"id": 2406,
														"mutability": "mutable",
														"name": "currentlyUsingRiskPoolBalance",
														"nameLocation": "12434:29:12",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "12426:37:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2405,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12426:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2409,
												"initialValue": {
													"expression": {
														"id": 2407,
														"name": "pot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2341,
														"src": "12466:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
															"typeString": "struct QuailFinance.Pot storage pointer"
														}
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12470:18:12",
													"memberName": "useRiskPoolBalance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1824,
													"src": "12466:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12426:62:12"
											},
											{
												"assignments": [
													2411
												],
												"declarations": [
													{
														"constant": false,
														"id": 2411,
														"mutability": "mutable",
														"name": "totalWinningAmount",
														"nameLocation": "12506:18:12",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "12498:26:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12498:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2418,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2412,
																	"name": "amountAfterRevenue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "12528:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2413,
																	"name": "riskPoolBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "12547:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12528:34:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2415,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12527:36:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2416,
														"name": "currentlyUsingRiskPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2406,
														"src": "12564:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12527:66:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12498:95:12"
											},
											{
												"expression": {
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2419,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "12603:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2422,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12607:9:12",
															"memberName": "amountWon",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1850,
															"src": "12603:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2423,
														"indexExpression": {
															"id": 2421,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2369,
															"src": "12617:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12603:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2424,
														"name": "totalWinningAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "12627:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12603:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2426,
												"nodeType": "ExpressionStatement",
												"src": "12603:42:12"
											},
											{
												"expression": {
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2427,
															"name": "pot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "12655:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2429,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12659:15:12",
														"memberName": "riskPoolBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1822,
														"src": "12655:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2430,
														"name": "riskPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "12678:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12655:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2432,
												"nodeType": "ExpressionStatement",
												"src": "12655:38:12"
											},
											{
												"expression": {
													"id": 2437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2433,
															"name": "pot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "12703:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2435,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12707:18:12",
														"memberName": "useRiskPoolBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1824,
														"src": "12703:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12728:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12703:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2438,
												"nodeType": "ExpressionStatement",
												"src": "12703:26:12"
											},
											{
												"expression": {
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2439,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "12739:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2442,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12743:6:12",
															"memberName": "hasWon",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1854,
															"src": "12739:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2443,
														"indexExpression": {
															"id": 2441,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2369,
															"src": "12750:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12739:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12760:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12739:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2446,
												"nodeType": "ExpressionStatement",
												"src": "12739:25:12"
											},
											{
												"expression": {
													"id": 2452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2447,
															"name": "pot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "12774:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2449,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12778:16:12",
														"memberName": "lastRotationTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1828,
														"src": "12774:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2450,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12797:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12803:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12797:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12774:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2453,
												"nodeType": "ExpressionStatement",
												"src": "12774:38:12"
											},
											{
												"assignments": [
													2455
												],
												"declarations": [
													{
														"constant": false,
														"id": 2455,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "12830:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "12822:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2454,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12822:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2460,
												"initialValue": {
													"arguments": [
														{
															"id": 2458,
															"name": "entropyProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "12851:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2456,
															"name": "entropy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "12836:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEntropy_$1696",
																"typeString": "contract IEntropy"
															}
														},
														"id": 2457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12844:6:12",
														"memberName": "getFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1662,
														"src": "12836:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint128_$",
															"typeString": "function (address) view external returns (uint128)"
														}
													},
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12836:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12822:45:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2462,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12885:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12889:5:12",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "12885:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2464,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2455,
																"src": "12898:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12885:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420666565",
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12903:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af",
																"typeString": "literal_string \"Insufficient fee\""
															},
															"value": "Insufficient fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af",
																"typeString": "literal_string \"Insufficient fee\""
															}
														],
														"id": 2461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12877:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12877:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2468,
												"nodeType": "ExpressionStatement",
												"src": "12877:45:12"
											},
											{
												"assignments": [
													2470
												],
												"declarations": [
													{
														"constant": false,
														"id": 2470,
														"mutability": "mutable",
														"name": "sequenceNumber",
														"nameLocation": "12939:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "12932:21:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 2469,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "12932:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2479,
												"initialValue": {
													"arguments": [
														{
															"id": 2475,
															"name": "entropyProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "12997:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2476,
															"name": "userCommitment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "13026:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13054:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 2471,
																"name": "entropy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "12956:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IEntropy_$1696",
																	"typeString": "contract IEntropy"
																}
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12964:7:12",
															"memberName": "request",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1599,
															"src": "12956:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bool_$returns$_t_uint64_$",
																"typeString": "function (address,bytes32,bool) payable external returns (uint64)"
															}
														},
														"id": 2474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2473,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2455,
																"src": "12979:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12956:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bool_$returns$_t_uint64_$value",
															"typeString": "function (address,bytes32,bool) payable external returns (uint64)"
														}
													},
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12956:113:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12932:137:12"
											},
											{
												"expression": {
													"id": 2484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2480,
															"name": "pot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "13079:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13083:14:12",
														"memberName": "sequenceNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1838,
														"src": "13079:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2483,
														"name": "sequenceNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2470,
														"src": "13100:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13079:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 2485,
												"nodeType": "ExpressionStatement",
												"src": "13079:35:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2487,
															"name": "_potId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "13147:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2488,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2369,
															"src": "13155:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2489,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "13163:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2490,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13167:12:12",
															"memberName": "currentRound",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1836,
															"src": "13163:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2491,
															"name": "sequenceNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "13181:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 2492,
															"name": "userCommitment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "13196:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2493,
															"name": "currentlyUsingRiskPoolBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "13211:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2494,
															"name": "totalWinningAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2411,
															"src": "13241:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2486,
														"name": "RotationCompleted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1917,
														"src": "13129:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint64_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint64,bytes32,uint256,uint256)"
														}
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13129:131:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2496,
												"nodeType": "EmitStatement",
												"src": "13124:136:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2497,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "13338:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13342:12:12",
															"memberName": "participants",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1843,
															"src": "13338:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13355:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13338:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13364:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13338:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2508,
												"nodeType": "IfStatement",
												"src": "13334:76:12",
												"trueBody": {
													"id": 2507,
													"nodeType": "Block",
													"src": "13367:43:12",
													"statements": [
														{
															"expression": {
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "13381:18:12",
																"subExpression": {
																	"expression": {
																		"id": 2502,
																		"name": "pot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "13381:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																			"typeString": "struct QuailFinance.Pot storage pointer"
																		}
																	},
																	"id": 2504,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "13385:12:12",
																	"memberName": "currentRound",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1836,
																	"src": "13381:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2506,
															"nodeType": "ExpressionStatement",
															"src": "13381:18:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "13419:23:12",
													"subExpression": {
														"expression": {
															"id": 2509,
															"name": "pot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "13426:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2510,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13430:12:12",
														"memberName": "participants",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1843,
														"src": "13426:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2512,
												"nodeType": "ExpressionStatement",
												"src": "13419:23:12"
											}
										]
									},
									"functionSelector": "ca829f10",
									"id": 2514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rotateLiquidity",
									"nameLocation": "11382:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "_potId",
												"nameLocation": "11406:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "11398:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11398:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "userCommitment",
												"nameLocation": "11422:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "11414:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2331,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11414:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "userRandom",
												"nameLocation": "11446:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "11438:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11438:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "providerRandom",
												"nameLocation": "11466:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "11458:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2335,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11458:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11397:84:12"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11500:0:12"
									},
									"scope": 3064,
									"src": "11373:2076:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2581,
										"nodeType": "Block",
										"src": "14046:511:12",
										"statements": [
											{
												"assignments": [
													2527
												],
												"declarations": [
													{
														"constant": false,
														"id": 2527,
														"mutability": "mutable",
														"name": "pot",
														"nameLocation": "14068:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2581,
														"src": "14056:15:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
															"typeString": "struct QuailFinance.Pot"
														},
														"typeName": {
															"id": 2526,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2525,
																"name": "Pot",
																"nameLocations": [
																	"14056:3:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1855,
																"src": "14056:3:12"
															},
															"referencedDeclaration": 1855,
															"src": "14056:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2531,
												"initialValue": {
													"baseExpression": {
														"id": 2528,
														"name": "pots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "14074:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pot_$1855_storage_$",
															"typeString": "mapping(uint256 => struct QuailFinance.Pot storage ref)"
														}
													},
													"id": 2530,
													"indexExpression": {
														"id": 2529,
														"name": "_potId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2516,
														"src": "14079:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14074:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pot_$1855_storage",
														"typeString": "struct QuailFinance.Pot storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14056:30:12"
											},
											{
												"assignments": [
													2533
												],
												"declarations": [
													{
														"constant": false,
														"id": 2533,
														"mutability": "mutable",
														"name": "messageHash",
														"nameLocation": "14104:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 2581,
														"src": "14096:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2532,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14096:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2544,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2537,
																	"name": "_potId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "14145:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2538,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "14153:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14157:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "14153:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2540,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2518,
																	"src": "14165:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2541,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2522,
																	"src": "14174:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2535,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "14128:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "14132:12:12",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "14128:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14128:52:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2534,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "14118:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14118:63:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14096:85:12"
											},
											{
												"assignments": [
													2546
												],
												"declarations": [
													{
														"constant": false,
														"id": 2546,
														"mutability": "mutable",
														"name": "ethSignedMessageHash",
														"nameLocation": "14199:20:12",
														"nodeType": "VariableDeclaration",
														"scope": 2581,
														"src": "14191:28:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2545,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14191:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2550,
												"initialValue": {
													"arguments": [
														{
															"id": 2548,
															"name": "messageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2533,
															"src": "14246:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2547,
														"name": "getEthSignedMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3028,
														"src": "14222:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14222:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14191:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2552,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "14276:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2555,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2520,
																		"src": "14314:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2553,
																		"name": "ethSignedMessageHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2546,
																		"src": "14285:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14306:7:12",
																	"memberName": "recover",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 676,
																	"src": "14285:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$",
																		"typeString": "function (bytes32,bytes memory) pure returns (address)"
																	}
																},
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14285:39:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14276:48:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5369676e617475726520766572696669636174696f6e206661696c6564",
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14326:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b77f5b3e2dbe114cd7aa585ae20e38bc4b116f621141d4b4d003fdef37ab19b6",
																"typeString": "literal_string \"Signature verification failed\""
															},
															"value": "Signature verification failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b77f5b3e2dbe114cd7aa585ae20e38bc4b116f621141d4b4d003fdef37ab19b6",
																"typeString": "literal_string \"Signature verification failed\""
															}
														],
														"id": 2551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14268:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14268:90:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2560,
												"nodeType": "ExpressionStatement",
												"src": "14268:90:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2562,
																	"name": "pot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2527,
																	"src": "14376:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																		"typeString": "struct QuailFinance.Pot storage pointer"
																	}
																},
																"id": 2563,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14380:15:12",
																"memberName": "riskPoolBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1822,
																"src": "14376:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2564,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2518,
																"src": "14399:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14376:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e742073686f756c64206265206c657373207468616e206f7220657175616c20746f207269736b20706f6f6c2062616c616e6365",
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14408:58:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb9957458159b5db6d2b0c83b90f736fd26445e8d49494dda890eeb0aa0dc5a1",
																"typeString": "literal_string \"amount should be less than or equal to risk pool balance\""
															},
															"value": "amount should be less than or equal to risk pool balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb9957458159b5db6d2b0c83b90f736fd26445e8d49494dda890eeb0aa0dc5a1",
																"typeString": "literal_string \"amount should be less than or equal to risk pool balance\""
															}
														],
														"id": 2561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14368:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14368:99:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2568,
												"nodeType": "ExpressionStatement",
												"src": "14368:99:12"
											},
											{
												"expression": {
													"id": 2573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2569,
															"name": "pot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2527,
															"src": "14477:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2571,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14481:18:12",
														"memberName": "useRiskPoolBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1824,
														"src": "14477:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2572,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "14502:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14477:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2574,
												"nodeType": "ExpressionStatement",
												"src": "14477:32:12"
											},
											{
												"expression": {
													"id": 2579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2575,
															"name": "pot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2527,
															"src": "14519:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2577,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14523:15:12",
														"memberName": "riskPoolBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1822,
														"src": "14519:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2578,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "14543:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14519:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2580,
												"nodeType": "ExpressionStatement",
												"src": "14519:31:12"
											}
										]
									},
									"functionSelector": "818c5548",
									"id": 2582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "useRiskPool",
									"nameLocation": "13955:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "_potId",
												"nameLocation": "13975:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "13967:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13967:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "13991:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "13983:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13983:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "14013:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "14000:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14000:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "14032:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "14024:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14024:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13966:72:12"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14046:0:12"
									},
									"scope": 3064,
									"src": "13946:611:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2705,
										"nodeType": "Block",
										"src": "14642:778:12",
										"statements": [
											{
												"assignments": [
													2593
												],
												"declarations": [
													{
														"constant": false,
														"id": 2593,
														"mutability": "mutable",
														"name": "pot",
														"nameLocation": "14664:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2705,
														"src": "14652:15:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
															"typeString": "struct QuailFinance.Pot"
														},
														"typeName": {
															"id": 2592,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2591,
																"name": "Pot",
																"nameLocations": [
																	"14652:3:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1855,
																"src": "14652:3:12"
															},
															"referencedDeclaration": 1855,
															"src": "14652:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2597,
												"initialValue": {
													"baseExpression": {
														"id": 2594,
														"name": "pots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "14670:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pot_$1855_storage_$",
															"typeString": "mapping(uint256 => struct QuailFinance.Pot storage ref)"
														}
													},
													"id": 2596,
													"indexExpression": {
														"id": 2595,
														"name": "_potId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2584,
														"src": "14675:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14670:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pot_$1855_storage",
														"typeString": "struct QuailFinance.Pot storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14652:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2599,
																		"name": "hasJoinedPot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1816,
																		"src": "14700:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$",
																			"typeString": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))"
																		}
																	},
																	"id": 2601,
																	"indexExpression": {
																		"id": 2600,
																		"name": "_potId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2584,
																		"src": "14713:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14700:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																		"typeString": "mapping(uint256 => mapping(address => bool))"
																	}
																},
																"id": 2604,
																"indexExpression": {
																	"expression": {
																		"id": 2602,
																		"name": "pot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2593,
																		"src": "14721:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																			"typeString": "struct QuailFinance.Pot storage pointer"
																		}
																	},
																	"id": 2603,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14725:12:12",
																	"memberName": "currentRound",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1836,
																	"src": "14721:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14700:38:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2607,
															"indexExpression": {
																"expression": {
																	"id": 2605,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "14739:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14743:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "14739:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14700:50:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f74206a6f696e6564207468697320706f74",
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14752:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0fc322903223af20cd6ddd84f9bad58ecca785afa2971df02a1194633460b0c5",
																"typeString": "literal_string \"You have not joined this pot\""
															},
															"value": "You have not joined this pot"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0fc322903223af20cd6ddd84f9bad58ecca785afa2971df02a1194633460b0c5",
																"typeString": "literal_string \"You have not joined this pot\""
															}
														],
														"id": 2598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14692:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14692:91:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2610,
												"nodeType": "ExpressionStatement",
												"src": "14692:91:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2612,
																			"name": "_isWinner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "14802:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2613,
																				"name": "_index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2586,
																				"src": "14815:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"expression": {
																					"expression": {
																						"id": 2614,
																						"name": "pot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2593,
																						"src": "14824:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																							"typeString": "struct QuailFinance.Pot storage pointer"
																						}
																					},
																					"id": 2615,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "14828:7:12",
																					"memberName": "winners",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1846,
																					"src": "14824:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2616,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "14836:6:12",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "14824:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14815:27:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "14802:40:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2619,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14801:42:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "14848:10:12",
																			"subExpression": {
																				"id": 2620,
																				"name": "_isWinner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2588,
																				"src": "14849:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2622,
																				"name": "_index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2586,
																				"src": "14862:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"expression": {
																					"expression": {
																						"id": 2623,
																						"name": "pot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2593,
																						"src": "14871:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																							"typeString": "struct QuailFinance.Pot storage pointer"
																						}
																					},
																					"id": 2624,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "14875:12:12",
																					"memberName": "participants",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1843,
																					"src": "14871:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2625,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "14888:6:12",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "14871:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14862:32:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "14848:46:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2628,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14847:48:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14801:94:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e64657820666f72207061727469636970616e7473",
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14897:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c35ab24f3727ba07e65d28a95de4ca6382a45e9e15c67ab6f2db00331ada3bd2",
																"typeString": "literal_string \"Invalid index for participants\""
															},
															"value": "Invalid index for participants"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c35ab24f3727ba07e65d28a95de4ca6382a45e9e15c67ab6f2db00331ada3bd2",
																"typeString": "literal_string \"Invalid index for participants\""
															}
														],
														"id": 2611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14793:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14793:137:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2632,
												"nodeType": "ExpressionStatement",
												"src": "14793:137:12"
											},
											{
												"condition": {
													"id": 2633,
													"name": "_isWinner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2588,
													"src": "14944:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2697,
													"nodeType": "Block",
													"src": "15144:208:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2666,
																	"name": "_index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2586,
																	"src": "15162:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2667,
																				"name": "pot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2593,
																				"src": "15172:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																					"typeString": "struct QuailFinance.Pot storage pointer"
																				}
																			},
																			"id": 2668,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "15176:12:12",
																			"memberName": "participants",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1843,
																			"src": "15172:16:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 2669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15189:6:12",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "15172:23:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15198:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "15172:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15162:37:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2689,
															"nodeType": "IfStatement",
															"src": "15158:148:12",
															"trueBody": {
																"id": 2688,
																"nodeType": "Block",
																"src": "15201:105:12",
																"statements": [
																	{
																		"expression": {
																			"id": 2686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2673,
																						"name": "pot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2593,
																						"src": "15219:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																							"typeString": "struct QuailFinance.Pot storage pointer"
																						}
																					},
																					"id": 2676,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "15223:12:12",
																					"memberName": "participants",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1843,
																					"src": "15219:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2677,
																				"indexExpression": {
																					"id": 2675,
																					"name": "_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2586,
																					"src": "15236:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "15219:24:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2678,
																						"name": "pot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2593,
																						"src": "15246:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																							"typeString": "struct QuailFinance.Pot storage pointer"
																						}
																					},
																					"id": 2679,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "15250:12:12",
																					"memberName": "participants",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1843,
																					"src": "15246:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2685,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2684,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"expression": {
																								"id": 2680,
																								"name": "pot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2593,
																								"src": "15263:3:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																									"typeString": "struct QuailFinance.Pot storage pointer"
																								}
																							},
																							"id": 2681,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "15267:12:12",
																							"memberName": "participants",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1843,
																							"src": "15263:16:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 2682,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15280:6:12",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15263:23:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2683,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15289:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "15263:27:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "15246:45:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "15219:72:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2687,
																		"nodeType": "ExpressionStatement",
																		"src": "15219:72:12"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 2690,
																			"name": "pot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2593,
																			"src": "15319:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																				"typeString": "struct QuailFinance.Pot storage pointer"
																			}
																		},
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15323:12:12",
																		"memberName": "participants",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1843,
																		"src": "15319:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15336:3:12",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "15319:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer)"
																	}
																},
																"id": 2695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15319:22:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2696,
															"nodeType": "ExpressionStatement",
															"src": "15319:22:12"
														}
													]
												},
												"id": 2698,
												"nodeType": "IfStatement",
												"src": "14940:412:12",
												"trueBody": {
													"id": 2665,
													"nodeType": "Block",
													"src": "14955:183:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2634,
																	"name": "_index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2586,
																	"src": "14973:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2635,
																				"name": "pot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2593,
																				"src": "14983:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																					"typeString": "struct QuailFinance.Pot storage pointer"
																				}
																			},
																			"id": 2636,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14987:7:12",
																			"memberName": "winners",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1846,
																			"src": "14983:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 2637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14995:6:12",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "14983:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15004:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "14983:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14973:32:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2657,
															"nodeType": "IfStatement",
															"src": "14969:128:12",
															"trueBody": {
																"id": 2656,
																"nodeType": "Block",
																"src": "15007:90:12",
																"statements": [
																	{
																		"expression": {
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2641,
																						"name": "pot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2593,
																						"src": "15025:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																							"typeString": "struct QuailFinance.Pot storage pointer"
																						}
																					},
																					"id": 2644,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "15029:7:12",
																					"memberName": "winners",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1846,
																					"src": "15025:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2645,
																				"indexExpression": {
																					"id": 2643,
																					"name": "_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2586,
																					"src": "15037:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "15025:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2646,
																						"name": "pot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2593,
																						"src": "15047:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																							"typeString": "struct QuailFinance.Pot storage pointer"
																						}
																					},
																					"id": 2647,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "15051:7:12",
																					"memberName": "winners",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1846,
																					"src": "15047:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2653,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"expression": {
																								"id": 2648,
																								"name": "pot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2593,
																								"src": "15059:3:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																									"typeString": "struct QuailFinance.Pot storage pointer"
																								}
																							},
																							"id": 2649,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "15063:7:12",
																							"memberName": "winners",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1846,
																							"src": "15059:11:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 2650,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15071:6:12",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15059:18:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2651,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15080:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "15059:22:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "15047:35:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "15025:57:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2655,
																		"nodeType": "ExpressionStatement",
																		"src": "15025:57:12"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 2658,
																			"name": "pot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2593,
																			"src": "15110:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																				"typeString": "struct QuailFinance.Pot storage pointer"
																			}
																		},
																		"id": 2661,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15114:7:12",
																		"memberName": "winners",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1846,
																		"src": "15110:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15122:3:12",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "15110:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer)"
																	}
																},
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15110:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2664,
															"nodeType": "ExpressionStatement",
															"src": "15110:17:12"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2700,
															"name": "_potId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2584,
															"src": "15394:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2701,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15402:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15406:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15402:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2699,
														"name": "ParticipantRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1901,
														"src": "15375:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15375:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2704,
												"nodeType": "EmitStatement",
												"src": "15370:43:12"
											}
										]
									},
									"functionSelector": "210eaeae",
									"id": 2706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFromPot",
									"nameLocation": "14572:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "_potId",
												"nameLocation": "14596:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "14588:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14588:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "14612:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "14604:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14604:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "_isWinner",
												"nameLocation": "14625:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "14620:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2587,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14620:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14587:48:12"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14642:0:12"
									},
									"scope": 3064,
									"src": "14563:857:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2763,
										"nodeType": "Block",
										"src": "15471:456:12",
										"statements": [
											{
												"assignments": [
													2713
												],
												"declarations": [
													{
														"constant": false,
														"id": 2713,
														"mutability": "mutable",
														"name": "pot",
														"nameLocation": "15493:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2763,
														"src": "15481:15:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
															"typeString": "struct QuailFinance.Pot"
														},
														"typeName": {
															"id": 2712,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2711,
																"name": "Pot",
																"nameLocations": [
																	"15481:3:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1855,
																"src": "15481:3:12"
															},
															"referencedDeclaration": 1855,
															"src": "15481:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2717,
												"initialValue": {
													"baseExpression": {
														"id": 2714,
														"name": "pots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "15499:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pot_$1855_storage_$",
															"typeString": "mapping(uint256 => struct QuailFinance.Pot storage ref)"
														}
													},
													"id": 2716,
													"indexExpression": {
														"id": 2715,
														"name": "_potId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "15504:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15499:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pot_$1855_storage",
														"typeString": "struct QuailFinance.Pot storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15481:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 2719,
																		"name": "pot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2713,
																		"src": "15529:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																			"typeString": "struct QuailFinance.Pot storage pointer"
																		}
																	},
																	"id": 2720,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15533:9:12",
																	"memberName": "amountWon",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1850,
																	"src": "15529:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2723,
																"indexExpression": {
																	"expression": {
																		"id": 2721,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15543:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15547:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15543:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15529:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15557:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15529:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072657761726420746f20636c61696d",
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15560:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															},
															"value": "No reward to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															}
														],
														"id": 2718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15521:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15521:60:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2728,
												"nodeType": "ExpressionStatement",
												"src": "15521:60:12"
											},
											{
												"assignments": [
													2730
												],
												"declarations": [
													{
														"constant": false,
														"id": 2730,
														"mutability": "mutable",
														"name": "amountToClaim",
														"nameLocation": "15649:13:12",
														"nodeType": "VariableDeclaration",
														"scope": 2763,
														"src": "15641:21:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2729,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15641:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2736,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 2731,
															"name": "pot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2713,
															"src": "15665:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2732,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15669:9:12",
														"memberName": "amountWon",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1850,
														"src": "15665:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2735,
													"indexExpression": {
														"expression": {
															"id": 2733,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "15679:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15683:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "15679:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15665:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15641:49:12"
											},
											{
												"expression": {
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2737,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2713,
																"src": "15747:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2741,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15751:9:12",
															"memberName": "amountWon",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1850,
															"src": "15747:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2742,
														"indexExpression": {
															"expression": {
																"id": 2739,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15761:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15765:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15761:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15747:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15775:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15747:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2745,
												"nodeType": "ExpressionStatement",
												"src": "15747:29:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2749,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15813:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15817:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15813:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2751,
																	"name": "amountToClaim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2730,
																	"src": "15825:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2747,
																	"name": "usdbToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "15794:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15804:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 539,
																"src": "15794:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15794:45:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 2753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15841:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 2746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15786:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15786:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2755,
												"nodeType": "ExpressionStatement",
												"src": "15786:73:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2757,
															"name": "_potId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2708,
															"src": "15888:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2758,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15895:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15899:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15895:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2760,
															"name": "amountToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2730,
															"src": "15906:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2756,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "15874:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15874:46:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2762,
												"nodeType": "EmitStatement",
												"src": "15869:51:12"
											}
										]
									},
									"functionSelector": "ae169a50",
									"id": 2764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "15434:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "_potId",
												"nameLocation": "15454:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "15446:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15446:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15445:16:12"
									},
									"returnParameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15471:0:12"
									},
									"scope": 3064,
									"src": "15425:502:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2788,
										"nodeType": "Block",
										"src": "16087:121:12",
										"statements": [
											{
												"assignments": [
													2775
												],
												"declarations": [
													{
														"constant": false,
														"id": 2775,
														"mutability": "mutable",
														"name": "pot",
														"nameLocation": "16109:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2788,
														"src": "16097:15:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
															"typeString": "struct QuailFinance.Pot"
														},
														"typeName": {
															"id": 2774,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2773,
																"name": "Pot",
																"nameLocations": [
																	"16097:3:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1855,
																"src": "16097:3:12"
															},
															"referencedDeclaration": 1855,
															"src": "16097:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2779,
												"initialValue": {
													"baseExpression": {
														"id": 2776,
														"name": "pots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "16115:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pot_$1855_storage_$",
															"typeString": "mapping(uint256 => struct QuailFinance.Pot storage ref)"
														}
													},
													"id": 2778,
													"indexExpression": {
														"id": 2777,
														"name": "_potId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2766,
														"src": "16120:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16115:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pot_$1855_storage",
														"typeString": "struct QuailFinance.Pot storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16097:30:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2780,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2768,
															"src": "16144:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"id": 2781,
																"name": "pot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "16154:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																	"typeString": "struct QuailFinance.Pot storage pointer"
																}
															},
															"id": 2782,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16158:17:12",
															"memberName": "interestNumerator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1830,
															"src": "16154:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "16144:31:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"expression": {
															"id": 2784,
															"name": "pot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2775,
															"src": "16178:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 2785,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16182:19:12",
														"memberName": "interestDenominator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1832,
														"src": "16178:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16144:57:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2772,
												"id": 2787,
												"nodeType": "Return",
												"src": "16137:64:12"
											}
										]
									},
									"functionSelector": "7d77990c",
									"id": 2789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRiskPoolBalance",
									"nameLocation": "15999:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "_potId",
												"nameLocation": "16032:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2789,
												"src": "16024:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16024:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "16048:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2789,
												"src": "16040:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16040:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16023:33:12"
									},
									"returnParameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2789,
												"src": "16078:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16077:9:12"
									},
									"scope": 3064,
									"src": "15990:218:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2815,
										"nodeType": "Block",
										"src": "16290:148:12",
										"statements": [
											{
												"assignments": [
													2797
												],
												"declarations": [
													{
														"constant": false,
														"id": 2797,
														"mutability": "mutable",
														"name": "revenue",
														"nameLocation": "16308:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2815,
														"src": "16300:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16300:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2801,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2798,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2791,
														"src": "16318:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16328:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "16318:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16300:31:12"
											},
											{
												"expression": {
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2802,
														"name": "netAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2794,
														"src": "16341:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2803,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2791,
															"src": "16353:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2804,
															"name": "revenue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2797,
															"src": "16363:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "16353:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16341:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2807,
												"nodeType": "ExpressionStatement",
												"src": "16341:29:12"
											},
											{
												"expression": {
													"id": 2810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2808,
														"name": "totalRevenue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "16380:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2809,
														"name": "revenue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2797,
														"src": "16396:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16380:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2811,
												"nodeType": "ExpressionStatement",
												"src": "16380:23:12"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2812,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2794,
															"src": "16421:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2813,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16420:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2795,
												"id": 2814,
												"nodeType": "Return",
												"src": "16413:18:12"
											}
										]
									},
									"id": 2816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deductRevenue",
									"nameLocation": "16223:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "16245:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "16237:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16237:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16236:17:12"
									},
									"returnParameters": {
										"id": 2795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "netAmount",
												"nameLocation": "16279:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "16271:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16271:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16270:19:12"
									},
									"scope": 3064,
									"src": "16214:224:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2865,
										"nodeType": "Block",
										"src": "16502:475:12",
										"statements": [
											{
												"condition": {
													"id": 2823,
													"name": "_isUsdb",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2818,
													"src": "16599:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2863,
													"nodeType": "Block",
													"src": "16895:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2858,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "16946:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_QuailFinance_$3064",
																						"typeString": "contract QuailFinance"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_QuailFinance_$3064",
																						"typeString": "contract QuailFinance"
																					}
																				],
																				"id": 2857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "16938:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2856,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "16938:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16938:13:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16952:7:12",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "16938:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2852,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "16917:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "16921:6:12",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "16917:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16909:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 2850,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16909:8:12",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16909:19:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16929:8:12",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "16909:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16909:51:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2862,
															"nodeType": "ExpressionStatement",
															"src": "16909:51:12"
														}
													]
												},
												"id": 2864,
												"nodeType": "IfStatement",
												"src": "16595:376:12",
												"trueBody": {
													"id": 2849,
													"nodeType": "Block",
													"src": "16607:274:12",
													"statements": [
														{
															"assignments": [
																2825
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2825,
																	"mutability": "mutable",
																	"name": "revenueAmount",
																	"nameLocation": "16629:13:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2849,
																	"src": "16621:21:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2824,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16621:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2827,
															"initialValue": {
																"id": 2826,
																"name": "totalRevenue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "16645:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16621:36:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2829,
																			"name": "revenueAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2825,
																			"src": "16679:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16695:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "16679:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f20726576656e756520746f207769746864726177",
																		"id": 2832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16698:24:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_528441bc79d5090f2ff242bc44edb5922bdfd22daeb749bdbbf51765471392d7",
																			"typeString": "literal_string \"No revenue to withdraw\""
																		},
																		"value": "No revenue to withdraw"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_528441bc79d5090f2ff242bc44edb5922bdfd22daeb749bdbbf51765471392d7",
																			"typeString": "literal_string \"No revenue to withdraw\""
																		}
																	],
																	"id": 2828,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "16671:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16671:52:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2834,
															"nodeType": "ExpressionStatement",
															"src": "16671:52:12"
														},
														{
															"expression": {
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2835,
																	"name": "totalRevenue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1788,
																	"src": "16737:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16752:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16737:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2838,
															"nodeType": "ExpressionStatement",
															"src": "16737:16:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2842,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "16824:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2843,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "16828:6:12",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "16824:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2844,
																				"name": "revenueAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2825,
																				"src": "16836:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2840,
																				"name": "usdbToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1795,
																				"src": "16805:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$572",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 2841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "16815:8:12",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 539,
																			"src": "16805:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 2845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16805:45:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"id": 2846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16852:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		},
																		"value": "Transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		}
																	],
																	"id": 2839,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "16797:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16797:73:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2848,
															"nodeType": "ExpressionStatement",
															"src": "16797:73:12"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b7db43c8",
									"id": 2866,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2821,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2820,
												"name": "onlyOwner",
												"nameLocations": [
													"16492:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "16492:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "16492:9:12"
										}
									],
									"name": "withdrawRevenue",
									"nameLocation": "16453:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "_isUsdb",
												"nameLocation": "16474:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "16469:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16469:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16468:14:12"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16502:0:12"
									},
									"scope": 3064,
									"src": "16444:533:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2882,
										"nodeType": "Block",
										"src": "17061:61:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2876,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "17097:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_QuailFinance_$3064",
																		"typeString": "contract QuailFinance"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_QuailFinance_$3064",
																		"typeString": "contract QuailFinance"
																	}
																],
																"id": 2875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17089:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2874,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17089:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17089:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2878,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17104:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17108:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17104:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2871,
															"name": "BLAST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "17071:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBlast_$1711",
																"typeString": "contract IBlast"
															}
														},
														"id": 2873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17077:11:12",
														"memberName": "claimAllGas",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1710,
														"src": "17071:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) external returns (uint256)"
														}
													},
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17071:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2881,
												"nodeType": "ExpressionStatement",
												"src": "17071:44:12"
											}
										]
									},
									"functionSelector": "77d5d2dc",
									"id": 2883,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2869,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2868,
												"name": "onlyOwner",
												"nameLocations": [
													"17052:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "17052:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "17052:9:12"
										}
									],
									"name": "claimMyContractsGas",
									"nameLocation": "17021:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17040:2:12"
									},
									"returnParameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17061:0:12"
									},
									"scope": 3064,
									"src": "17012:110:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2909,
										"nodeType": "Block",
										"src": "17347:127:12",
										"statements": [
											{
												"expression": {
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2892,
														"name": "merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "17357:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2893,
														"name": "_merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2885,
														"src": "17370:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "17357:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2895,
												"nodeType": "ExpressionStatement",
												"src": "17357:24:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2902,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2887,
															"src": "17420:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2898,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "17399:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17403:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "17399:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17391:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2896,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17391:8:12",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17391:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17411:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "17391:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17391:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2904,
												"nodeType": "ExpressionStatement",
												"src": "17391:37:12"
											},
											{
												"expression": {
													"id": 2907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2905,
														"name": "totalYielDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "17438:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2906,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2887,
														"src": "17460:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17438:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2908,
												"nodeType": "ExpressionStatement",
												"src": "17438:29:12"
											}
										]
									},
									"functionSelector": "7c382d0b",
									"id": 2910,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2890,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2889,
												"name": "onlyOwner",
												"nameLocations": [
													"17330:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "17330:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "17330:9:12"
										}
									],
									"name": "setMerkleRoot",
									"nameLocation": "17269:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "_merkleRoot",
												"nameLocation": "17291:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "17283:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2884,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17283:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "17312:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "17304:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17304:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17282:38:12"
									},
									"returnParameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17347:0:12"
									},
									"scope": 3064,
									"src": "17260:214:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2921,
										"nodeType": "Block",
										"src": "17543:33:12",
										"statements": [
											{
												"expression": {
													"id": 2919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2917,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "17553:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2918,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2912,
														"src": "17561:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17553:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2920,
												"nodeType": "ExpressionStatement",
												"src": "17553:16:12"
											}
										]
									},
									"functionSelector": "91dc969e",
									"id": 2922,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2915,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2914,
												"name": "onlyOwner",
												"nameLocations": [
													"17534:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "17534:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "17534:9:12"
										}
									],
									"name": "changeAdminSigner",
									"nameLocation": "17489:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "17515:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2922,
												"src": "17507:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17507:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17506:18:12"
									},
									"returnParameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17543:0:12"
									},
									"scope": 3064,
									"src": "17480:96:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2933,
										"nodeType": "Block",
										"src": "17647:41:12",
										"statements": [
											{
												"expression": {
													"id": 2931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2929,
														"name": "potCreationFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "17657:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2930,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2924,
														"src": "17674:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17657:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2932,
												"nodeType": "ExpressionStatement",
												"src": "17657:24:12"
											}
										]
									},
									"functionSelector": "82199e3f",
									"id": 2934,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2927,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2926,
												"name": "onlyOwner",
												"nameLocations": [
													"17638:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "17638:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "17638:9:12"
										}
									],
									"name": "updatePotCreationFee",
									"nameLocation": "17591:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "17620:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "17612:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17611:17:12"
									},
									"returnParameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17647:0:12"
									},
									"scope": 3064,
									"src": "17582:106:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3011,
										"nodeType": "Block",
										"src": "17776:768:12",
										"statements": [
											{
												"assignments": [
													2943
												],
												"declarations": [
													{
														"constant": false,
														"id": 2943,
														"mutability": "mutable",
														"name": "leaf",
														"nameLocation": "17829:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 3011,
														"src": "17821:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2942,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17821:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2952,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2947,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "17863:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17867:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "17863:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2949,
																	"name": "claimAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2936,
																	"src": "17875:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2945,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17846:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "17850:12:12",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "17846:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17846:41:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2944,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "17836:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17836:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17821:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2956,
																	"name": "merkleProof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2939,
																	"src": "17925:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	}
																},
																{
																	"id": 2957,
																	"name": "merkleRoot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "17938:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2958,
																	"name": "leaf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2943,
																	"src": "17950:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2954,
																	"name": "MerkleProof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "17906:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_MerkleProof_$1457_$",
																		"typeString": "type(library MerkleProof)"
																	}
																},
																"id": 2955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17918:6:12",
																"memberName": "verify",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 947,
																"src": "17906:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
																}
															},
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17906:49:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726f6f662e",
															"id": 2960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17957:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de1f5bb2d20d4a4d49aebff9944173f9fc2479a4c12613a76f6841cd4875ee3a",
																"typeString": "literal_string \"Invalid proof.\""
															},
															"value": "Invalid proof."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de1f5bb2d20d4a4d49aebff9944173f9fc2479a4c12613a76f6841cd4875ee3a",
																"typeString": "literal_string \"Invalid proof.\""
															}
														],
														"id": 2953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17898:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17898:76:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2962,
												"nodeType": "ExpressionStatement",
												"src": "17898:76:12"
											},
											{
												"assignments": [
													2964
												],
												"declarations": [
													{
														"constant": false,
														"id": 2964,
														"mutability": "mutable",
														"name": "alreadyClaimed",
														"nameLocation": "17992:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 3011,
														"src": "17984:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17984:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2969,
												"initialValue": {
													"baseExpression": {
														"id": 2965,
														"name": "hasClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "18009:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2968,
													"indexExpression": {
														"expression": {
															"id": 2966,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "18020:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18024:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "18020:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18009:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17984:47:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2971,
																"name": "alreadyClaimed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2964,
																"src": "18049:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2972,
																"name": "claimAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2936,
																"src": "18066:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18049:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2066756e6473206c65667420746f20636c61696d206f7220616c726561647920636c61696d65642e",
															"id": 2974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18079:44:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c4bd19a918a3606cf4011fcd37fdb091bc1ba6d7dad4d71dbbc79117f71e439",
																"typeString": "literal_string \"No funds left to claim or already claimed.\""
															},
															"value": "No funds left to claim or already claimed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c4bd19a918a3606cf4011fcd37fdb091bc1ba6d7dad4d71dbbc79117f71e439",
																"typeString": "literal_string \"No funds left to claim or already claimed.\""
															}
														],
														"id": 2970,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18041:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18041:83:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2976,
												"nodeType": "ExpressionStatement",
												"src": "18041:83:12"
											},
											{
												"assignments": [
													2978
												],
												"declarations": [
													{
														"constant": false,
														"id": 2978,
														"mutability": "mutable",
														"name": "claimableAmount",
														"nameLocation": "18142:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 3011,
														"src": "18134:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2977,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18134:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2982,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2979,
														"name": "claimAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2936,
														"src": "18160:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2980,
														"name": "alreadyClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2964,
														"src": "18174:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18160:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18134:54:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2984,
																"name": "totalYielDeposited",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1792,
																"src": "18206:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2985,
																"name": "claimableAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2978,
																"src": "18228:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18206:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2066756e647320696e20746865207661756c74",
															"id": 2987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18245:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5eda53211cbde1d1572395409da9ab8faa09926e866792f6bf5a84dcd613f64",
																"typeString": "literal_string \"No funds in the vault\""
															},
															"value": "No funds in the vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5eda53211cbde1d1572395409da9ab8faa09926e866792f6bf5a84dcd613f64",
																"typeString": "literal_string \"No funds in the vault\""
															}
														],
														"id": 2983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18198:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18198:71:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2989,
												"nodeType": "ExpressionStatement",
												"src": "18198:71:12"
											},
											{
												"expression": {
													"id": 2995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2990,
															"name": "hasClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "18316:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2993,
														"indexExpression": {
															"expression": {
																"id": 2991,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "18327:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18331:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18327:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18316:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2994,
														"name": "claimAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2936,
														"src": "18341:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18316:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2996,
												"nodeType": "ExpressionStatement",
												"src": "18316:36:12"
											},
											{
												"expression": {
													"id": 2999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2997,
														"name": "totalYielDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "18362:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2998,
														"name": "claimableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2978,
														"src": "18384:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18362:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3000,
												"nodeType": "ExpressionStatement",
												"src": "18362:37:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3004,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "18483:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18487:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "18483:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3006,
																	"name": "claimableAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2978,
																	"src": "18495:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3002,
																	"name": "usdbToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "18464:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 3003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18474:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 539,
																"src": "18464:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 3007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18464:47:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5969656c64207472616e73666572206661696c6564",
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18513:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_efa32b769863fe6314aaf8a9f7ea4be829f34a575581bcb8e4f3e20cb4066ce0",
																"typeString": "literal_string \"Yield transfer failed\""
															},
															"value": "Yield transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_efa32b769863fe6314aaf8a9f7ea4be829f34a575581bcb8e4f3e20cb4066ce0",
																"typeString": "literal_string \"Yield transfer failed\""
															}
														],
														"id": 3001,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18456:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18456:81:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3010,
												"nodeType": "ExpressionStatement",
												"src": "18456:81:12"
											}
										]
									},
									"functionSelector": "61e7d805",
									"id": 3012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimFunds",
									"nameLocation": "17703:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2936,
												"mutability": "mutable",
												"name": "claimAmount",
												"nameLocation": "17722:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "17714:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17714:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "merkleProof",
												"nameLocation": "17754:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "17735:30:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2937,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "17735:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2938,
													"nodeType": "ArrayTypeName",
													"src": "17735:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17713:53:12"
									},
									"returnParameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17776:0:12"
									},
									"scope": 3064,
									"src": "17694:850:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3027,
										"nodeType": "Block",
										"src": "18663:287:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 3022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18884:34:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 3023,
																	"name": "_messageHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3014,
																	"src": "18920:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 3020,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18867:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "18871:12:12",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "18867:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18867:66:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3019,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "18844:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18844:99:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3018,
												"id": 3026,
												"nodeType": "Return",
												"src": "18837:106:12"
											}
										]
									},
									"functionSelector": "fa540801",
									"id": 3028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthSignedMessageHash",
									"nameLocation": "18559:23:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "_messageHash",
												"nameLocation": "18591:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "18583:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3013,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18583:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18582:22:12"
									},
									"returnParameters": {
										"id": 3018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "18650:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3016,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18650:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18649:9:12"
									},
									"scope": 3064,
									"src": "18550:400:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3040,
										"nodeType": "Block",
										"src": "19015:54:12",
										"statements": [
											{
												"expression": {
													"id": 3038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3033,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3031,
														"src": "19025:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3036,
																"name": "entropyProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1770,
																"src": "19046:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 3034,
																"name": "entropy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "19031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IEntropy_$1696",
																	"typeString": "contract IEntropy"
																}
															},
															"id": 3035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19039:6:12",
															"memberName": "getFee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1662,
															"src": "19031:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint128_$",
																"typeString": "function (address) view external returns (uint128)"
															}
														},
														"id": 3037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19031:31:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "19025:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3039,
												"nodeType": "ExpressionStatement",
												"src": "19025:37:12"
											}
										]
									},
									"functionSelector": "2d971e63",
									"id": 3041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEntropyFee",
									"nameLocation": "18965:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18978:2:12"
									},
									"returnParameters": {
										"id": 3032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3031,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "19010:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3041,
												"src": "19002:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19002:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19001:13:12"
									},
									"scope": 3064,
									"src": "18956:113:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3062,
										"nodeType": "Block",
										"src": "19163:126:12",
										"statements": [
											{
												"assignments": [
													3050
												],
												"declarations": [
													{
														"constant": false,
														"id": 3050,
														"mutability": "mutable",
														"name": "pot",
														"nameLocation": "19185:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 3062,
														"src": "19173:15:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
															"typeString": "struct QuailFinance.Pot"
														},
														"typeName": {
															"id": 3049,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3048,
																"name": "Pot",
																"nameLocations": [
																	"19173:3:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1855,
																"src": "19173:3:12"
															},
															"referencedDeclaration": 1855,
															"src": "19173:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3054,
												"initialValue": {
													"baseExpression": {
														"id": 3051,
														"name": "pots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "19191:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pot_$1855_storage_$",
															"typeString": "mapping(uint256 => struct QuailFinance.Pot storage ref)"
														}
													},
													"id": 3053,
													"indexExpression": {
														"id": 3052,
														"name": "potId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3043,
														"src": "19196:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19191:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pot_$1855_storage",
														"typeString": "struct QuailFinance.Pot storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19173:29:12"
											},
											{
												"expression": {
													"id": 3058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3055,
														"name": "riskPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3046,
														"src": "19212:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3056,
															"name": "pot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3050,
															"src": "19231:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pot_$1855_storage_ptr",
																"typeString": "struct QuailFinance.Pot storage pointer"
															}
														},
														"id": 3057,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19235:15:12",
														"memberName": "riskPoolBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1822,
														"src": "19231:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19212:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3059,
												"nodeType": "ExpressionStatement",
												"src": "19212:38:12"
											},
											{
												"expression": {
													"id": 3060,
													"name": "riskPoolBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3046,
													"src": "19267:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3047,
												"id": 3061,
												"nodeType": "Return",
												"src": "19260:22:12"
											}
										]
									},
									"functionSelector": "4d781b31",
									"id": 3063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRiskPoolBalance",
									"nameLocation": "19083:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3043,
												"mutability": "mutable",
												"name": "potId",
												"nameLocation": "19110:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "19102:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19102:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19101:15:12"
									},
									"returnParameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "riskPoolBalance",
												"nameLocation": "19146:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "19138:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19137:25:12"
									},
									"scope": 3064,
									"src": "19074:215:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3065,
							"src": "674:18617:12",
							"usedErrors": [
								30,
								35,
								211,
								214,
								583,
								588,
								593
							],
							"usedEvents": [
								41,
								219,
								1877,
								1895,
								1901,
								1917,
								1925
							]
						}
					],
					"src": "32:19260:12"
				},
				"id": 12
			}
		}
	}
}