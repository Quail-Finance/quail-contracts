{
	"id": "21aad08466d7992fb7f4477d6592bf23",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/"
			]
		},
		"sources": {
			"contracts/proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\nimport \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\";\nimport \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\";\n//0xed697E3f843c196c8c008813D970f24f6DcEB13a\n//0x70fcD38091e4a56C9568934B52F59cBCadc48c30\n//0x\n// Transparent proxy contract for QuailFinance\ncontract QuailFinanceProxy is TransparentUpgradeableProxy {\n    constructor(address _logic, address admin, bytes memory _data) \n        TransparentUpgradeableProxy(_logic, admin, _data) \n    {\n        new ProxyAdmin(msg.sender);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1967Utils} from \"../ERC1967/ERC1967Utils.sol\";\nimport {ERC1967Proxy} from \"../ERC1967/ERC1967Proxy.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {ProxyAdmin} from \"./ProxyAdmin.sol\";\n\n/**\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n * does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n * include them in the ABI so this interface must be used to interact with it.\n */\ninterface ITransparentUpgradeableProxy is IERC1967 {\n    function upgradeToAndCall(address, bytes calldata) external payable;\n}\n\n/**\n * @dev This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to\n * the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating\n * the proxy admin cannot fallback to the target implementation.\n *\n * These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a\n * dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to\n * call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and\n * allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative\n * interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership.\n *\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n * inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n * implementation.\n *\n * NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a\n * meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract.\n *\n * IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an\n * immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be\n * overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an\n * undesirable state where the admin slot is different from the actual admin.\n *\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the\n * compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new\n * function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This\n * could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    // An immutable address for the admin to avoid unnecessary SLOADs before each call\n    // at the expense of removing the ability to change the admin once it's set.\n    // This is acceptable if the admin is always a ProxyAdmin instance or similar contract\n    // with its own ability to transfer the permissions to another account.\n    address private immutable _admin;\n\n    /**\n     * @dev The proxy caller is the current admin, and can't fallback to the proxy target.\n     */\n    error ProxyDeniedAdminAccess();\n\n    /**\n     * @dev Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`,\n     * backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in\n     * {ERC1967Proxy-constructor}.\n     */\n    constructor(address _logic, address initialOwner, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\n        _admin = address(new ProxyAdmin(initialOwner));\n        // Set the storage value and emit an event for ERC-1967 compatibility\n        ERC1967Utils.changeAdmin(_proxyAdmin());\n    }\n\n    /**\n     * @dev Returns the admin of this proxy.\n     */\n    function _proxyAdmin() internal virtual returns (address) {\n        return _admin;\n    }\n\n    /**\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior.\n     */\n    function _fallback() internal virtual override {\n        if (msg.sender == _proxyAdmin()) {\n            if (msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\n                revert ProxyDeniedAdminAccess();\n            } else {\n                _dispatchUpgradeToAndCall();\n            }\n        } else {\n            super._fallback();\n        }\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy. See {ERC1967Utils-upgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    function _dispatchUpgradeToAndCall() private {\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n        ERC1967Utils.upgradeToAndCall(newImplementation, data);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/transparent/ProxyAdmin.sol)\n\npragma solidity ^0.8.20;\n\nimport {ITransparentUpgradeableProxy} from \"./TransparentUpgradeableProxy.sol\";\nimport {Ownable} from \"../../access/Ownable.sol\";\n\n/**\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\n */\ncontract ProxyAdmin is Ownable {\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address)`\n     * and `upgradeAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev Sets the initial owner who can perform upgrades.\n     */\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    /**\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation.\n     * See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    function upgradeAndCall(\n        ITransparentUpgradeableProxy proxy,\n        address implementation,\n        bytes memory data\n    ) public payable virtual onlyOwner {\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"./ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address implementation, bytes memory _data) payable {\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return ERC1967Utils.getImplementation();\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ERC1967Proxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  mstore(0x40, 0x80)\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  tag_4\n  dup2\n  tag_1\n  jump\t// in\ntag_4:\n  swap3\n  dup4\n  codecopy\n  dup2\n  add\n  swap1\n  0x40\n  dup2\n  dup4\n  sub\n  slt\n  tag_15\n  jumpi\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup2\n  and\n  dup1\n  dup3\n  sub\n  tag_15\n  jumpi\n  0x20\n  dup4\n  dup2\n  add\n  mload\n  swap1\n  swap4\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  tag_15\n  jumpi\n  add\n  dup5\n  0x1f\n  dup3\n  add\n  slt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  mload\n  swap1\n  tag_13\n  tag_14\n  dup4\n  tag_2\n  jump\t// in\ntag_14:\n  tag_1\n  jump\t// in\ntag_13:\n  swap6\n  dup3\n  dup8\n  mstore\n  dup6\n  dup4\n  dup4\n  add\n  add\n  gt\n  tag_15\n  jumpi\n  dup5\n  swap1\n  0x00\ntag_17:\n  dup4\n  dup2\n  lt\n  tag_18\n  jumpi\n  pop\n  pop\n  0x00\n  swap2\n  dup7\n  add\n  add\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n  dup2\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n  tag_20\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  mload(0x40)\n  swap1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  0x00\n  dup1\n  log2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  dup4\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n  tag_22\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n  pop\n  0x00\n  dup1\n  dup5\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  tag_24\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n  swap7\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  swap2\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n  dup5\n  gas\n  delegatecall\n  swap1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  jumpi(tag_25, iszero(returndatasize))\n  returndatasize\n  tag_27\n  tag_14\n  dup3\n  tag_2\n  jump\t// in\ntag_27:\n  swap1\n  dup2\n  mstore\n  0x00\n  dup2\n  swap5\n  returndatasize\n  swap3\n  add\n  returndatacopy\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  tag_3\n  jump\t// in\ntag_24:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_25:\n  0x60\n  swap3\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  tag_3\n  jump\t// in\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n  swap3\n  pop\n  pop\n  pop\n  callvalue\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n  pop\n  jump(tag_30)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\ntag_31:\n  shl(0xe0, 0xb398979f)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n  dup2\n  mstore\n  0x04\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  0x24\n  swap1\n  mload(0x40)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n  swap1\n  shl(0xe0, 0x4c9c8ce3)\n  dup3\n  mstore\n  0x04\n  dup3\n  add\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\ntag_18:\n  dup2\n  dup2\n  add\n  dup4\n  add\n  mload\n  dup9\n  dup3\n  add\n  dup5\n  add\n  mstore\n  dup7\n  swap3\n  add\n  jump(tag_17)\ntag_15:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap2\n  swap1\n  0x1f\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_33\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_33:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_2:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_33\n  jumpi\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\ntag_3:\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4797:4805  !success */\n  tag_37\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6046:6188  assembly {... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  mload(0x40)\n  shl(0xe1, 0x0a12f521)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n  dup2\n  mstore\n  0x04\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n  pop\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  mload(0x40)\n  shl(0xe0, 0x9996b315)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  swap1\n  swap2\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  0x04\n  dup3\n  add\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\ntag_41:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n  pop\n  dup1\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n  jump(tag_42)\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1019:1838  assembly {... */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      iszero\n      tag_1\n      jumpi\n      return(0x00, returndatasize)\n    tag_1:\n      revert(0x00, returndatasize)\n\n    auxdata: 0xa2646970667358221220c0b3b8e5ea20143548c8119b165ef17c950087faf0d6dfb099affc42ac27cd5b64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 482,
									"id": 950,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526102c8803803806100148161018e565b92833981019060408183031261018a5780516001600160a01b03811680820361018a5760208381015190936001600160401b03821161018a570184601f8201121561018a5780519061006d610068836101c7565b61018e565b9582875285838301011161018a5784905f5b8381106101765750505f9186010152813b1561015e577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a283511561014057505f80848461012796519101845af4903d15610137573d610118610068826101c7565b9081525f81943d92013e6101e2565b505b604051608290816102468239f35b606092506101e2565b925050503461014f5750610129565b63b398979f60e01b8152600490fd5b60249060405190634c9c8ce360e01b82526004820152fd5b81810183015188820184015286920161007f565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176101b357604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b0381116101b357601f01601f191660200190565b9061020957508051156101f757805190602001fd5b604051630a12f52160e11b8152600490fd5b8151158061023c575b61021a575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561021256fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e156048573d5ff35b3d5ffdfea2646970667358221220c0b3b8e5ea20143548c8119b165ef17c950087faf0d6dfb099affc42ac27cd5b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2C8 DUP1 CODESIZE SUB DUP1 PUSH2 0x14 DUP2 PUSH2 0x18E JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH2 0x18A JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x18A JUMPI PUSH1 0x20 DUP4 DUP2 ADD MLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18A JUMPI ADD DUP5 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x18A JUMPI DUP1 MLOAD SWAP1 PUSH2 0x6D PUSH2 0x68 DUP4 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST SWAP6 DUP3 DUP8 MSTORE DUP6 DUP4 DUP4 ADD ADD GT PUSH2 0x18A JUMPI DUP5 SWAP1 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x176 JUMPI POP POP PUSH0 SWAP2 DUP7 ADD ADD MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x15E JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP4 MLOAD ISZERO PUSH2 0x140 JUMPI POP PUSH0 DUP1 DUP5 DUP5 PUSH2 0x127 SWAP7 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x137 JUMPI RETURNDATASIZE PUSH2 0x118 PUSH2 0x68 DUP3 PUSH2 0x1C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1E2 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x82 SWAP1 DUP2 PUSH2 0x246 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x1E2 JUMP JUMPDEST SWAP3 POP POP POP CALLVALUE PUSH2 0x14F JUMPI POP PUSH2 0x129 JUMP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP9 DUP3 ADD DUP5 ADD MSTORE DUP7 SWAP3 ADD PUSH2 0x7F JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1B3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1B3 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x209 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1F7 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x23C JUMPI JUMPDEST PUSH2 0x21A JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x212 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH1 0x48 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xB3 0xB8 0xE5 0xEA KECCAK256 EQ CALLDATALOAD BASEFEE 0xC8 GT SWAP12 AND MCOPY CALL PUSH29 0x950087FAF0D6DFB099AFFC42AC27CD5B64736F6C634300081800330000 ",
							"sourceMap": "599:1116:2:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;599:1116:2;;;;;;;;;;;;;;-1:-1:-1;;;;;599:1116:2;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;599:1116:2;;;;;;;;-1:-1:-1;599:1116:2;;;;;2263:29:3;;:34;2259:119;;1327:66;;;-1:-1:-1;;;;;;1327:66:3;;;;;599:1116:2;;;2922:27:3;-1:-1:-1;;2922:27:3;599:1116:2;;2964:15:3;:11;;4255:25:8;-1:-1:-1;4255:25:8;;;4297:55;4255:25;;599:1116:2;;4255:25:8;;;;599:1116:2;;;;;;;;;:::i;:::-;;;;-1:-1:-1;599:1116:2;;;;;;4297:55:8;:::i;:::-;;2960:148:3;599:1116:2;;;;;;;;;;;;-1:-1:-1;4297:55:8;:::i;2960:148:3:-;6648:9;;;;;6644:70;;2960:148;;;6644:70;-1:-1:-1;;;6684:19:3;;;;;2259:119;599:1116:2;;;;2320:47:3;;;;;;;;;599:1116:2;2320:47:3;599:1116:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;599:1116:2;;;;;;;;;-1:-1:-1;;599:1116:2;;;-1:-1:-1;;;;;599:1116:2;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;599:1116:2;;;;;;-1:-1:-1;;599:1116:2;;;;:::o;4625:582:8:-;;4797:8;;-1:-1:-1;599:1116:2;;5874:21:8;:17;;6046:142;;;;;;5870:383;599:1116:2;;-1:-1:-1;;;6225:17:8;;;;;4793:408;599:1116:2;;5045:22:8;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;599:1116:2;;-1:-1:-1;;;5121:24:8;;-1:-1:-1;;;;;599:1116:2;;;5121:24:8;;;599:1116:2;;;5121:24:8;5045:49;5071:18;;;:23;5045:49;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e156048573d5ff35b3d5ffdfea2646970667358221220c0b3b8e5ea20143548c8119b165ef17c950087faf0d6dfb099affc42ac27cd5b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH1 0x48 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xB3 0xB8 0xE5 0xEA KECCAK256 EQ CALLDATALOAD BASEFEE 0xC8 GT SWAP12 AND MCOPY CALL PUSH29 0x950087FAF0D6DFB099AFFC42AC27CD5B64736F6C634300081800330000 ",
							"sourceMap": "599:1116:2:-:0;;;1327:66:3;;-1:-1:-1;;;;;;;;;1327:66:3;1019:819:4;-1:-1:-1;;1019:819:4;;;;;;;-1:-1:-1;1019:819:4;;;;;;-1:-1:-1;1019:819:4;;;-1:-1:-1;1019:819:4"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "26000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 599,
									"end": 1715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 599,
									"end": 1715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 599,
									"end": 1715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "POP",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2292,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2263,
									"end": 2292,
									"name": "EXTCODESIZE",
									"source": 3
								},
								{
									"begin": 2263,
									"end": 2297,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1327,
									"end": 1393,
									"name": "PUSH",
									"source": 3,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1327,
									"end": 1393,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1327,
									"end": 1393,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1327,
									"end": 1393,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1327,
									"end": 1393,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1327,
									"end": 1393,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1327,
									"end": 1393,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1327,
									"end": 1393,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "PUSH",
									"source": 3,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "LOG2",
									"source": 3
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2964,
									"end": 2979,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2964,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2964,
									"end": 2975,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "GAS",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DELEGATECALL",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 599,
									"end": 1715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 4297,
									"end": 4352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "RETURN",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 4297,
									"end": 4352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6648,
									"end": 6657,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6648,
									"end": 6657,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6648,
									"end": 6657,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6648,
									"end": 6657,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6648,
									"end": 6657,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B398979F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 3,
									"value": "4C9C8CE3"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B71"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4797,
									"end": 4805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4797,
									"end": 4805,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5874,
									"end": 5895,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5874,
									"end": 5891,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 5874,
									"end": 5891,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A12F521"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5045,
									"end": 5067,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9996B315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "EXTCODESIZE",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5094,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMP",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0b3b8e5ea20143548c8119b165ef17c950087faf0d6dfb099affc42ac27cd5b64736f6c63430008180033",
									".code": [
										{
											"begin": 599,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 599,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 1715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
								"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e0c53623fdb18b8b0baa95be8e59b0e3a2bb27e81e6a273aca687b637d9fdccd64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220e0c53623fdb18b8b0baa95be8e59b0e3a2bb27e81e6a273aca687b637d9fdccd64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xC5 CALLDATASIZE 0x23 REVERT 0xB1 DUP12 DUP12 SIGNEXTEND 0xAA SWAP6 0xBE DUP15 MSIZE 0xB0 0xE3 LOG2 0xBB 0x27 0xE8 0x1E PUSH11 0x273ACA687B637D9FDCCD64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "449:6273:3:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220e0c53623fdb18b8b0baa95be8e59b0e3a2bb27e81e6a273aca687b637d9fdccd64736f6c63430008180033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xC5 CALLDATASIZE 0x23 REVERT 0xB1 DUP12 DUP12 SIGNEXTEND 0xAA SWAP6 0xBE DUP15 MSIZE 0xB0 0xE3 LOG2 0xBB 0x27 0xE8 0x1E PUSH11 0x273ACA687B637D9FDCCD64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "449:6273:3:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "library_deploy_address"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e0c53623fdb18b8b0baa95be8e59b0e3a2bb27e81e6a273aca687b637d9fdccd64736f6c63430008180033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
								"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": {
				"ProxyAdmin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ITransparentUpgradeableProxy",
									"name": "proxy",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Sets the initial owner who can perform upgrades."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeAndCall(address,address,bytes)": {
								"details": "Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`. - If `data` is empty, `msg.value` must be zero."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address)` and `upgradeAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n  0x80\n  jumpi(tag_7, callvalue)\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x20\n  swap5\n  0x40\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_7\n  jumpi\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  dup2\n  and\n  swap1\n  dup2\n  swap1\n  sub\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup1\n  iszero\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n  0x00\n    /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup2\n  and\n  dup4\n  or\n  dup3\n  sstore\n  mload(0x40)\n  swap4\n  and\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup1\n  log3\n    /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  dup2\n  mstore\n  0x00\n  0x04\n  dup3\n  add\n    /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\ntag_7:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      0x40\n      0x80\n      dup2\n      mstore\n      0x04\n      dup1\n      calldatasize\n      lt\n      iszero\n      tag_3\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_3:\n      0x00\n      swap2\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9623609d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_11\n      jumpi\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      jumpi(tag_17, callvalue)\n      jumpi(tag_17, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      dup2\n      and\n      swap4\n      swap2\n      swap3\n      swap1\n      dup5\n      swap1\n      sub\n      tag_19\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_21\n      tag_2\n      jump\t// in\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_22\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      pop\n      pop\n      sload(0x00)\n      dup3\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      dup3\n      and\n      or\n      0x00\n      sstore\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      dup1\n      log3\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      dup1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      mload\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      dup2\n      mstore\n      swap1\n      dup2\n      add\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      dup5\n      swap1\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n    tag_19:\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup3\n      dup1\n      revert\n    tag_11:\n      pop\n      dup3\n      jumpi(tag_26, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_26\n      jumpi\n      pop\n      dup1\n      mload\n      swap1\n      dup1\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_28\n      jumpi\n      tag_30\n      swap4\n      pop\n      dup2\n      mstore\n      0x05\n      dup3\n      mstore\n      shl(0xdc, 0x0352e302e3)\n      0x20\n      dup4\n      add\n      mstore\n      mload\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap1\n      tag_1\n      jump\t// in\n    tag_30:\n      sub\n      swap1\n      return\n    tag_28:\n      0x41\n      dup5\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore\n      revert(0x00, 0x24)\n    tag_26:\n      dup1\n      revert\n    tag_9:\n      pop\n      jumpi(tag_19, slt(add(not(0x03), calldatasize), 0x60))\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      dup2\n      and\n      swap4\n      swap1\n      dup5\n      swap1\n      sub\n      tag_19\n      jumpi\n      0x24\n      swap2\n      dup3\n      calldataload\n      swap1\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_19\n      jumpi\n      0xffffffffffffffff\n      swap1\n      calldataload(0x44)\n      dup3\n      dup2\n      gt\n      tag_19\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup5\n      add\n      calldataload\n      dup4\n      dup2\n      gt\n      tag_41\n      jumpi\n      dup7\n      mload\n      swap2\n      0x1f\n      dup3\n      add\n      not(0x1f)\n      swap1\n      dup2\n      and\n      0x3f\n      add\n      and\n      dup4\n      add\n      dup6\n      dup2\n      gt\n      dup5\n      dup3\n      lt\n      or\n      tag_43\n      jumpi\n      dup9\n      mstore\n      dup2\n      dup4\n      mstore\n      calldatasize\n      dup8\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_19\n      jumpi\n      dup2\n      0x00\n      swap3\n      dup9\n      0x20\n      swap4\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_47\n      tag_2\n      jump\t// in\n    tag_47:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      dup7\n      extcodesize\n      iszero\n      tag_19\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      tag_50\n      swap7\n      0x00\n      swap3\n      dup8\n      mload\n      dup1\n      swap10\n      dup2\n      swap5\n      dup3\n      swap4\n      shl(0xe1, 0x278f7943)\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      dup5\n      mstore\n      dup10\n      dup5\n      add\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      mstore\n      dup11\n      dup11\n      dup5\n      add\n      mstore\n      0x44\n      dup4\n      add\n      swap1\n      tag_1\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      sub\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1903:1912  msg.value */\n      swap2\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      swap1\n      gas\n      call\n      dup1\n      iszero\n      tag_51\n      jumpi\n      tag_53\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      dup6\n      dup1\n      return\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n    tag_53:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      dup1\n      swap6\n      pop\n      gt\n      tag_55\n      jumpi\n      pop\n      pop\n      mstore\n      stop\n    tag_55:\n      0x41\n      swap1\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore\n      0x00\n      revert\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n    tag_51:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      dup5\n      mload\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_43:\n      dup8\n      0x41\n      dup9\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore\n      0x00\n      revert\n    tag_41:\n      dup6\n      0x41\n      dup7\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore\n      0x00\n      revert\n    tag_7:\n      pop\n      jumpi(tag_19, callvalue)\n      jumpi(tag_19, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_5:\n      jumpi(tag_19, callvalue)\n      jumpi(tag_19, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_65\n      tag_2\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      stop\n    tag_1:\n      swap2\n      swap1\n      dup3\n      mload\n      swap3\n      dup4\n      dup3\n      mstore\n      0x00\n    tag_66:\n      dup5\n      dup2\n      lt\n      tag_67\n      jumpi\n      pop\n      pop\n      dup3\n      0x00\n      0x20\n      dup1\n      swap5\n      swap6\n      dup5\n      add\n      add\n      mstore\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_67:\n      0x20\n      dup2\n      dup4\n      add\n      dup2\n      add\n      mload\n      dup5\n      dup4\n      add\n      dup3\n      add\n      mstore\n      add\n      jump(tag_66)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_2:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_69\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n\n    auxdata: 0xa26469706673582212202511997dc6977dafd72956e9ad133465f75b5af624a4699435908ab7ae2c83ec64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080346100b957601f61048338819003918201601f19168301916001600160401b038311848410176100bd578084926020946040528339810103126100b957516001600160a01b0390818116908190036100b95780156100a1575f80546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36103b190816100d28239f35b604051631e4fbdf760e01b81525f6004820152602490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe604060808152600480361015610013575f80fd5b5f915f3560e01c8063715018a6146102bb5780638da5cb5b146102945780639623609d1461015c578063ad3cb1cc146100eb5763f2fde38b14610054575f80fd5b346100e75760203660031901126100e7576001600160a01b038235818116939192908490036100e357610085610350565b83156100cd5750505f54826bffffffffffffffffffffffff60a01b8216175f55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a380f35b51631e4fbdf760e01b8152908101849052602490fd5b5f80fd5b8280fd5b5082346101595780600319360112610159575080519080820182811067ffffffffffffffff821117610146576101429350815260058252640352e302e360dc1b602083015251918291602083526020830190610312565b0390f35b604184634e487b7160e01b5f525260245ffd5b80fd5b5060603660031901126100e3576001600160a01b03823581811693908490036100e35760249182359081168091036100e35767ffffffffffffffff906044358281116100e357366023820112156100e3578084013583811161028257865191601f8201601f19908116603f0116830185811184821017610270578852818352368783830101116100e357815f92886020930183860137830101526101fe610350565b863b156100e357610230965f92875180998194829363278f794360e11b8452898401528a8a8401526044830190610312565b039134905af1801561026657610244578580f35b909192938095501161025557505052005b604190634e487b7160e01b5f52525ffd5b84513d5f823e3d90fd5b87604188634e487b7160e01b5f52525ffd5b85604186634e487b7160e01b5f52525ffd5b50346100e3575f3660031901126100e3575f5490516001600160a01b039091168152602090f35b346100e3575f3660031901126100e3576102d3610350565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b91908251928382525f5b84811061033c575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161031c565b5f546001600160a01b0316330361036357565b60405163118cdaa760e01b8152336004820152602490fdfea26469706673582212202511997dc6977dafd72956e9ad133465f75b5af624a4699435908ab7ae2c83ec64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x1F PUSH2 0x483 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xBD JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xB9 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xB9 JUMPI DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP4 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x3B1 SWAP1 DUP2 PUSH2 0xD2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xEB JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0xE3 JUMPI PUSH2 0x85 PUSH2 0x350 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xCD JUMPI POP POP PUSH0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x159 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x159 JUMPI POP DUP1 MLOAD SWAP1 DUP1 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x146 JUMPI PUSH2 0x142 SWAP4 POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x312 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x41 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0xE3 JUMPI PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP1 DUP2 AND DUP1 SWAP2 SUB PUSH2 0xE3 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xE3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xE3 JUMPI DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT PUSH2 0x282 JUMPI DUP7 MLOAD SWAP2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP4 ADD DUP6 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x270 JUMPI DUP9 MSTORE DUP2 DUP4 MSTORE CALLDATASIZE DUP8 DUP4 DUP4 ADD ADD GT PUSH2 0xE3 JUMPI DUP2 PUSH0 SWAP3 DUP9 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1FE PUSH2 0x350 JUMP JUMPDEST DUP7 EXTCODESIZE ISZERO PUSH2 0xE3 JUMPI PUSH2 0x230 SWAP7 PUSH0 SWAP3 DUP8 MLOAD DUP1 SWAP10 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE DUP10 DUP5 ADD MSTORE DUP11 DUP11 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x312 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x266 JUMPI PUSH2 0x244 JUMPI DUP6 DUP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP1 SWAP6 POP GT PUSH2 0x255 JUMPI POP POP MSTORE STOP JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x41 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH2 0x2D3 PUSH2 0x350 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH0 JUMPDEST DUP5 DUP2 LT PUSH2 0x33C JUMPI POP POP DUP3 PUSH0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x31C JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x363 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 GT SWAP10 PUSH30 0xC6977DAFD72956E9AD133465F75B5AF624A4699435908AB7AE2C83EC6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "502:1442:6:-:0;;;;;;;;;;;;;-1:-1:-1;;502:1442:6;;;;-1:-1:-1;;;;;502:1442:6;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:1442:6;;;;;;;;;;1273:26:0;;1269:95;;-1:-1:-1;502:1442:6;;-1:-1:-1;;;;;;502:1442:6;;;;;;;;;;;3052:40:0;;-1:-1:-1;3052:40:0;502:1442:6;;;;;;;1269:95:0;502:1442:6;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;502:1442:6;;;1322:31:0;502:1442:6;-1:-1:-1;502:1442:6;;;;;;-1:-1:-1;502:1442:6;;;;;-1:-1:-1;502:1442:6"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_encode_string": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_checkOwner": {
									"entryPoint": 848,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "604060808152600480361015610013575f80fd5b5f915f3560e01c8063715018a6146102bb5780638da5cb5b146102945780639623609d1461015c578063ad3cb1cc146100eb5763f2fde38b14610054575f80fd5b346100e75760203660031901126100e7576001600160a01b038235818116939192908490036100e357610085610350565b83156100cd5750505f54826bffffffffffffffffffffffff60a01b8216175f55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a380f35b51631e4fbdf760e01b8152908101849052602490fd5b5f80fd5b8280fd5b5082346101595780600319360112610159575080519080820182811067ffffffffffffffff821117610146576101429350815260058252640352e302e360dc1b602083015251918291602083526020830190610312565b0390f35b604184634e487b7160e01b5f525260245ffd5b80fd5b5060603660031901126100e3576001600160a01b03823581811693908490036100e35760249182359081168091036100e35767ffffffffffffffff906044358281116100e357366023820112156100e3578084013583811161028257865191601f8201601f19908116603f0116830185811184821017610270578852818352368783830101116100e357815f92886020930183860137830101526101fe610350565b863b156100e357610230965f92875180998194829363278f794360e11b8452898401528a8a8401526044830190610312565b039134905af1801561026657610244578580f35b909192938095501161025557505052005b604190634e487b7160e01b5f52525ffd5b84513d5f823e3d90fd5b87604188634e487b7160e01b5f52525ffd5b85604186634e487b7160e01b5f52525ffd5b50346100e3575f3660031901126100e3575f5490516001600160a01b039091168152602090f35b346100e3575f3660031901126100e3576102d3610350565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b91908251928382525f5b84811061033c575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161031c565b5f546001600160a01b0316330361036357565b60405163118cdaa760e01b8152336004820152602490fdfea26469706673582212202511997dc6977dafd72956e9ad133465f75b5af624a4699435908ab7ae2c83ec64736f6c63430008180033",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xEB JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0xE3 JUMPI PUSH2 0x85 PUSH2 0x350 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xCD JUMPI POP POP PUSH0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x159 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x159 JUMPI POP DUP1 MLOAD SWAP1 DUP1 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x146 JUMPI PUSH2 0x142 SWAP4 POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x312 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x41 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0xE3 JUMPI PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP1 DUP2 AND DUP1 SWAP2 SUB PUSH2 0xE3 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xE3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xE3 JUMPI DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT PUSH2 0x282 JUMPI DUP7 MLOAD SWAP2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP4 ADD DUP6 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x270 JUMPI DUP9 MSTORE DUP2 DUP4 MSTORE CALLDATASIZE DUP8 DUP4 DUP4 ADD ADD GT PUSH2 0xE3 JUMPI DUP2 PUSH0 SWAP3 DUP9 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1FE PUSH2 0x350 JUMP JUMPDEST DUP7 EXTCODESIZE ISZERO PUSH2 0xE3 JUMPI PUSH2 0x230 SWAP7 PUSH0 SWAP3 DUP8 MLOAD DUP1 SWAP10 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE DUP10 DUP5 ADD MSTORE DUP11 DUP11 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x312 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x266 JUMPI PUSH2 0x244 JUMPI DUP6 DUP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP1 SWAP6 POP GT PUSH2 0x255 JUMPI POP POP MSTORE STOP JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x41 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH2 0x2D3 PUSH2 0x350 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH0 JUMPDEST DUP5 DUP2 LT PUSH2 0x33C JUMPI POP POP DUP3 PUSH0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x31C JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x363 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 GT SWAP10 PUSH30 0xC6977DAFD72956E9AD133465F75B5AF624A4699435908AB7AE2C83EC6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "502:1442:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:1442:6;;;;-1:-1:-1;;;;;502:1442:6;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;2627:22;;2623:91;;502:1442:6;;;;;;;;;;;;;;3052:40:0;502:1442:6;3052:40:0;;502:1442:6;;2623:91:0;502:1442:6;-1:-1:-1;;;2672:31:0;;;;;502:1442:6;;;;;2672:31:0;502:1442:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:1442:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;502:1442:6;;-1:-1:-1;;502:1442:6;;;;-1:-1:-1;;;;;502:1442:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:1442:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;1873::6;;;;;502:1442;;;;;;;;;;;;;;;1873:62;;;;;502:1442;;;;;;;;;;;:::i;:::-;1873:62;1903:9;;1873:62;;;;;;;;;502:1442;;;1873:62;502:1442;;;;;;;;;;-1:-1:-1;;502:1442:6;;;;;;;;;;;;;1873:62;502:1442;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:1442:6;;;;;;;;-1:-1:-1;;;;;502:1442:6;;;;;;;;;;;;;;-1:-1:-1;;502:1442:6;;;;1500:62:0;;:::i;:::-;502:1442:6;;;-1:-1:-1;;;;;;502:1442:6;;;;-1:-1:-1;;;;;502:1442:6;3052:40:0;502:1442:6;;3052:40:0;502:1442:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;1796:162:0;1710:6;502:1442:6;-1:-1:-1;;;;;502:1442:6;735:10:9;1855:23:0;1851:101;;1796:162::o;1851:101::-;502:1442:6;;-1:-1:-1;;;1901:40:0;;735:10:9;1901:40:0;;;502:1442:6;;;1901:40:0"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "189000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"owner()": "2306",
								"renounceOwnership()": "28053",
								"transferOwnership(address)": "28206",
								"upgradeAndCall(address,address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "RETURN",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 1944,
									"name": "REVERT",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202511997dc6977dafd72956e9ad133465f75b5af624a4699435908ab7ae2c83ec64736f6c63430008180033",
									".code": [
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "9623609D"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "AD3CB1CC"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 502,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "278F7943"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "E1"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 502,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1873,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
								"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"upgradeAndCall(address,address,bytes)": "9623609d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the initial owner who can perform upgrades.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`. - If `data` is empty, `msg.value` must be zero.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address)` and `upgradeAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":\"ProxyAdmin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xbc9babed4d136e6cc1e74354aa66538a234f3808645fbe30463b4a7b7d8ca789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fd9323b206da2a87924fca2ca996dbd04ae0963f79f66fb8a0ef94bf283a3d\",\"dweb:/ipfs/QmYSoLcvpq8gRo8doLP4nnB43UAT1D3KvfFJRDSD2y4nYu\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
				"ITransparentUpgradeableProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"ITransparentUpgradeableProxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xbc9babed4d136e6cc1e74354aa66538a234f3808645fbe30463b4a7b7d8ca789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fd9323b206da2a87924fca2ca996dbd04ae0963f79f66fb8a0ef94bf283a3d\",\"dweb:/ipfs/QmYSoLcvpq8gRo8doLP4nnB43UAT1D3KvfFJRDSD2y4nYu\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TransparentUpgradeableProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ProxyDeniedAdminAccess",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself. 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating the proxy admin cannot fallback to the target implementation. These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract. IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an undesirable state where the admin slot is different from the actual admin. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"ProxyDeniedAdminAccess()": [
								{
									"details": "The proxy caller is the current admin, and can't fallback to the proxy target."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  0x40\n  0xa0\n  dup2\n  mstore\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  tag_5\n  dup2\n  tag_1\n  jump\t// in\ntag_5:\n  swap3\n  dup4\n  codecopy\n  dup2\n  add\n  swap1\n  0x60\n  dup2\n  dup4\n  sub\n  slt\n  tag_16\n  jumpi\n  tag_8\n  dup2\n  tag_2\n  jump\t// in\ntag_8:\n  0x20\n  swap2\n  tag_9\n  dup4\n  dup3\n  add\n  tag_2\n  jump\t// in\ntag_9:\n  dup6\n  dup3\n  add\n  mload\n  swap1\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  swap2\n  swap1\n  dup3\n  dup3\n  gt\n  tag_16\n  jumpi\n  add\n  dup6\n  0x1f\n  dup3\n  add\n  slt\n  iszero\n  tag_16\n  jumpi\n  dup1\n  mload\n  swap1\n  tag_14\n  tag_15\n  dup4\n  tag_3\n  jump\t// in\ntag_15:\n  tag_1\n  jump\t// in\ntag_14:\n  swap7\n  dup3\n  dup9\n  mstore\n  dup7\n  dup4\n  dup4\n  add\n  add\n  gt\n  tag_16\n  jumpi\n  dup6\n  swap1\n  0x00\ntag_18:\n  dup4\n  dup2\n  lt\n  tag_19\n  jumpi\n  pop\n  pop\n  0x00\n  swap2\n  dup8\n  add\n  add\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n  dup3\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup6\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n  dup9\n  mload\n  swap1\n  swap8\n  swap2\n  swap6\n  swap2\n  swap3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  0x00\n  dup1\n  log2\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup3\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n  pop\n  0x00\n  dup1\n  dup4\n  dup9\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  tag_25\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n  swap6\n  mload\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  swap2\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n  dup5\n  gas\n  delegatecall\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  jumpi(tag_26, iszero(returndatasize))\n  returndatasize\n  swap2\n  tag_28\n  tag_15\n  dup5\n  tag_3\n  jump\t// in\ntag_28:\n  swap3\n  dup4\n  mstore\n  returndatasize\n  0x00\n  dup10\n  dup6\n  add\n  returndatacopy\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  tag_4\n  jump\t// in\ntag_25:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup6\n  mload\n  swap2\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5121:5149  new ProxyAdmin(initialOwner) */\n  dataSize(sub_1)\n  swap2\n  dup3\n  dup5\n  add\n  swap1\n  dup2\n  gt\n  dup5\n  dup3\n  lt\n  or\n  tag_32\n  jumpi\n  dup7\n  dup5\n  swap3\n  dup8\n  swap5\n  dataOffset(sub_1)\n  dup6\n  codecopy\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  and\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5121:5149  new ProxyAdmin(initialOwner) */\n  sub\n  add\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5104:5150  _admin = address(new ProxyAdmin(initialOwner)) */\n  swap2\n  dup3\n  0x80\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4394:4428  AdminChanged(getAdmin(), newAdmin) */\n  0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3374:3440  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n  dup6\n  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n  swap6\n  dup6\n  dup8\n  sload\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  swap5\n  dup4\n  mload\n  swap3\n  dup7\n  and\n  dup4\n  mstore\n  dup3\n  add\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4394:4428  AdminChanged(getAdmin(), newAdmin) */\n  log1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4053:4075  newAdmin == address(0) */\n  dup3\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4049:4140  if (newAdmin == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  and\n  or\n  swap1\n  sstore\n  mload\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5104:5150  _admin = address(new ProxyAdmin(initialOwner)) */\n  0x80\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mload\n  dup2\n  assignImmutable(\"0x7e732ae4670e5050f1d0176dd0b2f251709b9783b190355dd5c4b4d37f4fe131\")\n  return\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4049:4140  if (newAdmin == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup5\n  mload\n  shl(0xe1, 0x3173bdd1)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4098:4129  ERC1967InvalidAdmin(address(0)) */\n  dup2\n  mstore\n  0x00\n  0x04\n  dup3\n  add\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4098:4129  ERC1967InvalidAdmin(address(0)) */\n  revert\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5121:5149  new ProxyAdmin(initialOwner) */\ntag_34:\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup5\n  mload\n  returndatasize\n  0x00\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5121:5149  new ProxyAdmin(initialOwner) */\ntag_32:\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_26:\n  0x60\n  swap2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  tag_4\n  jump\t// in\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n  swap2\n  pop\n  pop\n  callvalue\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n  pop\n  jump(tag_31)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\ntag_38:\n  shl(0xe0, 0xb398979f)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n  dup2\n  mstore\n  0x04\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup6\n  mload\n  shl(0xe0, 0x4c9c8ce3)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n  0x04\n  dup3\n  add\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n  revert\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\ntag_19:\n  dup2\n  dup2\n  add\n  dup4\n  add\n  mload\n  dup10\n  dup3\n  add\n  dup5\n  add\n  mstore\n  dup8\n  swap3\n  add\n  jump(tag_18)\ntag_16:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap2\n  swap1\n  0x1f\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_32\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_16\n  jumpi\n  jump\t// out\ntag_3:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_32\n  jumpi\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\ntag_4:\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4797:4805  !success */\n  tag_46\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n  tag_48\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6046:6188  assembly {... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mload(0x40)\n  shl(0xe1, 0x0a12f521)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n  dup2\n  mstore\n  0x04\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\ntag_51:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n  pop\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mload(0x40)\n  shl(0xe0, 0x9996b315)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  swap1\n  swap2\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  0x04\n  dup3\n  add\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\ntag_50:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n  pop\n  dup1\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n  jump(tag_51)\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mstore(0x40, 0x80)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5642:5652  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5426:5432  _admin */\n      immutable(\"0x7e732ae4670e5050f1d0176dd0b2f251709b9783b190355dd5c4b4d37f4fe131\")\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5642:5669  msg.sender == _proxyAdmin() */\n      sub\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      tag_8\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5689:5696  msg.sig */\n      and(not(sub(shl(0xe0, 0x01), 0x01)), calldataload(0x00))\n      shl(0xe1, 0x278f7943)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5689:5754  msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector */\n      eq\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5700:5754  ITransparentUpgradeableProxy.upgradeToAndCall.selector */\n      tag_10\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mload(0x40)\n      shl(0xe2, 0x34ad5dbb)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5781:5805  ProxyDeniedAdminAccess() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5685:5886  if (msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector) {... */\n    tag_10:\n      tag_12\n      tag_4\n      jump\t// in\n    tag_12:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      stop\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5638:5944  if (msg.sender == _proxyAdmin()) {... */\n    tag_8:\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      dup1\n      swap2\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      and\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1019:1838  assembly {... */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      iszero\n      tag_13\n      jumpi\n      return(0x00, returndatasize)\n    tag_13:\n      revert(0x00, returndatasize)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n    tag_1:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      mload(0x40)\n      swap2\n      swap1\n      0x1f\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0xffffffffffffffff\n      dup2\n      gt\n      dup4\n      dup3\n      lt\n      or\n      tag_15\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_15:\n      tag_1\n      jump\t// in\n    tag_3:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_15\n      jumpi\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6152:6369  function _dispatchUpgradeToAndCall() private {... */\n    tag_4:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6267:6275  msg.data */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6276:6277  4 */\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      gt\n      tag_31\n      jumpi\n      0x40\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6267:6275  msg.data */\n      calldatasize\n      not(0x03)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      add\n      slt\n      tag_31\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6276:6277  4 */\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_31\n      jumpi\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_31\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6267:6275  msg.data */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      0x23\n      dup4\n      add\n      slt\n      iszero\n      tag_31\n      jumpi\n      dup2\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6276:6277  4 */\n      0x04\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      add\n      calldataload\n      swap1\n      tag_29\n      tag_30\n      dup4\n      tag_3\n      jump\t// in\n    tag_30:\n      tag_2\n      jump\t// in\n    tag_29:\n      swap2\n      dup1\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6267:6275  msg.data */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      0x24\n      dup3\n      dup7\n      add\n      add\n      gt\n      tag_31\n      jumpi\n      0x20\n      dup2\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6267:6275  msg.data */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      swap3\n      0x24\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6357:6361  data */\n      tag_33\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      swap8\n      add\n      dup4\n      dup8\n      add\n      calldatacopy\n      dup5\n      add\n      add\n      mstore\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6357:6361  data */\n      tag_5\n      jump\t// in\n    tag_33:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6152:6369  function _dispatchUpgradeToAndCall() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6267:6275  msg.data */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_5:\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      dup2\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_34\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      0x00\n      dup1\n      log2\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      tag_36\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_38\n      swap2\n      tag_6\n      jump\t// in\n    tag_38:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      pop\n      pop\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_40\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_42\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      0x20\n      dup2\n      mload\n      swap2\n      add\n      dup5\n      gas\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      jumpi(tag_43, iszero(returndatasize))\n      returndatasize\n      swap2\n      tag_45\n      tag_30\n      dup5\n      tag_3\n      jump\t// in\n    tag_45:\n      swap3\n      dup4\n      mstore\n      returndatasize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      0x00\n      0x20\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup6\n      add\n      returndatacopy\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_7\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n    tag_43:\n      0x60\n      swap2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_7:\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4797:4805  !success */\n      tag_48\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      tag_50\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6046:6188  assembly {... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      tag_52\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      tag_54\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      pop\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4145:6371  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      pop\n      dup1\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      jump(tag_53)\n\n    auxdata: 0xa26469706673582212208a2a9096c75062e4a1862b92ea788e1660d0e343f4f59b3eaee2e8cc4a01927364736f6c63430008180033\n}\n\nsub_1: assembly {\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      0x80\n      jumpi(tag_7, callvalue)\n      0x1f\n      bytecodeSize\n      codesize\n      dup2\n      swap1\n      sub\n      swap2\n      dup3\n      add\n      not(0x1f)\n      and\n      dup4\n      add\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      dup5\n      dup5\n      lt\n      or\n      tag_3\n      jumpi\n      dup1\n      dup5\n      swap3\n      0x20\n      swap5\n      0x40\n      mstore\n      dup4\n      codecopy\n      dup2\n      add\n      sub\n      slt\n      tag_7\n      jumpi\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_7\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n      tag_9\n      jumpi\n      0x00\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup4\n      or\n      dup3\n      sstore\n      mload(0x40)\n      swap4\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n      dup1\n      log3\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      dataSize(sub_0)\n      swap1\n      dup2\n      dataOffset(sub_0)\n      dup3\n      codecopy\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      dup2\n      mstore\n      0x00\n      0x04\n      dup3\n      add\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n    tag_7:\n      0x00\n      dup1\n      revert\n    tag_3:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    stop\n\n    sub_0: assembly {\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          0x40\n          0x80\n          dup2\n          mstore\n          0x04\n          dup1\n          calldatasize\n          lt\n          iszero\n          tag_3\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_3:\n          0x00\n          swap2\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0x715018a6\n          eq\n          tag_5\n          jumpi\n          dup1\n          0x8da5cb5b\n          eq\n          tag_7\n          jumpi\n          dup1\n          0x9623609d\n          eq\n          tag_9\n          jumpi\n          dup1\n          0xad3cb1cc\n          eq\n          tag_11\n          jumpi\n          0xf2fde38b\n          eq\n          tag_13\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_13:\n          jumpi(tag_17, callvalue)\n          jumpi(tag_17, slt(add(not(0x03), calldatasize), 0x20))\n          sub(shl(0xa0, 0x01), 0x01)\n          dup3\n          calldataload\n          dup2\n          dup2\n          and\n          swap4\n          swap2\n          swap3\n          swap1\n          dup5\n          swap1\n          sub\n          tag_19\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n          tag_21\n          tag_2\n          jump\t// in\n        tag_21:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n          dup4\n          iszero\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n          tag_22\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          pop\n          pop\n          sload(0x00)\n          dup3\n          shl(0xa0, 0xffffffffffffffffffffffff)\n          dup3\n          and\n          or\n          0x00\n          sstore\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          dup1\n          log3\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          dup1\n          return\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n        tag_22:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          mload\n          shl(0xe0, 0x1e4fbdf7)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          dup2\n          mstore\n          swap1\n          dup2\n          add\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          dup5\n          swap1\n          mstore\n          0x24\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          revert\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n        tag_19:\n          0x00\n          dup1\n          revert\n        tag_17:\n          dup3\n          dup1\n          revert\n        tag_11:\n          pop\n          dup3\n          jumpi(tag_26, callvalue)\n          dup1\n          add(calldatasize, not(0x03))\n          slt\n          tag_26\n          jumpi\n          pop\n          dup1\n          mload\n          swap1\n          dup1\n          dup3\n          add\n          dup3\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_28\n          jumpi\n          tag_30\n          swap4\n          pop\n          dup2\n          mstore\n          0x05\n          dup3\n          mstore\n          shl(0xdc, 0x0352e302e3)\n          0x20\n          dup4\n          add\n          mstore\n          mload\n          swap2\n          dup3\n          swap2\n          0x20\n          dup4\n          mstore\n          0x20\n          dup4\n          add\n          swap1\n          tag_1\n          jump\t// in\n        tag_30:\n          sub\n          swap1\n          return\n        tag_28:\n          0x41\n          dup5\n          mstore(0x00, shl(0xe0, 0x4e487b71))\n          mstore\n          revert(0x00, 0x24)\n        tag_26:\n          dup1\n          revert\n        tag_9:\n          pop\n          jumpi(tag_19, slt(add(not(0x03), calldatasize), 0x60))\n          sub(shl(0xa0, 0x01), 0x01)\n          dup3\n          calldataload\n          dup2\n          dup2\n          and\n          swap4\n          swap1\n          dup5\n          swap1\n          sub\n          tag_19\n          jumpi\n          0x24\n          swap2\n          dup3\n          calldataload\n          swap1\n          dup2\n          and\n          dup1\n          swap2\n          sub\n          tag_19\n          jumpi\n          0xffffffffffffffff\n          swap1\n          calldataload(0x44)\n          dup3\n          dup2\n          gt\n          tag_19\n          jumpi\n          calldatasize\n          0x23\n          dup3\n          add\n          slt\n          iszero\n          tag_19\n          jumpi\n          dup1\n          dup5\n          add\n          calldataload\n          dup4\n          dup2\n          gt\n          tag_41\n          jumpi\n          dup7\n          mload\n          swap2\n          0x1f\n          dup3\n          add\n          not(0x1f)\n          swap1\n          dup2\n          and\n          0x3f\n          add\n          and\n          dup4\n          add\n          dup6\n          dup2\n          gt\n          dup5\n          dup3\n          lt\n          or\n          tag_43\n          jumpi\n          dup9\n          mstore\n          dup2\n          dup4\n          mstore\n          calldatasize\n          dup8\n          dup4\n          dup4\n          add\n          add\n          gt\n          tag_19\n          jumpi\n          dup2\n          0x00\n          swap3\n          dup9\n          0x20\n          swap4\n          add\n          dup4\n          dup7\n          add\n          calldatacopy\n          dup4\n          add\n          add\n          mstore\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n          tag_47\n          tag_2\n          jump\t// in\n        tag_47:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          dup7\n          extcodesize\n          iszero\n          tag_19\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          tag_50\n          swap7\n          0x00\n          swap3\n          dup8\n          mload\n          dup1\n          swap10\n          dup2\n          swap5\n          dup3\n          swap4\n          shl(0xe1, 0x278f7943)\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          dup5\n          mstore\n          dup10\n          dup5\n          add\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          mstore\n          dup11\n          dup11\n          dup5\n          add\n          mstore\n          0x44\n          dup4\n          add\n          swap1\n          tag_1\n          jump\t// in\n        tag_50:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          sub\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1903:1912  msg.value */\n          swap2\n          callvalue\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          swap1\n          gas\n          call\n          dup1\n          iszero\n          tag_51\n          jumpi\n          tag_53\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          dup6\n          dup1\n          return\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n        tag_53:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          swap1\n          swap2\n          swap3\n          swap4\n          dup1\n          swap6\n          pop\n          gt\n          tag_55\n          jumpi\n          pop\n          pop\n          mstore\n          stop\n        tag_55:\n          0x41\n          swap1\n          mstore(0x00, shl(0xe0, 0x4e487b71))\n          mstore\n          0x00\n          revert\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n        tag_51:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          dup5\n          mload\n          returndatasize\n          0x00\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n        tag_43:\n          dup8\n          0x41\n          dup9\n          mstore(0x00, shl(0xe0, 0x4e487b71))\n          mstore\n          0x00\n          revert\n        tag_41:\n          dup6\n          0x41\n          dup7\n          mstore(0x00, shl(0xe0, 0x4e487b71))\n          mstore\n          0x00\n          revert\n        tag_7:\n          pop\n          jumpi(tag_19, callvalue)\n          jumpi(tag_19, slt(add(not(0x03), calldatasize), 0x00))\n          sload(0x00)\n          swap1\n          mload\n          sub(shl(0xa0, 0x01), 0x01)\n          swap1\n          swap2\n          and\n          dup2\n          mstore\n          0x20\n          swap1\n          return\n        tag_5:\n          jumpi(tag_19, callvalue)\n          jumpi(tag_19, slt(add(not(0x03), calldatasize), 0x00))\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n          tag_65\n          tag_2\n          jump\t// in\n        tag_65:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          0x00\n          dup1\n          sload\n          not(sub(shl(0xa0, 0x01), 0x01))\n          dup2\n          and\n          dup3\n          sstore\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          dup3\n          dup1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          log3\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          stop\n        tag_1:\n          swap2\n          swap1\n          dup3\n          mload\n          swap3\n          dup4\n          dup3\n          mstore\n          0x00\n        tag_66:\n          dup5\n          dup2\n          lt\n          tag_67\n          jumpi\n          pop\n          pop\n          dup3\n          0x00\n          0x20\n          dup1\n          swap5\n          swap6\n          dup5\n          add\n          add\n          mstore\n          0x1f\n          dup1\n          not\n          swap2\n          add\n          and\n          add\n          add\n          swap1\n          jump\t// out\n        tag_67:\n          0x20\n          dup2\n          dup4\n          add\n          dup2\n          add\n          mload\n          dup5\n          dup4\n          add\n          dup3\n          add\n          mstore\n          add\n          jump(tag_66)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n        tag_2:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          0x00\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          sload\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n          sub\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n          tag_69\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n          jump\t// out\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n        tag_69:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          mload(0x40)\n          shl(0xe0, 0x118cdaa7)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          0x04\n          dup3\n          add\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          mstore\n          0x24\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          revert\n\n        auxdata: 0xa26469706673582212202511997dc6977dafd72956e9ad133465f75b5af624a4699435908ab7ae2c83ec64736f6c63430008180033\n    }\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 716,
									"id": 950,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "604060a08152610acf8038038061001581610278565b9283398101906060818303126102745761002e8161029d565b60209161003c83820161029d565b8582015190916001600160401b039190828211610274570185601f820112156102745780519061007361006e836102b1565b610278565b968288528683830101116102745785905f5b8381106102605750505f9187010152823b15610240577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b038581166001600160a01b0319928316811790935588519097919591927fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561022357505f80838861013e95519101845af43d1561021b573d9161013061006e846102b1565b9283523d5f8985013e6102cc565b505b855191610483918284019081118482101761020757868492879461064c85391681520301905ff080156101fd57831691826080527f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f857fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103958587549483519286168352820152a182156101e657161790555161031c9081610330823960805181600f0152f35b8451633173bdd160e11b81525f6004820152602490fd5b84513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b6060916102cc565b915050346102315750610140565b63b398979f60e01b8152600490fd5b8551634c9c8ce360e01b81526001600160a01b0384166004820152602490fd5b818101830151898201840152879201610085565b5f80fd5b6040519190601f01601f191682016001600160401b0381118382101761020757604052565b51906001600160a01b038216820361027457565b6001600160401b03811161020757601f01601f191660200190565b906102f357508051156102e157805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580610326575b610304575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b156102fc56fe60806040526001600160a01b03337f000000000000000000000000000000000000000000000000000000000000000082160361006a575f356001600160e01b03191663278f794360e11b14610060576040516334ad5dbb60e21b8152600490fd5b610068610105565b005b5f80917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416368280378136915af43d5f803e156100a6573d5ff35b3d5ffd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176100e457604052565b6100aa565b67ffffffffffffffff81116100e457601f01601f191660200190565b3660041161018e57604036600319011261018e576004356001600160a01b0381169081900361018e576024359067ffffffffffffffff821161018e573660238301121561018e5781600401359061016361015e836100e9565b6100be565b91808352366024828601011161018e576020815f92602461018c97018387013784010152610192565b565b5f80fd5b90813b15610229577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a280511561020e5761020b9161024a565b50565b50503461021757565b60405163b398979f60e01b8152600490fd5b604051634c9c8ce360e01b81526001600160a01b0383166004820152602490fd5b5f8061027c93602081519101845af43d1561027f573d9161026d61015e846100e9565b9283523d5f602085013e610283565b90565b6060915b906102aa575080511561029857805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806102dd575b6102bb575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b156102b356fea26469706673582212208a2a9096c75062e4a1862b92ea788e1660d0e343f4f59b3eaee2e8cc4a01927364736f6c634300081800336080346100b957601f61048338819003918201601f19168301916001600160401b038311848410176100bd578084926020946040528339810103126100b957516001600160a01b0390818116908190036100b95780156100a1575f80546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36103b190816100d28239f35b604051631e4fbdf760e01b81525f6004820152602490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe604060808152600480361015610013575f80fd5b5f915f3560e01c8063715018a6146102bb5780638da5cb5b146102945780639623609d1461015c578063ad3cb1cc146100eb5763f2fde38b14610054575f80fd5b346100e75760203660031901126100e7576001600160a01b038235818116939192908490036100e357610085610350565b83156100cd5750505f54826bffffffffffffffffffffffff60a01b8216175f55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a380f35b51631e4fbdf760e01b8152908101849052602490fd5b5f80fd5b8280fd5b5082346101595780600319360112610159575080519080820182811067ffffffffffffffff821117610146576101429350815260058252640352e302e360dc1b602083015251918291602083526020830190610312565b0390f35b604184634e487b7160e01b5f525260245ffd5b80fd5b5060603660031901126100e3576001600160a01b03823581811693908490036100e35760249182359081168091036100e35767ffffffffffffffff906044358281116100e357366023820112156100e3578084013583811161028257865191601f8201601f19908116603f0116830185811184821017610270578852818352368783830101116100e357815f92886020930183860137830101526101fe610350565b863b156100e357610230965f92875180998194829363278f794360e11b8452898401528a8a8401526044830190610312565b039134905af1801561026657610244578580f35b909192938095501161025557505052005b604190634e487b7160e01b5f52525ffd5b84513d5f823e3d90fd5b87604188634e487b7160e01b5f52525ffd5b85604186634e487b7160e01b5f52525ffd5b50346100e3575f3660031901126100e3575f5490516001600160a01b039091168152602090f35b346100e3575f3660031901126100e3576102d3610350565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b91908251928382525f5b84811061033c575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161031c565b5f546001600160a01b0316330361036357565b60405163118cdaa760e01b8152336004820152602490fdfea26469706673582212202511997dc6977dafd72956e9ad133465f75b5af624a4699435908ab7ae2c83ec64736f6c63430008180033",
							"opcodes": "PUSH1 0x40 PUSH1 0xA0 DUP2 MSTORE PUSH2 0xACF DUP1 CODESIZE SUB DUP1 PUSH2 0x15 DUP2 PUSH2 0x278 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x60 DUP2 DUP4 SUB SLT PUSH2 0x274 JUMPI PUSH2 0x2E DUP2 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x3C DUP4 DUP3 ADD PUSH2 0x29D JUMP JUMPDEST DUP6 DUP3 ADD MLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 DUP3 DUP3 GT PUSH2 0x274 JUMPI ADD DUP6 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x274 JUMPI DUP1 MLOAD SWAP1 PUSH2 0x73 PUSH2 0x6E DUP4 PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST SWAP7 DUP3 DUP9 MSTORE DUP7 DUP4 DUP4 ADD ADD GT PUSH2 0x274 JUMPI DUP6 SWAP1 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x260 JUMPI POP POP PUSH0 SWAP2 DUP8 ADD ADD MSTORE DUP3 EXTCODESIZE ISZERO PUSH2 0x240 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE DUP9 MLOAD SWAP1 SWAP8 SWAP2 SWAP6 SWAP2 SWAP3 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO PUSH2 0x223 JUMPI POP PUSH0 DUP1 DUP4 DUP9 PUSH2 0x13E SWAP6 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x21B JUMPI RETURNDATASIZE SWAP2 PUSH2 0x130 PUSH2 0x6E DUP5 PUSH2 0x2B1 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH0 DUP10 DUP6 ADD RETURNDATACOPY PUSH2 0x2CC JUMP JUMPDEST POP JUMPDEST DUP6 MLOAD SWAP2 PUSH2 0x483 SWAP2 DUP3 DUP5 ADD SWAP1 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x207 JUMPI DUP7 DUP5 SWAP3 DUP8 SWAP5 PUSH2 0x64C DUP6 CODECOPY AND DUP2 MSTORE SUB ADD SWAP1 PUSH0 CREATE DUP1 ISZERO PUSH2 0x1FD JUMPI DUP4 AND SWAP2 DUP3 PUSH1 0x80 MSTORE PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F DUP6 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP6 DUP6 DUP8 SLOAD SWAP5 DUP4 MLOAD SWAP3 DUP7 AND DUP4 MSTORE DUP3 ADD MSTORE LOG1 DUP3 ISZERO PUSH2 0x1E6 JUMPI AND OR SWAP1 SSTORE MLOAD PUSH2 0x31C SWAP1 DUP2 PUSH2 0x330 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH1 0xF ADD MSTORE RETURN JUMPDEST DUP5 MLOAD PUSH4 0x3173BDD1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x2CC JUMP JUMPDEST SWAP2 POP POP CALLVALUE PUSH2 0x231 JUMPI POP PUSH2 0x140 JUMP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP10 DUP3 ADD DUP5 ADD MSTORE DUP8 SWAP3 ADD PUSH2 0x85 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x207 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x274 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x207 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2F3 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2E1 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x326 JUMPI JUMPDEST PUSH2 0x304 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2FC JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER PUSH32 0x0 DUP3 AND SUB PUSH2 0x6A JUMPI PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ PUSH2 0x60 JUMPI PUSH1 0x40 MLOAD PUSH4 0x34AD5DBB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x68 PUSH2 0x105 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SWAP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH2 0xA6 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0xE4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xAA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE4 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x18E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x18E JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18E JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x18E JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x163 PUSH2 0x15E DUP4 PUSH2 0xE9 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP7 ADD ADD GT PUSH2 0x18E JUMPI PUSH1 0x20 DUP2 PUSH0 SWAP3 PUSH1 0x24 PUSH2 0x18C SWAP8 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x192 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x229 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x20E JUMPI PUSH2 0x20B SWAP2 PUSH2 0x24A JUMP JUMPDEST POP JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x217 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x27C SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x27F JUMPI RETURNDATASIZE SWAP2 PUSH2 0x26D PUSH2 0x15E DUP5 PUSH2 0xE9 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x283 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP2 JUMPDEST SWAP1 PUSH2 0x2AA JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x298 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2DD JUMPI JUMPDEST PUSH2 0x2BB JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2B3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0x2A SWAP1 SWAP7 0xC7 POP PUSH3 0xE4A186 0x2B SWAP3 0xEA PUSH25 0x8E1660D0E343F4F59B3EAEE2E8CC4A01927364736F6C634300 ADDMOD XOR STOP CALLER PUSH1 0x80 CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x1F PUSH2 0x483 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xBD JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xB9 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xB9 JUMPI DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP4 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x3B1 SWAP1 DUP2 PUSH2 0xD2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xEB JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0xE3 JUMPI PUSH2 0x85 PUSH2 0x350 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xCD JUMPI POP POP PUSH0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x159 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x159 JUMPI POP DUP1 MLOAD SWAP1 DUP1 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x146 JUMPI PUSH2 0x142 SWAP4 POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x312 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x41 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0xE3 JUMPI PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP1 DUP2 AND DUP1 SWAP2 SUB PUSH2 0xE3 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xE3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xE3 JUMPI DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT PUSH2 0x282 JUMPI DUP7 MLOAD SWAP2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP4 ADD DUP6 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x270 JUMPI DUP9 MSTORE DUP2 DUP4 MSTORE CALLDATASIZE DUP8 DUP4 DUP4 ADD ADD GT PUSH2 0xE3 JUMPI DUP2 PUSH0 SWAP3 DUP9 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1FE PUSH2 0x350 JUMP JUMPDEST DUP7 EXTCODESIZE ISZERO PUSH2 0xE3 JUMPI PUSH2 0x230 SWAP7 PUSH0 SWAP3 DUP8 MLOAD DUP1 SWAP10 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE DUP10 DUP5 ADD MSTORE DUP11 DUP11 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x312 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x266 JUMPI PUSH2 0x244 JUMPI DUP6 DUP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP1 SWAP6 POP GT PUSH2 0x255 JUMPI POP POP MSTORE STOP JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x41 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH2 0x2D3 PUSH2 0x350 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH0 JUMPDEST DUP5 DUP2 LT PUSH2 0x33C JUMPI POP POP DUP3 PUSH0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x31C JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x363 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 GT SWAP10 PUSH30 0xC6977DAFD72956E9AD133465F75B5AF624A4699435908AB7AE2C83EC6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "4145:2226:7:-:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4145:2226:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;4145:2226:7;;;;;;;;-1:-1:-1;4145:2226:7;;;;;2263:29:3;;:34;2259:119;;1327:66;4145:2226:7;;-1:-1:-1;;;;;4145:2226:7;;;-1:-1:-1;;;;;;4145:2226:7;;;;;;;;;;;;;;;;2922:27:3;-1:-1:-1;;2922:27:3;4145:2226:7;;2964:15:3;:11;;4255:25:8;-1:-1:-1;4255:25:8;;;4297:55;4255:25;;4145:2226:7;;4255:25:8;;;4145:2226:7;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;4145:2226:7;;;;4297:55:8;:::i;:::-;;2960:148:3;4145:2226:7;;;5121:28;;;;;;;;;;;;;;;;;;;;;;4145:2226;;;5121:28;;;-1:-1:-1;5121:28:7;;;;;4145:2226;;5104:46;;;;4394:34:3;3374:66;;;;;;4145:2226:7;;;;;;;;;;;4394:34:3;4053:22;;4049:91;;4145:2226:7;;;;;;;;;;;5104:46;4145:2226;;;;;;4049:91:3;4145:2226:7;;-1:-1:-1;;;4098:31:3;;-1:-1:-1;4098:31:3;;;4145:2226:7;;;4098:31:3;5121:28:7;4145:2226;;;-1:-1:-1;4145:2226:7;;;;;5121:28;4145:2226;;;-1:-1:-1;4145:2226:7;;;;;-1:-1:-1;4145:2226:7;;;;4297:55:8;:::i;2960:148:3:-;6648:9;;;;6644:70;;2960:148;;;6644:70;-1:-1:-1;;;6684:19:3;;;;;2259:119;4145:2226:7;;-1:-1:-1;;;2320:47:3;;-1:-1:-1;;;;;4145:2226:7;;2320:47:3;;;4145:2226:7;;;2320:47:3;4145:2226:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;4145:2226:7;;;;;;;;;-1:-1:-1;;4145:2226:7;;;-1:-1:-1;;;;;4145:2226:7;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;4145:2226:7;;;;;;:::o;:::-;-1:-1:-1;;;;;4145:2226:7;;;;;;-1:-1:-1;;4145:2226:7;;;;:::o;4625:582:8:-;;4797:8;;-1:-1:-1;4145:2226:7;;5874:21:8;:17;;6046:142;;;;;;5870:383;4145:2226:7;;-1:-1:-1;;;6225:17:8;;;;;4793:408;4145:2226:7;;5045:22:8;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;4145:2226:7;;-1:-1:-1;;;5121:24:8;;-1:-1:-1;;;;;4145:2226:7;;;5121:24:8;;;4145:2226:7;;;5121:24:8;5045:49;5071:18;;;:23;5045:49;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeToAndCall": {
									"entryPoint": 261,
									"id": 737,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_functionDelegateCall": {
									"entryPoint": 586,
									"id": 910,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_upgradeToAndCall": {
									"entryPoint": 402,
									"id": 328,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 643,
									"id": 950,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"629": [
									{
										"length": 32,
										"start": 15
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526001600160a01b03337f000000000000000000000000000000000000000000000000000000000000000082160361006a575f356001600160e01b03191663278f794360e11b14610060576040516334ad5dbb60e21b8152600490fd5b610068610105565b005b5f80917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416368280378136915af43d5f803e156100a6573d5ff35b3d5ffd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176100e457604052565b6100aa565b67ffffffffffffffff81116100e457601f01601f191660200190565b3660041161018e57604036600319011261018e576004356001600160a01b0381169081900361018e576024359067ffffffffffffffff821161018e573660238301121561018e5781600401359061016361015e836100e9565b6100be565b91808352366024828601011161018e576020815f92602461018c97018387013784010152610192565b565b5f80fd5b90813b15610229577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a280511561020e5761020b9161024a565b50565b50503461021757565b60405163b398979f60e01b8152600490fd5b604051634c9c8ce360e01b81526001600160a01b0383166004820152602490fd5b5f8061027c93602081519101845af43d1561027f573d9161026d61015e846100e9565b9283523d5f602085013e610283565b90565b6060915b906102aa575080511561029857805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806102dd575b6102bb575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b156102b356fea26469706673582212208a2a9096c75062e4a1862b92ea788e1660d0e343f4f59b3eaee2e8cc4a01927364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER PUSH32 0x0 DUP3 AND SUB PUSH2 0x6A JUMPI PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ PUSH2 0x60 JUMPI PUSH1 0x40 MLOAD PUSH4 0x34AD5DBB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x68 PUSH2 0x105 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SWAP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH2 0xA6 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0xE4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xAA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE4 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x18E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x18E JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18E JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x18E JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x163 PUSH2 0x15E DUP4 PUSH2 0xE9 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP7 ADD ADD GT PUSH2 0x18E JUMPI PUSH1 0x20 DUP2 PUSH0 SWAP3 PUSH1 0x24 PUSH2 0x18C SWAP8 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x192 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x229 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x20E JUMPI PUSH2 0x20B SWAP2 PUSH2 0x24A JUMP JUMPDEST POP JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x217 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x27C SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x27F JUMPI RETURNDATASIZE SWAP2 PUSH2 0x26D PUSH2 0x15E DUP5 PUSH2 0xE9 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x283 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP2 JUMPDEST SWAP1 PUSH2 0x2AA JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x298 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2DD JUMPI JUMPDEST PUSH2 0x2BB JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2B3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0x2A SWAP1 SWAP7 0xC7 POP PUSH3 0xE4A186 0x2B SWAP3 0xEA PUSH25 0x8E1660D0E343F4F59B3EAEE2E8CC4A01927364736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "4145:2226:7:-:0;;;-1:-1:-1;;;;;5642:10:7;5426:6;4145:2226;;5642:27;4145:2226;;5689:7;;-1:-1:-1;;;;;;5689:7:7;-1:-1:-1;;;5689:65:7;5700:54;;4145:2226;;-1:-1:-1;;;5781:24:7;;;;;5685:201;;;:::i;:::-;4145:2226;5638:306;-1:-1:-1;1327:66:3;;;;4145:2226:7;1019:819:4;;;;;;;;;;-1:-1:-1;1019:819:4;;;;;;-1:-1:-1;1019:819:4;;;-1:-1:-1;1019:819:4;4145:2226:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4145:2226:7;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;;4145:2226:7;;;;:::o;6152:217::-;6267:8;6276:1;4145:2226;;;;6267:8;-1:-1:-1;;4145:2226:7;;;;6276:1;4145:2226;-1:-1:-1;;;;;4145:2226:7;;;;;;;;;;;;;;;;6267:8;4145:2226;;;;;;;;6276:1;4145:2226;;;;;;;:::i;:::-;;:::i;:::-;;;;;6267:8;4145:2226;;;;;;;;;;6267:8;4145:2226;;6357:4;4145:2226;;;;;;;;;;6357:4;:::i;:::-;6152:217::o;4145:2226::-;6267:8;4145:2226;;2779:335:3;;2263:29;;:34;2259:119;;1327:66;4145:2226:7;;-1:-1:-1;;;;;;4145:2226:7;-1:-1:-1;;;;;4145:2226:7;;;;;;;;2922:27:3;-1:-1:-1;;2922:27:3;4145:2226:7;;2964:15:3;:11;;2995:53;;;:::i;:::-;;2779:335::o;2960:148::-;6648:9;;;6644:70;;2779:335::o;6644:70::-;4145:2226:7;;-1:-1:-1;;;6684:19:3;;;;;2259:119;4145:2226:7;;-1:-1:-1;;;2320:47:3;;-1:-1:-1;;;;;4145:2226:7;;2320:47:3;;;4145:2226:7;;;2320:47:3;4106:253:8;4255:25;4106:253;4297:55;4106:253;4255:25;;;;;;;;4145:2226:7;;;;;;;;;;:::i;:::-;;;;;4255:25:8;;4145:2226:7;;;4297:55:8;:::i;:::-;4106:253;:::o;4145:2226:7:-;;;4625:582:8;;4797:8;;-1:-1:-1;4145:2226:7;;5874:21:8;:17;;6046:142;;;;;;5870:383;4145:2226:7;;-1:-1:-1;;;6225:17:8;;;;;4793:408;4145:2226:7;;5045:22:8;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;4145:2226:7;;-1:-1:-1;;;5121:24:8;;-1:-1:-1;;;;;4145:2226:7;;;5121:24:8;;;4145:2226:7;;;5121:24:8;5045:49;5071:18;;;:23;5045:49;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "159200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_dispatchUpgradeToAndCall()": "infinite",
								"_fallback()": "infinite",
								"_proxyAdmin()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4145,
									"end": 6371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4145,
									"end": 6371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4145,
									"end": 6371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 4145,
									"end": 6371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4145,
									"end": 6371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "POP",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2292,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2263,
									"end": 2292,
									"name": "EXTCODESIZE",
									"source": 3
								},
								{
									"begin": 2263,
									"end": 2297,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1327,
									"end": 1393,
									"name": "PUSH",
									"source": 3,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "PUSH",
									"source": 3,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "LOG2",
									"source": 3
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2964,
									"end": 2979,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2964,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 2964,
									"end": 2975,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "GAS",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DELEGATECALL",
									"source": 8
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 4145,
									"end": 6371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "RETURNDATACOPY",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4297,
									"end": 4352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "CREATE",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5104,
									"end": 5150,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5104,
									"end": 5150,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5104,
									"end": 5150,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 5104,
									"end": 5150,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4394,
									"end": 4428,
									"name": "PUSH",
									"source": 3,
									"value": "7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F"
								},
								{
									"begin": 3374,
									"end": 3440,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3374,
									"end": 3440,
									"name": "PUSH",
									"source": 3,
									"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
								},
								{
									"begin": 3374,
									"end": 3440,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": 3374,
									"end": 3440,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3374,
									"end": 3440,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 3374,
									"end": 3440,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4394,
									"end": 4428,
									"name": "LOG1",
									"source": 3
								},
								{
									"begin": 4053,
									"end": 4075,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4053,
									"end": 4075,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4049,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 4049,
									"end": 4140,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 5104,
									"end": 5150,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "629"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 4049,
									"end": 4140,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 4049,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3173BDD1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4098,
									"end": 4129,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4098,
									"end": 4129,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4098,
									"end": 4129,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 4098,
									"end": 4129,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4098,
									"end": 4129,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4098,
									"end": 4129,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "RETURNDATACOPY",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4297,
									"end": 4352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6648,
									"end": 6657,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6648,
									"end": 6657,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6648,
									"end": 6657,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6648,
									"end": 6657,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B398979F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C9C8CE3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4797,
									"end": 4805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 4797,
									"end": 4805,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5874,
									"end": 5895,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5874,
									"end": 5891,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 5874,
									"end": 5891,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A12F521"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5045,
									"end": 5067,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9996B315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4145,
									"end": 6371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "EXTCODESIZE",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5094,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMP",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a2a9096c75062e4a1862b92ea788e1660d0e343f4f59b3eaee2e8cc4a01927364736f6c63430008180033",
									".code": [
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5642,
											"end": 5652,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5426,
											"end": 5432,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "629"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5689,
											"end": 5696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5696,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5689,
											"end": 5696,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "278F7943"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5689,
											"end": 5754,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 5700,
											"end": 5754,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34AD5DBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5781,
											"end": 5805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5805,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5805,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5781,
											"end": 5805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5805,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5886,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 5685,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5685,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5685,
											"end": 5886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5886,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5685,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5944,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5638,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4145,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6152,
											"end": 6369,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6152,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6276,
											"end": 6277,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6276,
											"end": 6277,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6276,
											"end": 6277,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4145,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4145,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6357,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6357,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6357,
											"end": 6361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6357,
											"end": 6361,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 6357,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6152,
											"end": 6369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 3,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 3114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 3114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4145,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4797,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4797,
											"end": 4805,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4145,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMP",
											"source": 8
										}
									]
								},
								"1": {
									".code": [
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSHSIZE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CODESIZE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH #[$]",
											"source": 6,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [$]",
											"source": 6,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										}
									],
									".data": {
										"0": {
											".auxdata": "a26469706673582212202511997dc6977dafd72956e9ad133465f75b5af624a4699435908ab7ae2c83ec64736f6c63430008180033",
											".code": [
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "80"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "3"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "3"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHR",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "715018A6"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "5"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "8DA5CB5B"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "7"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "9623609D"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "9"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "AD3CB1CC"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "11"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "F2FDE38B"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "13"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "13"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLVALUE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "17"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "17"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "21"
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 1500,
													"end": 1562,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "tag",
													"source": 0,
													"value": "21"
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2627,
													"end": 2649,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 2627,
													"end": 2649,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 2623,
													"end": 2714,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "22"
												},
												{
													"begin": 2623,
													"end": 2714,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "A0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "OR",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "LOG3",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURN",
													"source": 6
												},
												{
													"begin": 2623,
													"end": 2714,
													"name": "tag",
													"source": 0,
													"value": "22"
												},
												{
													"begin": 2623,
													"end": 2714,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1E4FBDF7"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "17"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "11"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLVALUE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "26"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "3"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "NOT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "26"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "OR",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "28"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "30"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "5"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "352E302E3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "DC"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 502,
													"end": 1944,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "30"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURN",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "28"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "4E487B71"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "26"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "9"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "60"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "44"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "23"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP7",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "3F"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "OR",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "43"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP9",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP9",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP7",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATACOPY",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "47"
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 1500,
													"end": 1562,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "tag",
													"source": 0,
													"value": "47"
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "DUP7",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "EXTCODESIZE",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "50"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP7",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP10",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "278F7943"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "E1"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "DUP10",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP11",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP11",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "44"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 502,
													"end": 1944,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "50"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 1903,
													"end": 1912,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 1903,
													"end": 1912,
													"name": "CALLVALUE",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "GAS",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "CALL",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "51"
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "53"
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURN",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "tag",
													"source": 6,
													"value": "53"
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP6",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "55"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "STOP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "55"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "4E487B71"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "tag",
													"source": 6,
													"value": "51"
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURNDATASIZE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURNDATACOPY",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURNDATASIZE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "43"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP9",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "4E487B71"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP7",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "4E487B71"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "7"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLVALUE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURN",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "5"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLVALUE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "65"
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 1500,
													"end": 1562,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "tag",
													"source": 0,
													"value": "65"
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SSTORE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "LOG3",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "STOP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "66"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "67"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP6",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "NOT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "67"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "66"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1796,
													"end": 1958,
													"name": "tag",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 1796,
													"end": 1958,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 9
												},
												{
													"begin": 1855,
													"end": 1878,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "69"
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1796,
													"end": 1958,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "tag",
													"source": 0,
													"value": "69"
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "118CDAA7"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 9
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "REVERT",
													"source": 0
												}
											]
										}
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
								"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProxyDeniedAdminAccess\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself. 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating the proxy admin cannot fallback to the target implementation. These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract. IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an undesirable state where the admin slot is different from the actual admin. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ProxyDeniedAdminAccess()\":[{\"details\":\"The proxy caller is the current admin, and can't fallback to the proxy target.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xbc9babed4d136e6cc1e74354aa66538a234f3808645fbe30463b4a7b7d8ca789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fd9323b206da2a87924fca2ca996dbd04ae0963f79f66fb8a0ef94bf283a3d\",\"dweb:/ipfs/QmYSoLcvpq8gRo8doLP4nnB43UAT1D3KvfFJRDSD2y4nYu\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bb63dc52b3278d44e620342cfb5c26b1492bcb4482b512b3b0d153b3b1a723bb64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220bb63dc52b3278d44e620342cfb5c26b1492bcb4482b512b3b0d153b3b1a723bb64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB PUSH4 0xDC52B327 DUP14 PREVRANDAO 0xE6 KECCAK256 CALLVALUE 0x2C 0xFB TLOAD 0x26 0xB1 BLOBHASH 0x2B 0xCB PREVRANDAO DUP3 0xB5 SLT 0xB3 0xB0 0xD1 MSTORE8 0xB3 0xB1 0xA7 0x23 0xBB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220bb63dc52b3278d44e620342cfb5c26b1492bcb4482b512b3b0d153b3b1a723bb64736f6c63430008180033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB PUSH4 0xDC52B327 DUP14 PREVRANDAO 0xE6 KECCAK256 CALLVALUE 0x2C 0xFB TLOAD 0x26 0xB1 BLOBHASH 0x2B 0xCB PREVRANDAO DUP3 0xB5 SLT 0xB3 0xB0 0xD1 MSTORE8 0xB3 0xB1 0xA7 0x23 0xBB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:8:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "library_deploy_address"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb63dc52b3278d44e620342cfb5c26b1492bcb4482b512b3b0d153b3b1a723bb64736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
								"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a8d29309e29dcfbedec9618d106d156198426cdd7f51322df7130bc67d2bc2b864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220a8d29309e29dcfbedec9618d106d156198426cdd7f51322df7130bc67d2bc2b864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xD2 SWAP4 MULMOD 0xE2 SWAP14 0xCF 0xBE 0xDE 0xC9 PUSH2 0x8D10 PUSH14 0x156198426CDD7F51322DF7130BC6 PUSH30 0x2BC2B864736F6C6343000818003300000000000000000000000000000000 ",
							"sourceMap": "1245:2685:10:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220a8d29309e29dcfbedec9618d106d156198426cdd7f51322df7130bc67d2bc2b864736f6c63430008180033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xD2 SWAP4 MULMOD 0xE2 SWAP14 0xCF 0xBE 0xDE 0xC9 PUSH2 0x8D10 PUSH14 0x156198426CDD7F51322DF7130BC6 PUSH30 0x2BC2B864736F6C6343000818003300000000000000000000000000000000 ",
							"sourceMap": "1245:2685:10:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "library_deploy_address"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a8d29309e29dcfbedec9618d106d156198426cdd7f51322df7130bc67d2bc2b864736f6c63430008180033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
								"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/proxy.sol": {
				"QuailFinanceProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ProxyDeniedAdminAccess",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"ProxyDeniedAdminAccess()": [
								{
									"details": "The proxy caller is the current admin, and can't fallback to the proxy target."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  0x40\n  0xa0\n  dup2\n  mstore\n  jumpi(tag_18, callvalue)\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  tag_7\n  dup2\n  tag_1\n  jump\t// in\ntag_7:\n  swap3\n  dup4\n  codecopy\n  dup2\n  add\n  swap1\n  0x60\n  dup2\n  dup4\n  sub\n  slt\n  tag_18\n  jumpi\n  tag_10\n  dup2\n  tag_2\n  jump\t// in\ntag_10:\n  swap2\n  0x20\n  swap2\n  tag_11\n  dup4\n  dup3\n  add\n  tag_2\n  jump\t// in\ntag_11:\n  swap2\n  dup6\n  dup3\n  add\n  mload\n  0x01\n  dup1\n  0x40\n  shl\n  sub\n  swap3\n  dup4\n  dup3\n  gt\n  tag_18\n  jumpi\n  add\n  dup2\n  0x1f\n  dup3\n  add\n  slt\n  iszero\n  tag_18\n  jumpi\n  dup1\n  mload\n  swap1\n  tag_16\n  tag_17\n  dup4\n  tag_3\n  jump\t// in\ntag_17:\n  tag_1\n  jump\t// in\ntag_16:\n  swap3\n  dup3\n  dup5\n  mstore\n  dup7\n  dup4\n  dup4\n  add\n  add\n  gt\n  tag_18\n  jumpi\n  dup6\n  swap1\n  0x00\ntag_20:\n  dup4\n  dup2\n  lt\n  tag_21\n  jumpi\n  pop\n  pop\n  0x00\n  swap2\n  dup4\n  add\n  add\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n  dup5\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup8\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n  swap1\n  swap7\n  swap1\n  swap3\n  swap2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  0x00\n  dup1\n  log2\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  dup2\n  mload\n  swap2\n  dup7\n  swap1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n  dup4\n  iszero\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  tag_27\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  swap4\n  0x00\n  swap3\n  dup4\n  swap3\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n  dup5\n  gas\n  delegatecall\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  jumpi(tag_28, iszero(returndatasize))\n  returndatasize\n  swap2\n  tag_30\n  tag_17\n  dup5\n  tag_3\n  jump\t// in\ntag_30:\n  swap3\n  dup4\n  mstore\n  returndatasize\n  0x00\n  dup10\n  dup6\n  add\n  returndatacopy\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  tag_4\n  jump\t// in\ntag_27:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\ntag_33:\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  dup6\n  mload\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5121:5149  new ProxyAdmin(initialOwner) */\n  swap5\n  dataSize(sub_1)\n  swap6\n  dup7\n  dup2\n  add\n  dup2\n  dup2\n  lt\n  dup6\n  dup3\n  gt\n  or\n  tag_40\n  jumpi\n  dup2\n  dup8\n  swap2\n  dup6\n  dataOffset(sub_1)\n  swap9\n  dup12\n  dup11\n  dup6\n  codecopy\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  and\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5121:5149  new ProxyAdmin(initialOwner) */\n  sub\n  add\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  tag_36\n  jumpi\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5104:5150  _admin = address(new ProxyAdmin(initialOwner)) */\n  swap1\n  dup2\n  0x80\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3374:3440  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n  swap3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4394:4428  AdminChanged(getAdmin(), newAdmin) */\n  0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3374:3440  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n  dup10\n  dup6\n  sload\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  swap3\n  dup2\n  mload\n  swap1\n  dup5\n  and\n  dup2\n  mstore\n  dup6\n  dup11\n  dup3\n  add\n  mstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4394:4428  AdminChanged(getAdmin(), newAdmin) */\n  log1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4053:4075  newAdmin == address(0) */\n  dup3\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4049:4140  if (newAdmin == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  and\n  or\n  swap1\n  sstore\n  dup5\n  mload\n  swap4\n    /* \"contracts/proxy.sol\":551:577  new ProxyAdmin(msg.sender) */\n  dup1\n  dup6\n  add\n  swap2\n  dup3\n  gt\n  dup6\n  dup4\n  lt\n  or\n  tag_40\n  jumpi\n  dup5\n  swap3\n  dup4\n  codecopy\n    /* \"contracts/proxy.sol\":566:576  msg.sender */\n  caller\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  dup2\n  mstore\n    /* \"contracts/proxy.sol\":551:577  new ProxyAdmin(msg.sender) */\n  sub\n  add\n  swap1\n  0x00\n  create\n  iszero\n  tag_42\n  jumpi\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  mload\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5104:5150  _admin = address(new ProxyAdmin(initialOwner)) */\n  0x80\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  mload\n  dup2\n  assignImmutable(\"0x7e732ae4670e5050f1d0176dd0b2f251709b9783b190355dd5c4b4d37f4fe131\")\n  return\n    /* \"contracts/proxy.sol\":551:577  new ProxyAdmin(msg.sender) */\ntag_42:\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  mload\n  returndatasize\n  0x00\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\n    /* \"contracts/proxy.sol\":551:577  new ProxyAdmin(msg.sender) */\ntag_40:\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4049:4140  if (newAdmin == address(0)) {... */\ntag_38:\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  dup9\n  mload\n  shl(0xe1, 0x3173bdd1)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4098:4129  ERC1967InvalidAdmin(address(0)) */\n  dup2\n  mstore\n  0x00\n  0x04\n  dup3\n  add\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4098:4129  ERC1967InvalidAdmin(address(0)) */\n  revert\n    /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5121:5149  new ProxyAdmin(initialOwner) */\ntag_36:\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  dup8\n  mload\n  returndatasize\n  0x00\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\ntag_28:\n  0x60\n  swap2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  tag_4\n  jump\t// in\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\ntag_25:\n  pop\n  pop\n  pop\n  pop\n  jump(tag_33)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\ntag_23:\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  dup6\n  mload\n  shl(0xe0, 0x4c9c8ce3)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  dup7\n  and\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n  0x04\n  dup3\n  add\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n  revert\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\ntag_21:\n  dup2\n  dup2\n  add\n  dup4\n  add\n  mload\n  dup6\n  dup3\n  add\n  dup5\n  add\n  mstore\n  dup8\n  swap3\n  add\n  jump(tag_20)\ntag_18:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap2\n  swap1\n  0x1f\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_40\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_18\n  jumpi\n  jump\t// out\ntag_3:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_40\n  jumpi\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\ntag_4:\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4797:4805  !success */\n  tag_50\n  jumpi\n  pop\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6046:6188  assembly {... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\ntag_52:\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  mload(0x40)\n  shl(0xe1, 0x0a12f521)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n  dup2\n  mstore\n  0x04\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\ntag_50:\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  tag_54\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\ntag_55:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n  tag_56\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n  pop\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_56:\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  mload(0x40)\n  shl(0xe0, 0x9996b315)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  swap1\n  swap2\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  0x04\n  dup3\n  add\n    /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\ntag_54:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n  pop\n  dup1\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n  jump(tag_55)\nstop\n\nsub_0: assembly {\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      mstore(0x40, 0x80)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5642:5652  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5426:5432  _admin */\n      immutable(\"0x7e732ae4670e5050f1d0176dd0b2f251709b9783b190355dd5c4b4d37f4fe131\")\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5642:5669  msg.sender == _proxyAdmin() */\n      sub\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      tag_8\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5689:5696  msg.sig */\n      and(not(sub(shl(0xe0, 0x01), 0x01)), calldataload(0x00))\n      shl(0xe1, 0x278f7943)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5689:5754  msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector */\n      eq\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5700:5754  ITransparentUpgradeableProxy.upgradeToAndCall.selector */\n      tag_10\n      jumpi\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      mload(0x40)\n      shl(0xe2, 0x34ad5dbb)\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5781:5805  ProxyDeniedAdminAccess() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5685:5886  if (msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector) {... */\n    tag_10:\n      tag_12\n      tag_4\n      jump\t// in\n    tag_12:\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      stop\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5638:5944  if (msg.sender == _proxyAdmin()) {... */\n    tag_8:\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      dup1\n      swap2\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      and\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1019:1838  assembly {... */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      iszero\n      tag_13\n      jumpi\n      return(0x00, returndatasize)\n    tag_13:\n      revert(0x00, returndatasize)\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n    tag_1:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      mload(0x40)\n      swap2\n      swap1\n      0x1f\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0xffffffffffffffff\n      dup2\n      gt\n      dup4\n      dup3\n      lt\n      or\n      tag_15\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_15:\n      tag_1\n      jump\t// in\n    tag_3:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_15\n      jumpi\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6152:6369  function _dispatchUpgradeToAndCall() private {... */\n    tag_4:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6267:6275  msg.data */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6276:6277  4 */\n      0x04\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      gt\n      tag_31\n      jumpi\n      0x40\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6267:6275  msg.data */\n      calldatasize\n      not(0x03)\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      add\n      slt\n      tag_31\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6276:6277  4 */\n      0x04\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_31\n      jumpi\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_31\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6267:6275  msg.data */\n      calldatasize\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      0x23\n      dup4\n      add\n      slt\n      iszero\n      tag_31\n      jumpi\n      dup2\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6276:6277  4 */\n      0x04\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      add\n      calldataload\n      swap1\n      tag_29\n      tag_30\n      dup4\n      tag_3\n      jump\t// in\n    tag_30:\n      tag_2\n      jump\t// in\n    tag_29:\n      swap2\n      dup1\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6267:6275  msg.data */\n      calldatasize\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      0x24\n      dup3\n      dup7\n      add\n      add\n      gt\n      tag_31\n      jumpi\n      0x20\n      dup2\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6267:6275  msg.data */\n      0x00\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      swap3\n      0x24\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6357:6361  data */\n      tag_33\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      swap8\n      add\n      dup4\n      dup8\n      add\n      calldatacopy\n      dup5\n      add\n      add\n      mstore\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6357:6361  data */\n      tag_5\n      jump\t// in\n    tag_33:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6152:6369  function _dispatchUpgradeToAndCall() private {... */\n      jump\t// out\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6267:6275  msg.data */\n      0x00\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_5:\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      dup2\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_34\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      0x00\n      dup1\n      log2\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      tag_36\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_38\n      swap2\n      tag_6\n      jump\t// in\n    tag_38:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      pop\n      pop\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_40\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n    tag_40:\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_34:\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_42\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      0x20\n      dup2\n      mload\n      swap2\n      add\n      dup5\n      gas\n      delegatecall\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      jumpi(tag_43, iszero(returndatasize))\n      returndatasize\n      swap2\n      tag_45\n      tag_30\n      dup5\n      tag_3\n      jump\t// in\n    tag_45:\n      swap3\n      dup4\n      mstore\n      returndatasize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      0x00\n      0x20\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      dup6\n      add\n      returndatacopy\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_7\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n    tag_43:\n      0x60\n      swap2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_7:\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4797:4805  !success */\n      tag_48\n      jumpi\n      pop\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      tag_50\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6046:6188  assembly {... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_50:\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_48:\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      tag_52\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      tag_54\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      pop\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_54:\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"contracts/proxy.sol\":350:586  contract QuailFinanceProxy is TransparentUpgradeableProxy {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      pop\n      dup1\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      jump(tag_53)\n\n    auxdata: 0xa2646970667358221220db1acf395fbc61e305b72a38a62a75c28805dc7b81511dfcc1c892a9f746d14964736f6c63430008180033\n}\n\nsub_1: assembly {\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      0x80\n      jumpi(tag_7, callvalue)\n      0x1f\n      bytecodeSize\n      codesize\n      dup2\n      swap1\n      sub\n      swap2\n      dup3\n      add\n      not(0x1f)\n      and\n      dup4\n      add\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      dup5\n      dup5\n      lt\n      or\n      tag_3\n      jumpi\n      dup1\n      dup5\n      swap3\n      0x20\n      swap5\n      0x40\n      mstore\n      dup4\n      codecopy\n      dup2\n      add\n      sub\n      slt\n      tag_7\n      jumpi\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_7\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n      tag_9\n      jumpi\n      0x00\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup4\n      or\n      dup3\n      sstore\n      mload(0x40)\n      swap4\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n      dup1\n      log3\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      dataSize(sub_0)\n      swap1\n      dup2\n      dataOffset(sub_0)\n      dup3\n      codecopy\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      dup2\n      mstore\n      0x00\n      0x04\n      dup3\n      add\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n    tag_7:\n      0x00\n      dup1\n      revert\n    tag_3:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    stop\n\n    sub_0: assembly {\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          0x40\n          0x80\n          dup2\n          mstore\n          0x04\n          dup1\n          calldatasize\n          lt\n          iszero\n          tag_3\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_3:\n          0x00\n          swap2\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0x715018a6\n          eq\n          tag_5\n          jumpi\n          dup1\n          0x8da5cb5b\n          eq\n          tag_7\n          jumpi\n          dup1\n          0x9623609d\n          eq\n          tag_9\n          jumpi\n          dup1\n          0xad3cb1cc\n          eq\n          tag_11\n          jumpi\n          0xf2fde38b\n          eq\n          tag_13\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_13:\n          jumpi(tag_17, callvalue)\n          jumpi(tag_17, slt(add(not(0x03), calldatasize), 0x20))\n          sub(shl(0xa0, 0x01), 0x01)\n          dup3\n          calldataload\n          dup2\n          dup2\n          and\n          swap4\n          swap2\n          swap3\n          swap1\n          dup5\n          swap1\n          sub\n          tag_19\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n          tag_21\n          tag_2\n          jump\t// in\n        tag_21:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n          dup4\n          iszero\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n          tag_22\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          pop\n          pop\n          sload(0x00)\n          dup3\n          shl(0xa0, 0xffffffffffffffffffffffff)\n          dup3\n          and\n          or\n          0x00\n          sstore\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          dup1\n          log3\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          dup1\n          return\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n        tag_22:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          mload\n          shl(0xe0, 0x1e4fbdf7)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          dup2\n          mstore\n          swap1\n          dup2\n          add\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          dup5\n          swap1\n          mstore\n          0x24\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          revert\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n        tag_19:\n          0x00\n          dup1\n          revert\n        tag_17:\n          dup3\n          dup1\n          revert\n        tag_11:\n          pop\n          dup3\n          jumpi(tag_26, callvalue)\n          dup1\n          add(calldatasize, not(0x03))\n          slt\n          tag_26\n          jumpi\n          pop\n          dup1\n          mload\n          swap1\n          dup1\n          dup3\n          add\n          dup3\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_28\n          jumpi\n          tag_30\n          swap4\n          pop\n          dup2\n          mstore\n          0x05\n          dup3\n          mstore\n          shl(0xdc, 0x0352e302e3)\n          0x20\n          dup4\n          add\n          mstore\n          mload\n          swap2\n          dup3\n          swap2\n          0x20\n          dup4\n          mstore\n          0x20\n          dup4\n          add\n          swap1\n          tag_1\n          jump\t// in\n        tag_30:\n          sub\n          swap1\n          return\n        tag_28:\n          0x41\n          dup5\n          mstore(0x00, shl(0xe0, 0x4e487b71))\n          mstore\n          revert(0x00, 0x24)\n        tag_26:\n          dup1\n          revert\n        tag_9:\n          pop\n          jumpi(tag_19, slt(add(not(0x03), calldatasize), 0x60))\n          sub(shl(0xa0, 0x01), 0x01)\n          dup3\n          calldataload\n          dup2\n          dup2\n          and\n          swap4\n          swap1\n          dup5\n          swap1\n          sub\n          tag_19\n          jumpi\n          0x24\n          swap2\n          dup3\n          calldataload\n          swap1\n          dup2\n          and\n          dup1\n          swap2\n          sub\n          tag_19\n          jumpi\n          0xffffffffffffffff\n          swap1\n          calldataload(0x44)\n          dup3\n          dup2\n          gt\n          tag_19\n          jumpi\n          calldatasize\n          0x23\n          dup3\n          add\n          slt\n          iszero\n          tag_19\n          jumpi\n          dup1\n          dup5\n          add\n          calldataload\n          dup4\n          dup2\n          gt\n          tag_41\n          jumpi\n          dup7\n          mload\n          swap2\n          0x1f\n          dup3\n          add\n          not(0x1f)\n          swap1\n          dup2\n          and\n          0x3f\n          add\n          and\n          dup4\n          add\n          dup6\n          dup2\n          gt\n          dup5\n          dup3\n          lt\n          or\n          tag_43\n          jumpi\n          dup9\n          mstore\n          dup2\n          dup4\n          mstore\n          calldatasize\n          dup8\n          dup4\n          dup4\n          add\n          add\n          gt\n          tag_19\n          jumpi\n          dup2\n          0x00\n          swap3\n          dup9\n          0x20\n          swap4\n          add\n          dup4\n          dup7\n          add\n          calldatacopy\n          dup4\n          add\n          add\n          mstore\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n          tag_47\n          tag_2\n          jump\t// in\n        tag_47:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          dup7\n          extcodesize\n          iszero\n          tag_19\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          tag_50\n          swap7\n          0x00\n          swap3\n          dup8\n          mload\n          dup1\n          swap10\n          dup2\n          swap5\n          dup3\n          swap4\n          shl(0xe1, 0x278f7943)\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          dup5\n          mstore\n          dup10\n          dup5\n          add\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          mstore\n          dup11\n          dup11\n          dup5\n          add\n          mstore\n          0x44\n          dup4\n          add\n          swap1\n          tag_1\n          jump\t// in\n        tag_50:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          sub\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1903:1912  msg.value */\n          swap2\n          callvalue\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          swap1\n          gas\n          call\n          dup1\n          iszero\n          tag_51\n          jumpi\n          tag_53\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          dup6\n          dup1\n          return\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n        tag_53:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          swap1\n          swap2\n          swap3\n          swap4\n          dup1\n          swap6\n          pop\n          gt\n          tag_55\n          jumpi\n          pop\n          pop\n          mstore\n          stop\n        tag_55:\n          0x41\n          swap1\n          mstore(0x00, shl(0xe0, 0x4e487b71))\n          mstore\n          0x00\n          revert\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":1873:1935  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n        tag_51:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          dup5\n          mload\n          returndatasize\n          0x00\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n        tag_43:\n          dup8\n          0x41\n          dup9\n          mstore(0x00, shl(0xe0, 0x4e487b71))\n          mstore\n          0x00\n          revert\n        tag_41:\n          dup6\n          0x41\n          dup7\n          mstore(0x00, shl(0xe0, 0x4e487b71))\n          mstore\n          0x00\n          revert\n        tag_7:\n          pop\n          jumpi(tag_19, callvalue)\n          jumpi(tag_19, slt(add(not(0x03), calldatasize), 0x00))\n          sload(0x00)\n          swap1\n          mload\n          sub(shl(0xa0, 0x01), 0x01)\n          swap1\n          swap2\n          and\n          dup2\n          mstore\n          0x20\n          swap1\n          return\n        tag_5:\n          jumpi(tag_19, callvalue)\n          jumpi(tag_19, slt(add(not(0x03), calldatasize), 0x00))\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n          tag_65\n          tag_2\n          jump\t// in\n        tag_65:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          0x00\n          dup1\n          sload\n          not(sub(shl(0xa0, 0x01), 0x01))\n          dup2\n          and\n          dup3\n          sstore\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          dup3\n          dup1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          log3\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          stop\n        tag_1:\n          swap2\n          swap1\n          dup3\n          mload\n          swap3\n          dup4\n          dup3\n          mstore\n          0x00\n        tag_66:\n          dup5\n          dup2\n          lt\n          tag_67\n          jumpi\n          pop\n          pop\n          dup3\n          0x00\n          0x20\n          dup1\n          swap5\n          swap6\n          dup5\n          add\n          add\n          mstore\n          0x1f\n          dup1\n          not\n          swap2\n          add\n          and\n          add\n          add\n          swap1\n          jump\t// out\n        tag_67:\n          0x20\n          dup2\n          dup4\n          add\n          dup2\n          add\n          mload\n          dup5\n          dup4\n          add\n          dup3\n          add\n          mstore\n          add\n          jump(tag_66)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n        tag_2:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          0x00\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          sload\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n          sub\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n          tag_69\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n          jump\t// out\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n        tag_69:\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          mload(0x40)\n          shl(0xe0, 0x118cdaa7)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          0x04\n          dup3\n          add\n            /* \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":502:1944  contract ProxyAdmin is Ownable {... */\n          mstore\n          0x24\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          revert\n\n        auxdata: 0xa26469706673582212202511997dc6977dafd72956e9ad133465f75b5af624a4699435908ab7ae2c83ec64736f6c63430008180033\n    }\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 743,
									"id": 950,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "604060a081523461028f57610aea8038038061001a81610293565b92833981019060608183031261028f57610033816102b8565b916020916100428382016102b8565b918582015160018060401b039283821161028f570181601f8201121561028f57805190610076610071836102cc565b610293565b9282845286838301011161028f5785905f5b83811061027b5750505f9183010152843b1561025b577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b038781166001600160a01b0319928316811790935590969092917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2815191869083156102525761013f935f92839201845af43d1561024a573d91610131610071846102cc565b9283523d5f8985013e6102e7565b505b85519461048395868101818110858211176102155781879185610667988b8a85391681520301905ff0801561024057821690816080527fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103927f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f8985549281519084168152858a820152a1821561022957161790558451938085019182118583101761021557849283393381520301905ff01561020c575161031c908161034b823960805181600f0152f35b513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b8851633173bdd160e11b81525f6004820152602490fd5b87513d5f823e3d90fd5b6060916102e7565b50505050610141565b8551634c9c8ce360e01b81526001600160a01b0386166004820152602490fd5b818101830151858201840152879201610088565b5f80fd5b6040519190601f01601f191682016001600160401b0381118382101761021557604052565b51906001600160a01b038216820361028f57565b6001600160401b03811161021557601f01601f191660200190565b9061030e57508051156102fc57805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580610341575b61031f575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561031756fe60806040526001600160a01b03337f000000000000000000000000000000000000000000000000000000000000000082160361006a575f356001600160e01b03191663278f794360e11b14610060576040516334ad5dbb60e21b8152600490fd5b610068610105565b005b5f80917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416368280378136915af43d5f803e156100a6573d5ff35b3d5ffd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176100e457604052565b6100aa565b67ffffffffffffffff81116100e457601f01601f191660200190565b3660041161018e57604036600319011261018e576004356001600160a01b0381169081900361018e576024359067ffffffffffffffff821161018e573660238301121561018e5781600401359061016361015e836100e9565b6100be565b91808352366024828601011161018e576020815f92602461018c97018387013784010152610192565b565b5f80fd5b90813b15610229577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a280511561020e5761020b9161024a565b50565b50503461021757565b60405163b398979f60e01b8152600490fd5b604051634c9c8ce360e01b81526001600160a01b0383166004820152602490fd5b5f8061027c93602081519101845af43d1561027f573d9161026d61015e846100e9565b9283523d5f602085013e610283565b90565b6060915b906102aa575080511561029857805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806102dd575b6102bb575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b156102b356fea2646970667358221220db1acf395fbc61e305b72a38a62a75c28805dc7b81511dfcc1c892a9f746d14964736f6c634300081800336080346100b957601f61048338819003918201601f19168301916001600160401b038311848410176100bd578084926020946040528339810103126100b957516001600160a01b0390818116908190036100b95780156100a1575f80546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36103b190816100d28239f35b604051631e4fbdf760e01b81525f6004820152602490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe604060808152600480361015610013575f80fd5b5f915f3560e01c8063715018a6146102bb5780638da5cb5b146102945780639623609d1461015c578063ad3cb1cc146100eb5763f2fde38b14610054575f80fd5b346100e75760203660031901126100e7576001600160a01b038235818116939192908490036100e357610085610350565b83156100cd5750505f54826bffffffffffffffffffffffff60a01b8216175f55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a380f35b51631e4fbdf760e01b8152908101849052602490fd5b5f80fd5b8280fd5b5082346101595780600319360112610159575080519080820182811067ffffffffffffffff821117610146576101429350815260058252640352e302e360dc1b602083015251918291602083526020830190610312565b0390f35b604184634e487b7160e01b5f525260245ffd5b80fd5b5060603660031901126100e3576001600160a01b03823581811693908490036100e35760249182359081168091036100e35767ffffffffffffffff906044358281116100e357366023820112156100e3578084013583811161028257865191601f8201601f19908116603f0116830185811184821017610270578852818352368783830101116100e357815f92886020930183860137830101526101fe610350565b863b156100e357610230965f92875180998194829363278f794360e11b8452898401528a8a8401526044830190610312565b039134905af1801561026657610244578580f35b909192938095501161025557505052005b604190634e487b7160e01b5f52525ffd5b84513d5f823e3d90fd5b87604188634e487b7160e01b5f52525ffd5b85604186634e487b7160e01b5f52525ffd5b50346100e3575f3660031901126100e3575f5490516001600160a01b039091168152602090f35b346100e3575f3660031901126100e3576102d3610350565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b91908251928382525f5b84811061033c575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161031c565b5f546001600160a01b0316330361036357565b60405163118cdaa760e01b8152336004820152602490fdfea26469706673582212202511997dc6977dafd72956e9ad133465f75b5af624a4699435908ab7ae2c83ec64736f6c63430008180033",
							"opcodes": "PUSH1 0x40 PUSH1 0xA0 DUP2 MSTORE CALLVALUE PUSH2 0x28F JUMPI PUSH2 0xAEA DUP1 CODESIZE SUB DUP1 PUSH2 0x1A DUP2 PUSH2 0x293 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x60 DUP2 DUP4 SUB SLT PUSH2 0x28F JUMPI PUSH2 0x33 DUP2 PUSH2 0x2B8 JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x42 DUP4 DUP3 ADD PUSH2 0x2B8 JUMP JUMPDEST SWAP2 DUP6 DUP3 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0x28F JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x28F JUMPI DUP1 MLOAD SWAP1 PUSH2 0x76 PUSH2 0x71 DUP4 PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE DUP7 DUP4 DUP4 ADD ADD GT PUSH2 0x28F JUMPI DUP6 SWAP1 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x27B JUMPI POP POP PUSH0 SWAP2 DUP4 ADD ADD MSTORE DUP5 EXTCODESIZE ISZERO PUSH2 0x25B JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE SWAP1 SWAP7 SWAP1 SWAP3 SWAP2 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP2 MLOAD SWAP2 DUP7 SWAP1 DUP4 ISZERO PUSH2 0x252 JUMPI PUSH2 0x13F SWAP4 PUSH0 SWAP3 DUP4 SWAP3 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x24A JUMPI RETURNDATASIZE SWAP2 PUSH2 0x131 PUSH2 0x71 DUP5 PUSH2 0x2CC JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH0 DUP10 DUP6 ADD RETURNDATACOPY PUSH2 0x2E7 JUMP JUMPDEST POP JUMPDEST DUP6 MLOAD SWAP5 PUSH2 0x483 SWAP6 DUP7 DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR PUSH2 0x215 JUMPI DUP2 DUP8 SWAP2 DUP6 PUSH2 0x667 SWAP9 DUP12 DUP11 DUP6 CODECOPY AND DUP2 MSTORE SUB ADD SWAP1 PUSH0 CREATE DUP1 ISZERO PUSH2 0x240 JUMPI DUP3 AND SWAP1 DUP2 PUSH1 0x80 MSTORE PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP3 PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F DUP10 DUP6 SLOAD SWAP3 DUP2 MLOAD SWAP1 DUP5 AND DUP2 MSTORE DUP6 DUP11 DUP3 ADD MSTORE LOG1 DUP3 ISZERO PUSH2 0x229 JUMPI AND OR SWAP1 SSTORE DUP5 MLOAD SWAP4 DUP1 DUP6 ADD SWAP2 DUP3 GT DUP6 DUP4 LT OR PUSH2 0x215 JUMPI DUP5 SWAP3 DUP4 CODECOPY CALLER DUP2 MSTORE SUB ADD SWAP1 PUSH0 CREATE ISZERO PUSH2 0x20C JUMPI MLOAD PUSH2 0x31C SWAP1 DUP2 PUSH2 0x34B DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH1 0xF ADD MSTORE RETURN JUMPDEST MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP9 MLOAD PUSH4 0x3173BDD1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x2E7 JUMP JUMPDEST POP POP POP POP PUSH2 0x141 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD DUP5 ADD MSTORE DUP8 SWAP3 ADD PUSH2 0x88 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x215 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x28F JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x215 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x30E JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2FC JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x341 JUMPI JUMPDEST PUSH2 0x31F JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x317 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER PUSH32 0x0 DUP3 AND SUB PUSH2 0x6A JUMPI PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ PUSH2 0x60 JUMPI PUSH1 0x40 MLOAD PUSH4 0x34AD5DBB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x68 PUSH2 0x105 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SWAP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH2 0xA6 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0xE4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xAA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE4 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x18E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x18E JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18E JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x18E JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x163 PUSH2 0x15E DUP4 PUSH2 0xE9 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP7 ADD ADD GT PUSH2 0x18E JUMPI PUSH1 0x20 DUP2 PUSH0 SWAP3 PUSH1 0x24 PUSH2 0x18C SWAP8 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x192 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x229 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x20E JUMPI PUSH2 0x20B SWAP2 PUSH2 0x24A JUMP JUMPDEST POP JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x217 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x27C SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x27F JUMPI RETURNDATASIZE SWAP2 PUSH2 0x26D PUSH2 0x15E DUP5 PUSH2 0xE9 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x283 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP2 JUMPDEST SWAP1 PUSH2 0x2AA JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x298 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2DD JUMPI JUMPDEST PUSH2 0x2BB JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2B3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB BYTE 0xCF CODECOPY PUSH0 0xBC PUSH2 0xE305 0xB7 0x2A CODESIZE 0xA6 0x2A PUSH22 0xC28805DC7B81511DFCC1C892A9F746D14964736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER PUSH1 0x80 CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x1F PUSH2 0x483 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xBD JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xB9 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xB9 JUMPI DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP4 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x3B1 SWAP1 DUP2 PUSH2 0xD2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xEB JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0xE3 JUMPI PUSH2 0x85 PUSH2 0x350 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xCD JUMPI POP POP PUSH0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x159 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x159 JUMPI POP DUP1 MLOAD SWAP1 DUP1 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x146 JUMPI PUSH2 0x142 SWAP4 POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x312 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x41 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0xE3 JUMPI PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP1 DUP2 AND DUP1 SWAP2 SUB PUSH2 0xE3 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xE3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xE3 JUMPI DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT PUSH2 0x282 JUMPI DUP7 MLOAD SWAP2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP4 ADD DUP6 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x270 JUMPI DUP9 MSTORE DUP2 DUP4 MSTORE CALLDATASIZE DUP8 DUP4 DUP4 ADD ADD GT PUSH2 0xE3 JUMPI DUP2 PUSH0 SWAP3 DUP9 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1FE PUSH2 0x350 JUMP JUMPDEST DUP7 EXTCODESIZE ISZERO PUSH2 0xE3 JUMPI PUSH2 0x230 SWAP7 PUSH0 SWAP3 DUP8 MLOAD DUP1 SWAP10 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE DUP10 DUP5 ADD MSTORE DUP11 DUP11 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x312 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x266 JUMPI PUSH2 0x244 JUMPI DUP6 DUP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP1 SWAP6 POP GT PUSH2 0x255 JUMPI POP POP MSTORE STOP JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x41 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH2 0x2D3 PUSH2 0x350 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH0 JUMPDEST DUP5 DUP2 LT PUSH2 0x33C JUMPI POP POP DUP3 PUSH0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x31C JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x363 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 GT SWAP10 PUSH30 0xC6977DAFD72956E9AD133465F75B5AF624A4699435908AB7AE2C83EC6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "350:236:11:-:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;350:236:11;;;;;;;;-1:-1:-1;350:236:11;;;;;2263:29:3;;:34;2259:119;;1327:66;350:236:11;;-1:-1:-1;;;;;350:236:11;;;-1:-1:-1;;;;;;350:236:11;;;;;;;;;;;;;2922:27:3;-1:-1:-1;;2922:27:3;350:236:11;;;;;2964:15:3;;350:236:11;;4297:55:8;350:236:11;-1:-1:-1;350:236:11;;;;4255:25:8;;;350:236:11;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;350:236:11;;;;4297:55:8;:::i;:::-;;2960:148:3;350:236:11;;5121:28:7;;;;;;;;;;;;;;;;;;;;;;;;;350:236:11;;;5121:28:7;;;-1:-1:-1;5121:28:7;;;;;350:236:11;;5104:46:7;;;;3374:66:3;;4394:34;3374:66;;;350:236:11;;;;;;;;;;;;;4394:34:3;4053:22;;4049:91;;350:236:11;;;;;;;551:26;;;;;;;;;;;;;;;;566:10;350:236;;551:26;;;-1:-1:-1;551:26:11;;;;350:236;;;;;;;5104:46:7;350:236:11;;;;;;551:26;350:236;;-1:-1:-1;350:236:11;;;;;551:26;350:236;;;-1:-1:-1;350:236:11;;;;;-1:-1:-1;350:236:11;4049:91:3;350:236:11;;-1:-1:-1;;;4098:31:3;;-1:-1:-1;4098:31:3;;;350:236:11;;;4098:31:3;5121:28:7;350:236:11;;;-1:-1:-1;350:236:11;;;;;;;;4297:55:8;:::i;2960:148:3:-;;;;;;;2259:119;350:236:11;;-1:-1:-1;;;2320:47:3;;-1:-1:-1;;;;;350:236:11;;2320:47:3;;;350:236:11;;;2320:47:3;350:236:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;350:236:11;;;;;;;;;-1:-1:-1;;350:236:11;;;-1:-1:-1;;;;;350:236:11;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;350:236:11;;;;;;:::o;:::-;-1:-1:-1;;;;;350:236:11;;;;;;-1:-1:-1;;350:236:11;;;;:::o;4625:582:8:-;;4797:8;;-1:-1:-1;350:236:11;;5874:21:8;:17;;6046:142;;;;;;5870:383;350:236:11;;-1:-1:-1;;;6225:17:8;;;;;4793:408;350:236:11;;5045:22:8;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;350:236:11;;-1:-1:-1;;;5121:24:8;;-1:-1:-1;;;;;350:236:11;;;5121:24:8;;;350:236:11;;;5121:24:8;5045:49;5071:18;;;:23;5045:49;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeToAndCall": {
									"entryPoint": 261,
									"id": 737,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_functionDelegateCall": {
									"entryPoint": 586,
									"id": 910,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_upgradeToAndCall": {
									"entryPoint": 402,
									"id": 328,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 643,
									"id": 950,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"629": [
									{
										"length": 32,
										"start": 15
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526001600160a01b03337f000000000000000000000000000000000000000000000000000000000000000082160361006a575f356001600160e01b03191663278f794360e11b14610060576040516334ad5dbb60e21b8152600490fd5b610068610105565b005b5f80917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416368280378136915af43d5f803e156100a6573d5ff35b3d5ffd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176100e457604052565b6100aa565b67ffffffffffffffff81116100e457601f01601f191660200190565b3660041161018e57604036600319011261018e576004356001600160a01b0381169081900361018e576024359067ffffffffffffffff821161018e573660238301121561018e5781600401359061016361015e836100e9565b6100be565b91808352366024828601011161018e576020815f92602461018c97018387013784010152610192565b565b5f80fd5b90813b15610229577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a280511561020e5761020b9161024a565b50565b50503461021757565b60405163b398979f60e01b8152600490fd5b604051634c9c8ce360e01b81526001600160a01b0383166004820152602490fd5b5f8061027c93602081519101845af43d1561027f573d9161026d61015e846100e9565b9283523d5f602085013e610283565b90565b6060915b906102aa575080511561029857805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806102dd575b6102bb575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b156102b356fea2646970667358221220db1acf395fbc61e305b72a38a62a75c28805dc7b81511dfcc1c892a9f746d14964736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER PUSH32 0x0 DUP3 AND SUB PUSH2 0x6A JUMPI PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ PUSH2 0x60 JUMPI PUSH1 0x40 MLOAD PUSH4 0x34AD5DBB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x68 PUSH2 0x105 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SWAP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH2 0xA6 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0xE4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xAA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE4 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x18E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x18E JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18E JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x18E JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x163 PUSH2 0x15E DUP4 PUSH2 0xE9 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP7 ADD ADD GT PUSH2 0x18E JUMPI PUSH1 0x20 DUP2 PUSH0 SWAP3 PUSH1 0x24 PUSH2 0x18C SWAP8 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x192 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x229 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x20E JUMPI PUSH2 0x20B SWAP2 PUSH2 0x24A JUMP JUMPDEST POP JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x217 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x27C SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x27F JUMPI RETURNDATASIZE SWAP2 PUSH2 0x26D PUSH2 0x15E DUP5 PUSH2 0xE9 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x283 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP2 JUMPDEST SWAP1 PUSH2 0x2AA JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x298 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2DD JUMPI JUMPDEST PUSH2 0x2BB JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2B3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB BYTE 0xCF CODECOPY PUSH0 0xBC PUSH2 0xE305 0xB7 0x2A CODESIZE 0xA6 0x2A PUSH22 0xC28805DC7B81511DFCC1C892A9F746D14964736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "350:236:11:-:0;;;-1:-1:-1;;;;;5642:10:7;5426:6;350:236:11;;5642:27:7;350:236:11;;5689:7:7;;-1:-1:-1;;;;;;5689:7:7;-1:-1:-1;;;5689:65:7;5700:54;;350:236:11;;-1:-1:-1;;;5781:24:7;;;;;5685:201;;;:::i;:::-;350:236:11;5638:306:7;-1:-1:-1;1327:66:3;;;;350:236:11;1019:819:4;;;;;;;;;;-1:-1:-1;1019:819:4;;;;;;-1:-1:-1;1019:819:4;;;-1:-1:-1;1019:819:4;350:236:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;350:236:11;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;;350:236:11;;;;:::o;6152:217:7:-;6267:8;6276:1;350:236:11;;;;6267:8:7;-1:-1:-1;;350:236:11;;;;6276:1:7;350:236:11;-1:-1:-1;;;;;350:236:11;;;;;;;;;;;;;;;;6267:8:7;350:236:11;;;;;;;;6276:1:7;350:236:11;;;;;;;:::i;:::-;;:::i;:::-;;;;;6267:8:7;350:236:11;;;;;;;;;;6267:8:7;350:236:11;;6357:4:7;350:236:11;;;;;;;;;;6357:4:7;:::i;:::-;6152:217::o;350:236:11:-;6267:8:7;350:236:11;;2779:335:3;;2263:29;;:34;2259:119;;1327:66;350:236:11;;-1:-1:-1;;;;;;350:236:11;-1:-1:-1;;;;;350:236:11;;;;;;;;2922:27:3;-1:-1:-1;;2922:27:3;350:236:11;;2964:15:3;:11;;2995:53;;;:::i;:::-;;2779:335::o;2960:148::-;6648:9;;;6644:70;;2779:335::o;6644:70::-;350:236:11;;-1:-1:-1;;;6684:19:3;;;;;2259:119;350:236:11;;-1:-1:-1;;;2320:47:3;;-1:-1:-1;;;;;350:236:11;;2320:47:3;;;350:236:11;;;2320:47:3;4106:253:8;4255:25;4106:253;4297:55;4106:253;4255:25;;;;;;;;350:236:11;;;;;;;;;;:::i;:::-;;;;;4255:25:8;;350:236:11;;;4297:55:8;:::i;:::-;4106:253;:::o;350:236:11:-;;;4625:582:8;;4797:8;;-1:-1:-1;350:236:11;;5874:21:8;:17;;6046:142;;;;;;5870:383;350:236:11;;-1:-1:-1;;;6225:17:8;;;;;4793:408;350:236:11;;5045:22:8;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;350:236:11;;-1:-1:-1;;;5121:24:8;;-1:-1:-1;;;;;350:236:11;;;5121:24:8;;;350:236:11;;;5121:24:8;5045:49;5071:18;;;:23;5045:49;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "159200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 350,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 350,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 350,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 350,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 350,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "POP",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2263,
									"end": 2292,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2263,
									"end": 2292,
									"name": "EXTCODESIZE",
									"source": 3
								},
								{
									"begin": 2263,
									"end": 2297,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1327,
									"end": 1393,
									"name": "PUSH",
									"source": 3,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "AND",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP7",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "PUSH",
									"source": 3,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "LOG2",
									"source": 3
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2964,
									"end": 2979,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2964,
									"end": 2979,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "GAS",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DELEGATECALL",
									"source": 8
								},
								{
									"begin": 350,
									"end": 586,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 350,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "RETURNDATACOPY",
									"source": 11
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4297,
									"end": 4352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 350,
									"end": 586,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "CREATE",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5104,
									"end": 5150,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5104,
									"end": 5150,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5104,
									"end": 5150,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 5104,
									"end": 5150,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3374,
									"end": 3440,
									"name": "PUSH",
									"source": 3,
									"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
								},
								{
									"begin": 3374,
									"end": 3440,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4394,
									"end": 4428,
									"name": "PUSH",
									"source": 3,
									"value": "7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F"
								},
								{
									"begin": 3374,
									"end": 3440,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 3374,
									"end": 3440,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3374,
									"end": 3440,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP11",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4394,
									"end": 4428,
									"name": "LOG1",
									"source": 3
								},
								{
									"begin": 4053,
									"end": 4075,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4053,
									"end": 4075,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4049,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 4049,
									"end": 4140,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 350,
									"end": 586,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 551,
									"end": 577,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 566,
									"end": 576,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 551,
									"end": 577,
									"name": "CREATE",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 551,
									"end": 577,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 5104,
									"end": 5150,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "629"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "RETURN",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 551,
									"end": 577,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "RETURNDATACOPY",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 551,
									"end": 577,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 551,
									"end": 577,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 4049,
									"end": 4140,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 4049,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3173BDD1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4098,
									"end": 4129,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4098,
									"end": 4129,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4098,
									"end": 4129,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 4098,
									"end": 4129,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4098,
									"end": 4129,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4098,
									"end": 4129,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 5121,
									"end": 5149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "RETURNDATACOPY",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4297,
									"end": 4352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C9C8CE3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 350,
									"end": 586,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 350,
									"end": 586,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4797,
									"end": 4805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 4797,
									"end": 4805,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5895,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5874,
									"end": 5891,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5874,
									"end": 5891,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6188,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A12F521"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 350,
									"end": 586,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5045,
									"end": 5067,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9996B315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 350,
									"end": 586,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 350,
									"end": 586,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 350,
									"end": 586,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "EXTCODESIZE",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5094,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMP",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db1acf395fbc61e305b72a38a62a75c28805dc7b81511dfcc1c892a9f746d14964736f6c63430008180033",
									".code": [
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5642,
											"end": 5652,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5426,
											"end": 5432,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "629"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5689,
											"end": 5696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5696,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5689,
											"end": 5696,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "278F7943"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5689,
											"end": 5754,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 5700,
											"end": 5754,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34AD5DBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5781,
											"end": 5805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5805,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5805,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5781,
											"end": 5805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5805,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5886,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 5685,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5685,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5685,
											"end": 5886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5886,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5685,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 350,
											"end": 586,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5944,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5638,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 350,
											"end": 586,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1838,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 350,
											"end": 586,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 350,
											"end": 586,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 350,
											"end": 586,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6152,
											"end": 6369,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6152,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6276,
											"end": 6277,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6277,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6277,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 350,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6357,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6357,
											"end": 6361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6357,
											"end": 6361,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 6357,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6152,
											"end": 6369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 350,
											"end": 586,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 350,
											"end": 586,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 3,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 3114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 3114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 350,
											"end": 586,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 350,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 350,
											"end": 586,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4797,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4797,
											"end": 4805,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 350,
											"end": 586,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 350,
											"end": 586,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 350,
											"end": 586,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 350,
											"end": 586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMP",
											"source": 8
										}
									]
								},
								"1": {
									".code": [
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSHSIZE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CODESIZE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH #[$]",
											"source": 6,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH [$]",
											"source": 6,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1944,
											"name": "REVERT",
											"source": 6
										}
									],
									".data": {
										"0": {
											".auxdata": "a26469706673582212202511997dc6977dafd72956e9ad133465f75b5af624a4699435908ab7ae2c83ec64736f6c63430008180033",
											".code": [
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "80"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "3"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "3"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHR",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "715018A6"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "5"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "8DA5CB5B"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "7"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "9623609D"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "9"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "AD3CB1CC"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "11"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "F2FDE38B"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "13"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "13"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLVALUE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "17"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "17"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "21"
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 1500,
													"end": 1562,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "tag",
													"source": 0,
													"value": "21"
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2627,
													"end": 2649,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 2627,
													"end": 2649,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 2623,
													"end": 2714,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "22"
												},
												{
													"begin": 2623,
													"end": 2714,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "A0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "OR",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "LOG3",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURN",
													"source": 6
												},
												{
													"begin": 2623,
													"end": 2714,
													"name": "tag",
													"source": 0,
													"value": "22"
												},
												{
													"begin": 2623,
													"end": 2714,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1E4FBDF7"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "17"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "11"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLVALUE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "26"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "3"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "NOT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "26"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "OR",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "28"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "30"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "5"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "352E302E3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "DC"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 502,
													"end": 1944,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "30"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURN",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "28"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "4E487B71"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "26"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "9"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "60"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "44"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "23"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP7",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "3F"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "OR",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "43"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP9",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP9",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP7",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATACOPY",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "47"
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 1500,
													"end": 1562,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "tag",
													"source": 0,
													"value": "47"
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "DUP7",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "EXTCODESIZE",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "50"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP7",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP10",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "278F7943"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "E1"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "DUP10",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP11",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP11",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "44"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 502,
													"end": 1944,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "50"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 1903,
													"end": 1912,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 1903,
													"end": 1912,
													"name": "CALLVALUE",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "GAS",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "CALL",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "51"
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "53"
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURN",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "tag",
													"source": 6,
													"value": "53"
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP6",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "55"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "STOP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "55"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "4E487B71"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "tag",
													"source": 6,
													"value": "51"
												},
												{
													"begin": 1873,
													"end": 1935,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURNDATASIZE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURNDATACOPY",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURNDATASIZE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "43"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP9",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "4E487B71"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP7",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "4E487B71"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "7"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLVALUE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "RETURN",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "5"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLVALUE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "65"
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 1500,
													"end": 1562,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "tag",
													"source": 0,
													"value": "65"
												},
												{
													"begin": 1500,
													"end": 1562,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SSTORE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "LOG3",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "STOP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "66"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "67"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP6",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "NOT",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "tag",
													"source": 6,
													"value": "67"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "66"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1796,
													"end": 1958,
													"name": "tag",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 1796,
													"end": 1958,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 9
												},
												{
													"begin": 1855,
													"end": 1878,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "69"
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1796,
													"end": 1958,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "tag",
													"source": 0,
													"value": "69"
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "118CDAA7"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 9
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 502,
													"end": 1944,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "REVERT",
													"source": 0
												}
											]
										}
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
								"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProxyDeniedAdminAccess\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ProxyDeniedAdminAccess()\":[{\"details\":\"The proxy caller is the current admin, and can't fallback to the proxy target.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy.sol\":\"QuailFinanceProxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xbc9babed4d136e6cc1e74354aa66538a234f3808645fbe30463b4a7b7d8ca789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fd9323b206da2a87924fca2ca996dbd04ae0963f79f66fb8a0ef94bf283a3d\",\"dweb:/ipfs/QmYSoLcvpq8gRo8doLP4nnB43UAT1D3KvfFJRDSD2y4nYu\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"contracts/proxy.sol\":{\"keccak256\":\"0x7a9c43934c2f51d949895bf979a1314290e52013dc5a33f6aa9f0f2564b0d6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31eb8a7c22f3a9eedcd2df7f7acb070206fdf92123720340402032af213bb4bb\",\"dweb:/ipfs/QmNqG3dEGoPZLuRXcpBE6vvvhwdTSHVRNFD6Y8VTqV3ADX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1021
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1022,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1021,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1021,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1021
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1003,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							168
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:1",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "IERC1967",
							"nameLocation": "245:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:1",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 155,
									"name": "Upgraded",
									"nameLocation": "339:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "348:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:1"
									},
									"src": "333:47:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:1",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 162,
									"name": "AdminChanged",
									"nameLocation": "464:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "477:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "500:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:1"
									},
									"src": "458:60:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:1",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 167,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "609:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:1"
									},
									"src": "588:45:1"
								}
							],
							"scope": 169,
							"src": "235:400:1",
							"usedErrors": [],
							"usedEvents": [
								155,
								162,
								167
							]
						}
					],
					"src": "107:529:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
					"exportedSymbols": {
						"ERC1967Proxy": [
							206
						],
						"ERC1967Utils": [
							509
						],
						"Proxy": [
							545
						]
					},
					"id": 207,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
							"file": "../Proxy.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 207,
							"sourceUnit": 546,
							"src": "140:35:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 545,
										"src": "148:5:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "./ERC1967Utils.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 207,
							"sourceUnit": 510,
							"src": "176:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 509,
										"src": "184:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 176,
										"name": "Proxy",
										"nameLocations": [
											"624:5:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 545,
										"src": "624:5:2"
									},
									"id": 177,
									"nodeType": "InheritanceSpecifier",
									"src": "624:5:2"
								}
							],
							"canonicalName": "ERC1967Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 175,
								"nodeType": "StructuredDocumentation",
								"src": "226:372:2",
								"text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
							},
							"fullyImplemented": true,
							"id": 206,
							"linearizedBaseContracts": [
								206,
								545
							],
							"name": "ERC1967Proxy",
							"nameLocation": "608:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1144:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 188,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "1184:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "1200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 185,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1154:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$509_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1167:16:2",
														"memberName": "upgradeToAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 328,
														"src": "1154:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1154:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "1154:52:2"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "636:439:2",
										"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."
									},
									"id": 193,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1100:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1092:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1129:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1116:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1116:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:44:2"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:0:2"
									},
									"scope": 206,
									"src": "1080:133:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										526
									],
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1657:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 200,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1674:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$509_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1687:17:2",
														"memberName": "getImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 267,
														"src": "1674:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1674:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "1667:39:2"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1219:357:2",
										"text": " @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1590:15:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 196,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1630:8:2"
									},
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1605:2:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1648:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:9:2"
									},
									"scope": 206,
									"src": "1581:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 207,
							"src": "599:1116:2",
							"usedErrors": [
								241,
								254,
								751,
								754
							],
							"usedEvents": [
								220
							]
						}
					],
					"src": "114:1602:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							991
						],
						"ERC1967Utils": [
							509
						],
						"IBeacon": [
							555
						],
						"StorageSlot": [
							1131
						]
					},
					"id": 510,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 208,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 210,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 510,
							"sourceUnit": 556,
							"src": "140:46:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 209,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 555,
										"src": "148:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 212,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 510,
							"sourceUnit": 992,
							"src": "187:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 211,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 991,
										"src": "195:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 214,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 510,
							"sourceUnit": 1132,
							"src": "236:56:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 213,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1131,
										"src": "244:11:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:3",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 509,
							"linearizedBaseContracts": [
								509
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:3",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 220,
									"name": "Upgraded",
									"nameLocation": "739:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "748:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:3"
									},
									"src": "733:47:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:3",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 227,
									"name": "AdminChanged",
									"nameLocation": "864:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "877:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "900:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:3"
									},
									"src": "858:60:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:3",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 232,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1009:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:3"
									},
									"src": "988:45:3"
								},
								{
									"constant": true,
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:3",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 236,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 509,
									"src": "1279:114:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 234,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 235,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:3",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 241,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1509:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:3"
									},
									"src": "1474:59:3"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:3",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 246,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1630:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:3"
									},
									"src": "1604:41:3"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:3",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 251,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1744:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:3"
									},
									"src": "1717:43:3"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:3",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 254,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:3"
									},
									"src": "1853:26:3"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2018:77:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 262,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2062:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 260,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "2035:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1131_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1053,
															"src": "2035:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1027_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1027_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1026,
													"src": "2035:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 259,
												"id": 265,
												"nodeType": "Return",
												"src": "2028:60:3"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:3",
										"text": " @dev Returns the current implementation address."
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:3"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2009:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:3"
									},
									"scope": 509,
									"src": "1957:138:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2249:218:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 273,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "2263:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 283,
												"nodeType": "IfStatement",
												"src": "2259:119:3",
												"trueBody": {
													"id": 282,
													"nodeType": "Block",
													"src": "2299:79:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 279,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "2349:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 278,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "2320:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 281,
															"nodeType": "RevertStatement",
															"src": "2313:54:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 287,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "2414:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 284,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "2387:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1131_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1053,
																"src": "2387:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1027_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1027_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1026,
														"src": "2387:53:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 290,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "2443:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:3"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:3",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2214:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:3"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:3"
									},
									"scope": 509,
									"src": "2186:281:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2860:254:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 303,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "2889:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 302,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "2870:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 307,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "2931:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 306,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "2922:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "EmitStatement",
												"src": "2917:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 310,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2964:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 325,
													"nodeType": "Block",
													"src": "3065:43:3",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 322,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "3079:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 324,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:3"
														}
													]
												},
												"id": 326,
												"nodeType": "IfStatement",
												"src": "2960:148:3",
												"trueBody": {
													"id": 321,
													"nodeType": "Block",
													"src": "2981:78:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 317,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 297,
																		"src": "3024:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 318,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "3043:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 314,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "2995:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$991_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:3",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 910,
																	"src": "2995:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:3",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2805:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2832:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:3"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:3"
									},
									"scope": 509,
									"src": "2779:335:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:3",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 332,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 509,
									"src": "3335:105:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 330,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "3844:68:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 340,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "3888:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 338,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "3861:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1131_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1053,
															"src": "3861:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1027_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1027_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1026,
													"src": "3861:44:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 337,
												"id": 343,
												"nodeType": "Return",
												"src": "3854:51:3"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:3",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "3835:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:3"
									},
									"scope": 509,
									"src": "3792:120:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "4039:172:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 351,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "4053:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 352,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 365,
												"nodeType": "IfStatement",
												"src": "4049:91:3",
												"trueBody": {
													"id": 364,
													"nodeType": "Block",
													"src": "4077:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 358,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 357,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "4098:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 363,
															"nodeType": "RevertStatement",
															"src": "4091:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 369,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "4176:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 366,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "4149:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1131_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1053,
																"src": "4149:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1027_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1027_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1026,
														"src": "4149:44:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 372,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "4196:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:3"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:3",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "4013:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:3"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:3"
									},
									"scope": 509,
									"src": "3994:217:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "4379:85:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 383,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "4407:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "4419:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 382,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "4394:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "EmitStatement",
												"src": "4389:39:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 389,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "4448:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 388,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "4438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:3"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:3",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "4352:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:3"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:3"
									},
									"scope": 509,
									"src": "4331:133:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:3",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 397,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 509,
									"src": "4741:106:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 395,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 396,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "4963:69:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 405,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "5007:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 403,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "4980:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1131_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1053,
															"src": "4980:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1027_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1027_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1026,
													"src": "4980:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "4973:52:3"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:3",
										"text": " @dev Returns the current beacon."
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:3"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4954:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:3"
									},
									"scope": 509,
									"src": "4910:122:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "5161:390:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 416,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "5175:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 426,
												"nodeType": "IfStatement",
												"src": "5171:95:3",
												"trueBody": {
													"id": 425,
													"nodeType": "Block",
													"src": "5203:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 422,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "5245:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 421,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "5224:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 424,
															"nodeType": "RevertStatement",
															"src": "5217:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 430,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "5303:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 427,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "5276:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1131_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1053,
																"src": "5276:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1027_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1027_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1026,
														"src": "5276:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "5324:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:3"
											},
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:3",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "5344:28:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 439,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "5383:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 438,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "5375:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$555_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$555",
																"typeString": "contract IBeacon"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:3",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 554,
														"src": "5375:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 444,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5424:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "5420:125:3",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "5463:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 450,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5513:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 449,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "5484:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 452,
															"nodeType": "RevertStatement",
															"src": "5477:57:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:3",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "5134:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:3"
									},
									"scope": 509,
									"src": "5114:437:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "6155:254:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "6176:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 464,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "6165:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 469,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "6216:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 468,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "6201:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "EmitStatement",
												"src": "6196:30:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "6241:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6360:43:3",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 488,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "6374:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 490,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:3"
														}
													]
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "6237:166:3",
												"trueBody": {
													"id": 487,
													"nodeType": "Block",
													"src": "6258:96:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 480,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 459,
																						"src": "6309:9:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 479,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 555,
																					"src": "6301:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$555_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$555",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:3",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 554,
																			"src": "6301:33:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 484,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 461,
																		"src": "6338:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 476,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "6272:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$991_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:3",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 910,
																	"src": "6272:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 486,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:3",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "6108:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "6127:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:3"
									},
									"scope": 509,
									"src": "6076:333:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "6634:86:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 498,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "6644:70:3",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "6663:51:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 502,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "6684:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "6677:26:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:3",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:3"
									},
									"scope": 509,
									"src": "6598:122:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 510,
							"src": "449:6273:3",
							"usedErrors": [
								241,
								246,
								251,
								254
							],
							"usedEvents": [
								220,
								227,
								232
							]
						}
					],
					"src": "114:6609:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							545
						]
					},
					"id": 546,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 511,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 512,
								"nodeType": "StructuredDocumentation",
								"src": "125:598:4",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 545,
							"linearizedBaseContracts": [
								545
							],
							"name": "Proxy",
							"nameLocation": "742:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "1009:835:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1028:810:4",
													"nodeType": "YulBlock",
													"src": "1028:810:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1281:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1281:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1284:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1284:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1287:12:4",
																			"nodeType": "YulIdentifier",
																			"src": "1287:12:4"
																		},
																		"nativeSrc": "1287:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1287:14:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1268:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1268:12:4"
																},
																"nativeSrc": "1268:34:4",
																"nodeType": "YulFunctionCall",
																"src": "1268:34:4"
															},
															"nativeSrc": "1268:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "1268:34:4"
														},
														{
															"nativeSrc": "1429:74:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1429:74:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "1456:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:4"
																		},
																		"nativeSrc": "1456:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:5:4"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "1463:14:4",
																		"nodeType": "YulIdentifier",
																		"src": "1463:14:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1479:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1482:12:4",
																			"nodeType": "YulIdentifier",
																			"src": "1482:12:4"
																		},
																		"nativeSrc": "1482:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:14:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1498:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1501:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "1443:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1443:12:4"
																},
																"nativeSrc": "1443:60:4",
																"nodeType": "YulFunctionCall",
																"src": "1443:60:4"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "1433:6:4",
																	"nodeType": "YulTypedName",
																	"src": "1433:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1571:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1571:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1574:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "1577:14:4",
																			"nodeType": "YulIdentifier",
																			"src": "1577:14:4"
																		},
																		"nativeSrc": "1577:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:16:4"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1556:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "1556:14:4"
																},
																"nativeSrc": "1556:38:4",
																"nodeType": "YulFunctionCall",
																"src": "1556:38:4"
															},
															"nativeSrc": "1556:38:4",
															"nodeType": "YulExpressionStatement",
															"src": "1556:38:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1689:59:4",
																		"nodeType": "YulBlock",
																		"src": "1689:59:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1714:1:4",
																							"nodeType": "YulLiteral",
																							"src": "1714:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1717:14:4",
																								"nodeType": "YulIdentifier",
																								"src": "1717:14:4"
																							},
																							"nativeSrc": "1717:16:4",
																							"nodeType": "YulFunctionCall",
																							"src": "1717:16:4"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "1707:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1707:6:4"
																					},
																					"nativeSrc": "1707:27:4",
																					"nodeType": "YulFunctionCall",
																					"src": "1707:27:4"
																				},
																				"nativeSrc": "1707:27:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "1707:27:4"
																			}
																		]
																	},
																	"nativeSrc": "1682:66:4",
																	"nodeType": "YulCase",
																	"src": "1682:66:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1687:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:4",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1769:59:4",
																		"nodeType": "YulBlock",
																		"src": "1769:59:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1794:1:4",
																							"nodeType": "YulLiteral",
																							"src": "1794:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1797:14:4",
																								"nodeType": "YulIdentifier",
																								"src": "1797:14:4"
																							},
																							"nativeSrc": "1797:16:4",
																							"nodeType": "YulFunctionCall",
																							"src": "1797:16:4"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "1787:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1787:6:4"
																					},
																					"nativeSrc": "1787:27:4",
																					"nodeType": "YulFunctionCall",
																					"src": "1787:27:4"
																				},
																				"nativeSrc": "1787:27:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "1787:27:4"
																			}
																		]
																	},
																	"nativeSrc": "1761:67:4",
																	"nodeType": "YulCase",
																	"src": "1761:67:4",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "1615:6:4",
																"nodeType": "YulIdentifier",
																"src": "1615:6:4"
															},
															"nativeSrc": "1608:220:4",
															"nodeType": "YulSwitch",
															"src": "1608:220:4"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 515,
														"isOffset": false,
														"isSlot": false,
														"src": "1463:14:4",
														"valueSize": 1
													}
												],
												"id": 518,
												"nodeType": "InlineAssembly",
												"src": "1019:819:4"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "754:190:4",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "958:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "976:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "968:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:24:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:4"
									},
									"scope": 545,
									"src": "949:895:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "1850:173:4",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."
									},
									"id": 526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2037:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2052:2:4"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2086:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:9:4"
									},
									"scope": 545,
									"src": "2028:67:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2361:45:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 531,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2381:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2381:17:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "2371:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2371:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "2371:28:4"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "2101:217:4",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2332:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2341:2:4"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2361:0:4"
									},
									"scope": 545,
									"src": "2323:83:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "2639:28:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 540,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "2649:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:11:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "2649:11:4"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2412:186:4",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 544,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:2:4"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2639:0:4"
									},
									"scope": 545,
									"src": "2603:64:4",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 546,
							"src": "724:1945:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:2571:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							555
						]
					},
					"id": 556,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 547,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 548,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:5",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 555,
							"linearizedBaseContracts": [
								555
							],
							"name": "IBeacon",
							"nameLocation": "224:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:5",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:5"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "460:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:5"
									},
									"scope": 555,
									"src": "411:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 556,
							"src": "214:257:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
					"exportedSymbols": {
						"ITransparentUpgradeableProxy": [
							624
						],
						"Ownable": [
							147
						],
						"ProxyAdmin": [
							603
						]
					},
					"id": 604,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 557,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
							"file": "./TransparentUpgradeableProxy.sol",
							"id": 559,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 604,
							"sourceUnit": 739,
							"src": "142:79:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 558,
										"name": "ITransparentUpgradeableProxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 624,
										"src": "150:28:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "../../access/Ownable.sol",
							"id": 561,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 604,
							"sourceUnit": 148,
							"src": "222:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 560,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "230:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 563,
										"name": "Ownable",
										"nameLocations": [
											"525:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "525:7:6"
									},
									"id": 564,
									"nodeType": "InheritanceSpecifier",
									"src": "525:7:6"
								}
							],
							"canonicalName": "ProxyAdmin",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 562,
								"nodeType": "StructuredDocumentation",
								"src": "273:228:6",
								"text": " @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."
							},
							"fullyImplemented": true,
							"id": 603,
							"linearizedBaseContracts": [
								603,
								147,
								1021
							],
							"name": "ProxyAdmin",
							"nameLocation": "511:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "539:623:6",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address)`\n and `upgradeAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 568,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1190:25:6",
									"nodeType": "VariableDeclaration",
									"scope": 603,
									"src": "1167:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 566,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1167:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 567,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1218:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "1365:2:6",
										"statements": []
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1232:72:6",
										"text": " @dev Sets the initial owner who can perform upgrades."
									},
									"id": 578,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 574,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 571,
													"src": "1351:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 575,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 573,
												"name": "Ownable",
												"nameLocations": [
													"1343:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1343:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1343:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1329:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1321:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:22:6"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:0:6"
									},
									"scope": 603,
									"src": "1309:58:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "1863:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "1914:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "1930:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 591,
																"name": "proxy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "1873:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$624",
																	"typeString": "contract ITransparentUpgradeableProxy"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1879:16:6",
															"memberName": "upgradeToAndCall",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 623,
															"src": "1873:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																"typeString": "function (address,bytes memory) payable external"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 594,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1903:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1907:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1903:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1873:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$value",
															"typeString": "function (address,bytes memory) payable external"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "1873:62:6"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "1373:319:6",
										"text": " @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation.\n See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}.\n Requirements:\n - This contract must be the admin of `proxy`.\n - If `data` is empty, `msg.value` must be zero."
									},
									"functionSelector": "9623609d",
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 589,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 588,
												"name": "onlyOwner",
												"nameLocations": [
													"1853:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1853:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1853:9:6"
										}
									],
									"name": "upgradeAndCall",
									"nameLocation": "1706:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "proxy",
												"nameLocation": "1759:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "1730:34:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$624",
													"typeString": "contract ITransparentUpgradeableProxy"
												},
												"typeName": {
													"id": 581,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 580,
														"name": "ITransparentUpgradeableProxy",
														"nameLocations": [
															"1730:28:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 624,
														"src": "1730:28:6"
													},
													"referencedDeclaration": 624,
													"src": "1730:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$624",
														"typeString": "contract ITransparentUpgradeableProxy"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1782:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "1774:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1819:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "1806:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1806:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:109:6"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1863:0:6"
									},
									"scope": 603,
									"src": "1697:245:6",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 604,
							"src": "502:1442:6",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "116:1829:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
					"exportedSymbols": {
						"ERC1967Proxy": [
							206
						],
						"ERC1967Utils": [
							509
						],
						"IERC1967": [
							168
						],
						"ITransparentUpgradeableProxy": [
							624
						],
						"ProxyAdmin": [
							603
						],
						"TransparentUpgradeableProxy": [
							738
						]
					},
					"id": 739,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 605,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "133:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "../ERC1967/ERC1967Utils.sol",
							"id": 607,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 739,
							"sourceUnit": 510,
							"src": "159:57:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 606,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 509,
										"src": "167:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
							"file": "../ERC1967/ERC1967Proxy.sol",
							"id": 609,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 739,
							"sourceUnit": 207,
							"src": "217:57:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 608,
										"name": "ERC1967Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 206,
										"src": "225:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 611,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 739,
							"sourceUnit": 169,
							"src": "275:55:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 610,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 168,
										"src": "283:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
							"file": "./ProxyAdmin.sol",
							"id": 613,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 739,
							"sourceUnit": 604,
							"src": "331:44:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 612,
										"name": "ProxyAdmin",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 603,
										"src": "339:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 615,
										"name": "IERC1967",
										"nameLocations": [
											"865:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 168,
										"src": "865:8:7"
									},
									"id": 616,
									"nodeType": "InheritanceSpecifier",
									"src": "865:8:7"
								}
							],
							"canonicalName": "ITransparentUpgradeableProxy",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 614,
								"nodeType": "StructuredDocumentation",
								"src": "377:445:7",
								"text": " @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch\n mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n include them in the ABI so this interface must be used to interact with it."
							},
							"fullyImplemented": false,
							"id": 624,
							"linearizedBaseContracts": [
								624,
								168
							],
							"name": "ITransparentUpgradeableProxy",
							"nameLocation": "833:28:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4f1ef286",
									"id": 623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "889:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "906:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "915:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "915:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:25:7"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:0:7"
									},
									"scope": 624,
									"src": "880:68:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 739,
							"src": "823:127:7",
							"usedErrors": [],
							"usedEvents": [
								155,
								162,
								167
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 626,
										"name": "ERC1967Proxy",
										"nameLocations": [
											"4185:12:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 206,
										"src": "4185:12:7"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "4185:12:7"
								}
							],
							"canonicalName": "TransparentUpgradeableProxy",
							"contractDependencies": [
								603
							],
							"contractKind": "contract",
							"documentation": {
								"id": 625,
								"nodeType": "StructuredDocumentation",
								"src": "952:3192:7",
								"text": " @dev This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself.\n 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to\n the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating\n the proxy admin cannot fallback to the target implementation.\n These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a\n dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to\n call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and\n allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative\n interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership.\n NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch\n mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n implementation.\n NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a\n meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract.\n IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an\n immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be\n overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an\n undesirable state where the admin slot is different from the actual admin.\n WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the\n compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new\n function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This\n could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency."
							},
							"fullyImplemented": true,
							"id": 738,
							"linearizedBaseContracts": [
								738,
								206,
								545
							],
							"name": "TransparentUpgradeableProxy",
							"nameLocation": "4154:27:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 629,
									"mutability": "immutable",
									"name": "_admin",
									"nameLocation": "4565:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 738,
									"src": "4539:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 628,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4539:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "4578:102:7",
										"text": " @dev The proxy caller is the current admin, and can't fallback to the proxy target."
									},
									"errorSelector": "d2b576ec",
									"id": 632,
									"name": "ProxyDeniedAdminAccess",
									"nameLocation": "4691:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:2:7"
									},
									"src": "4685:31:7"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "5094:190:7",
										"statements": [
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 646,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "5104:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 652,
																		"name": "initialOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "5136:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "5121:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ProxyAdmin_$603_$",
																		"typeString": "function (address) returns (contract ProxyAdmin)"
																	},
																	"typeName": {
																		"id": 650,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 649,
																			"name": "ProxyAdmin",
																			"nameLocations": [
																				"5125:10:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 603,
																			"src": "5125:10:7"
																		},
																		"referencedDeclaration": 603,
																		"src": "5125:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ProxyAdmin_$603",
																			"typeString": "contract ProxyAdmin"
																		}
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5121:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ProxyAdmin_$603",
																	"typeString": "contract ProxyAdmin"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ProxyAdmin_$603",
																	"typeString": "contract ProxyAdmin"
																}
															],
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5113:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 647,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5113:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5113:37:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5104:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "5104:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 660,
																"name": "_proxyAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "5263:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
																	"typeString": "function () returns (address)"
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5263:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 657,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "5238:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$509_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5251:11:7",
														"memberName": "changeAdmin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 393,
														"src": "5238:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5238:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "5238:39:7"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "4722:261:7",
										"text": " @dev Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`,\n backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in\n {ERC1967Proxy-constructor}."
									},
									"id": 665,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 642,
													"name": "_logic",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 635,
													"src": "5079:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 643,
													"name": "_data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 639,
													"src": "5087:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												}
											],
											"id": 644,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 641,
												"name": "ERC1967Proxy",
												"nameLocations": [
													"5066:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 206,
												"src": "5066:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5066:27:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "5008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "5024:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5016:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5016:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5051:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5038:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 638,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5038:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4999:58:7"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5094:0:7"
									},
									"scope": 738,
									"src": "4988:296:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "5409:30:7",
										"statements": [
											{
												"expression": {
													"id": 671,
													"name": "_admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 629,
													"src": "5426:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 670,
												"id": 672,
												"nodeType": "Return",
												"src": "5419:13:7"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "5290:56:7",
										"text": " @dev Returns the admin of this proxy."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_proxyAdmin",
									"nameLocation": "5360:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5371:2:7"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5400:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5400:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5399:9:7"
									},
									"scope": 738,
									"src": "5351:88:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										536
									],
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "5628:322:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 679,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5642:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5646:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5642:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 681,
															"name": "_proxyAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5656:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
																"typeString": "function () returns (address)"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5656:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5642:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "5902:42:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 700,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "5916:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_TransparentUpgradeableProxy_$738_$",
																			"typeString": "type(contract super TransparentUpgradeableProxy)"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5922:9:7",
																	"memberName": "_fallback",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 536,
																	"src": "5916:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5916:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 704,
															"nodeType": "ExpressionStatement",
															"src": "5916:17:7"
														}
													]
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "5638:306:7",
												"trueBody": {
													"id": 699,
													"nodeType": "Block",
													"src": "5671:225:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 684,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5689:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5693:3:7",
																	"memberName": "sig",
																	"nodeType": "MemberAccess",
																	"src": "5689:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 686,
																			"name": "ITransparentUpgradeableProxy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 624,
																			"src": "5700:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$624_$",
																				"typeString": "type(contract ITransparentUpgradeableProxy)"
																			}
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "5729:16:7",
																		"memberName": "upgradeToAndCall",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 623,
																		"src": "5700:45:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_payable$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
																			"typeString": "function ITransparentUpgradeableProxy.upgradeToAndCall(address,bytes calldata) payable"
																		}
																	},
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5746:8:7",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "5700:54:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "5689:65:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 697,
																"nodeType": "Block",
																"src": "5826:60:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 694,
																				"name": "_dispatchUpgradeToAndCall",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 737,
																				"src": "5844:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5844:27:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 696,
																		"nodeType": "ExpressionStatement",
																		"src": "5844:27:7"
																	}
																]
															},
															"id": 698,
															"nodeType": "IfStatement",
															"src": "5685:201:7",
															"trueBody": {
																"id": 693,
																"nodeType": "Block",
																"src": "5756:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 690,
																				"name": "ProxyDeniedAdminAccess",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 632,
																				"src": "5781:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5781:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 692,
																		"nodeType": "RevertStatement",
																		"src": "5774:31:7"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "5445:131:7",
										"text": " @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior."
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "5590:9:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 677,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5619:8:7"
									},
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5599:2:7"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5628:0:7"
									},
									"scope": 738,
									"src": "5581:369:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "6197:172:7",
										"statements": [
											{
												"assignments": [
													713,
													715
												],
												"declarations": [
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "newImplementation",
														"nameLocation": "6216:17:7",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "6208:25:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 712,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6208:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "6248:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "6235:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 714,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6235:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 728,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"expression": {
																	"id": 718,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6267:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6271:4:7",
																"memberName": "data",
																"nodeType": "MemberAccess",
																"src": "6267:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexRangeAccess",
															"src": "6267:12:7",
															"startExpression": {
																"hexValue": "34",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6276:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr_slice",
																"typeString": "bytes calldata slice"
															}
														},
														{
															"components": [
																{
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6282:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 722,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6282:7:7",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6291:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 724,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6291:5:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 726,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6281:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(address),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr_slice",
																"typeString": "bytes calldata slice"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(address),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 716,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "6256:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6260:6:7",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "6256:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6256:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_payable_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(address payable,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6207:91:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 732,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "6338:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "6357:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 729,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "6308:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$509_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6321:16:7",
														"memberName": "upgradeToAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 328,
														"src": "6308:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6308:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "6308:54:7"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "5956:191:7",
										"text": " @dev Upgrade the implementation of the proxy. See {ERC1967Utils-upgradeToAndCall}.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_dispatchUpgradeToAndCall",
									"nameLocation": "6161:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6186:2:7"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6197:0:7"
									},
									"scope": 738,
									"src": "6152:217:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 739,
							"src": "4145:2226:7",
							"usedErrors": [
								241,
								246,
								254,
								632,
								751,
								754
							],
							"usedEvents": [
								220,
								227
							]
						}
					],
					"src": "133:6239:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							991
						]
					},
					"id": 992,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 740,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 741,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 991,
							"linearizedBaseContracts": [
								991
							],
							"name": "Address",
							"nameLocation": "203:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 746,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "349:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:8"
									},
									"src": "316:50:8"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 751,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "475:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:8"
									},
									"src": "452:39:8"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 754,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:8"
									},
									"src": "591:24:8"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "1602:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 764,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$991",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$991",
																		"typeString": "library Address"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 767,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "1640:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 777,
												"nodeType": "IfStatement",
												"src": "1612:109:8",
												"trueBody": {
													"id": 776,
													"nodeType": "Block",
													"src": "1648:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 772,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$991",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$991",
																					"typeString": "library Address"
																				}
																			],
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 770,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 769,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "1669:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 775,
															"nodeType": "RevertStatement",
															"src": "1662:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													779,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "1732:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 778,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 786,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 780,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "1750:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 782,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "1772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:8"
											},
											{
												"condition": {
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:8",
													"subExpression": {
														"id": 787,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "1798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 793,
												"nodeType": "IfStatement",
												"src": "1793:63:8",
												"trueBody": {
													"id": 792,
													"nodeType": "Block",
													"src": "1807:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 789,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "1828:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 791,
															"nodeType": "RevertStatement",
															"src": "1821:24:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1550:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1577:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:8"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:8"
									},
									"scope": 991,
									"src": "1531:331:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "2794:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 806,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "2833:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "2841:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 805,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2811:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 804,
												"id": 810,
												"nodeType": "Return",
												"src": "2804:45:8"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "2727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "2743:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:8"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "2780:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 802,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:8"
									},
									"scope": 991,
									"src": "2705:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "3293:279:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 826,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$991",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$991",
																		"typeString": "library Address"
																	}
																],
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 824,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 829,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "3331:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "3303:108:8",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "3338:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 834,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$991",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$991",
																					"typeString": "library Address"
																				}
																			],
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 832,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 831,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "3359:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 837,
															"nodeType": "RevertStatement",
															"src": "3352:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													841,
													843
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "3421:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 840,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "3435:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 842,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 850,
												"initialValue": {
													"arguments": [
														{
															"id": 848,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "3488:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 844,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "3462:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 846,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "3481:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 852,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "3537:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "3545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 854,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "3554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 851,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3510:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 823,
												"id": 856,
												"nodeType": "Return",
												"src": "3503:62:8"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3211:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3227:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:8"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3279:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 821,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:8"
									},
									"scope": 991,
									"src": "3180:392:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "3811:154:8",
										"statements": [
											{
												"assignments": [
													869,
													871
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 883,
														"src": "3822:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 868,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 883,
														"src": "3836:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 870,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 876,
												"initialValue": {
													"arguments": [
														{
															"id": 874,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "3881:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 872,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3863:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3930:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "3938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 880,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "3947:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 877,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3903:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 867,
												"id": 882,
												"nodeType": "Return",
												"src": "3896:62:8"
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "3739:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "3755:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 862,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:8"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "3797:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:8"
									},
									"scope": 991,
									"src": "3711:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "4203:156:8",
										"statements": [
											{
												"assignments": [
													895,
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 895,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 909,
														"src": "4214:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 894,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 909,
														"src": "4228:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 896,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [
														{
															"id": 900,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "4275:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 898,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "4255:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "4324:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "4332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 906,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "4341:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "4297:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 893,
												"id": 908,
												"nodeType": "Return",
												"src": "4290:62:8"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "4136:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "4152:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 888,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:8"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "4189:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 891,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:8"
									},
									"scope": 991,
									"src": "4106:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "4783:424:8",
										"statements": [
											{
												"condition": {
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:8",
													"subExpression": {
														"id": 922,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 947,
													"nodeType": "Block",
													"src": "4857:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 929,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "5045:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 933,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 913,
																				"src": "5071:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 944,
															"nodeType": "IfStatement",
															"src": "5041:119:8",
															"trueBody": {
																"id": 943,
																"nodeType": "Block",
																"src": "5096:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 940,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 913,
																					"src": "5138:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 939,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 751,
																				"src": "5121:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 942,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 945,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "5180:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 921,
															"id": 946,
															"nodeType": "Return",
															"src": "5173:17:8"
														}
													]
												},
												"id": 948,
												"nodeType": "IfStatement",
												"src": "4793:408:8",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "4807:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 925,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "4829:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 924,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "4821:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 927,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "4670:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "4694:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 914,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "4716:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 916,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:8"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "4769:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:8"
									},
									"scope": 991,
									"src": "4625:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "5509:122:8",
										"statements": [
											{
												"condition": {
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:8",
													"subExpression": {
														"id": 960,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "5524:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 969,
													"nodeType": "Block",
													"src": "5583:42:8",
													"statements": [
														{
															"expression": {
																"id": 967,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "5604:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 959,
															"id": 968,
															"nodeType": "Return",
															"src": "5597:17:8"
														}
													]
												},
												"id": 970,
												"nodeType": "IfStatement",
												"src": "5519:106:8",
												"trueBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "5533:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 963,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "5555:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 962,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "5547:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 965,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5433:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 952,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5447:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 954,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:8"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5495:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 957,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:8"
									},
									"scope": 991,
									"src": "5407:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "5798:461:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 978,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "5874:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 987,
													"nodeType": "Block",
													"src": "6204:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 984,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "6225:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 986,
															"nodeType": "RevertStatement",
															"src": "6218:24:8"
														}
													]
												},
												"id": 988,
												"nodeType": "IfStatement",
												"src": "5870:383:8",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "5897:301:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:8",
																"nodeType": "YulBlock",
																"src": "6055:133:8",
																"statements": [
																	{
																		"nativeSrc": "6073:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:8"
																			},
																			"nativeSrc": "6096:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:8",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:8",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:8"
																					},
																					"nativeSrc": "6137:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:8"
																			},
																			"nativeSrc": "6130:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:8"
																		},
																		"nativeSrc": "6130:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 975,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 975,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:8",
																	"valueSize": 1
																}
															],
															"id": 982,
															"nodeType": "InlineAssembly",
															"src": "6046:142:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5760:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:8"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:8"
									},
									"scope": 991,
									"src": "5743:516:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 992,
							"src": "195:6066:8",
							"usedErrors": [
								746,
								751,
								754
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1021
						]
					},
					"id": 1022,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 993,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 994,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1021,
							"linearizedBaseContracts": [
								1021
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 999,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 998,
												"id": 1001,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1021,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1008,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1007,
												"id": 1010,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1005,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1021,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1016,
												"id": 1018,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1021,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1022,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1131
						]
					},
					"id": 1132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1023,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1024,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1131,
							"linearizedBaseContracts": [
								1131
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1027,
									"members": [
										{
											"constant": false,
											"id": 1026,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1027,
											"src": "1300:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1025,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:10",
									"nodeType": "StructDefinition",
									"scope": 1131,
									"src": "1271:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1030,
									"members": [
										{
											"constant": false,
											"id": 1029,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1030,
											"src": "1355:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1028,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:10",
									"nodeType": "StructDefinition",
									"scope": 1131,
									"src": "1326:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1033,
									"members": [
										{
											"constant": false,
											"id": 1032,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1033,
											"src": "1407:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1031,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:10",
									"nodeType": "StructDefinition",
									"scope": 1131,
									"src": "1378:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1036,
									"members": [
										{
											"constant": false,
											"id": 1035,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1036,
											"src": "1462:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1034,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:10",
									"nodeType": "StructDefinition",
									"scope": 1131,
									"src": "1433:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1039,
									"members": [
										{
											"constant": false,
											"id": 1038,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1039,
											"src": "1516:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1037,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:10",
									"nodeType": "StructDefinition",
									"scope": 1131,
									"src": "1488:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1042,
									"members": [
										{
											"constant": false,
											"id": 1041,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1042,
											"src": "1568:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1040,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:10",
									"nodeType": "StructDefinition",
									"scope": 1131,
									"src": "1541:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1768:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:10",
													"nodeType": "YulBlock",
													"src": "1830:38:10",
													"statements": [
														{
															"nativeSrc": "1844:14:10",
															"nodeType": "YulAssignment",
															"src": "1844:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:10",
																"nodeType": "YulIdentifier",
																"src": "1854:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1049,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:10",
														"valueSize": 1
													}
												],
												"id": 1051,
												"nodeType": "InlineAssembly",
												"src": "1821:47:10"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1708:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:10"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1745:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1027_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1048,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1047,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1027,
														"src": "1745:11:10"
													},
													"referencedDeclaration": 1027,
													"src": "1745:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1027_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:10"
									},
									"scope": 1131,
									"src": "1684:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "2056:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:10",
													"nodeType": "YulBlock",
													"src": "2118:38:10",
													"statements": [
														{
															"nativeSrc": "2132:14:10",
															"nodeType": "YulAssignment",
															"src": "2132:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:10",
																"nodeType": "YulIdentifier",
																"src": "2142:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1060,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1056,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:10",
														"valueSize": 1
													}
												],
												"id": 1062,
												"nodeType": "InlineAssembly",
												"src": "2109:47:10"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:10",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1996:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1055,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:10"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "2033:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1030_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1059,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1058,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1030,
														"src": "2033:11:10"
													},
													"referencedDeclaration": 1030,
													"src": "2033:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1030_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:10"
									},
									"scope": 1131,
									"src": "1972:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "2344:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:10",
													"nodeType": "YulBlock",
													"src": "2406:38:10",
													"statements": [
														{
															"nativeSrc": "2420:14:10",
															"nodeType": "YulAssignment",
															"src": "2420:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:10",
																"nodeType": "YulIdentifier",
																"src": "2430:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1071,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1067,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:10",
														"valueSize": 1
													}
												],
												"id": 1073,
												"nodeType": "InlineAssembly",
												"src": "2397:47:10"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:10",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "2284:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1066,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:10"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "2321:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1033_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1069,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1033,
														"src": "2321:11:10"
													},
													"referencedDeclaration": 1033,
													"src": "2321:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1033_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:10"
									},
									"scope": 1131,
									"src": "2260:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "2632:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:10",
													"nodeType": "YulBlock",
													"src": "2694:38:10",
													"statements": [
														{
															"nativeSrc": "2708:14:10",
															"nodeType": "YulAssignment",
															"src": "2708:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:10",
																"nodeType": "YulIdentifier",
																"src": "2718:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1082,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1078,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:10",
														"valueSize": 1
													}
												],
												"id": 1084,
												"nodeType": "InlineAssembly",
												"src": "2685:47:10"
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:10",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2572:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1077,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:10"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2609:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1036_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1081,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1080,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1036,
														"src": "2609:11:10"
													},
													"referencedDeclaration": 1036,
													"src": "2609:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1036_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:10"
									},
									"scope": 1131,
									"src": "2548:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "2917:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:10",
													"nodeType": "YulBlock",
													"src": "2979:38:10",
													"statements": [
														{
															"nativeSrc": "2993:14:10",
															"nodeType": "YulAssignment",
															"src": "2993:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:10",
																"nodeType": "YulIdentifier",
																"src": "3003:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1093,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1089,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:10",
														"valueSize": 1
													}
												],
												"id": 1095,
												"nodeType": "InlineAssembly",
												"src": "2970:47:10"
											}
										]
									},
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:10",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "2858:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1088,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:10"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "2895:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1039_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1092,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1091,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1039,
														"src": "2895:10:10"
													},
													"referencedDeclaration": 1039,
													"src": "2895:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1039_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:10"
									},
									"scope": 1131,
									"src": "2835:188:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "3225:112:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:10",
													"nodeType": "YulBlock",
													"src": "3287:44:10",
													"statements": [
														{
															"nativeSrc": "3301:20:10",
															"nodeType": "YulAssignment",
															"src": "3301:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:10",
																"nodeType": "YulIdentifier",
																"src": "3311:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1104,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1100,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1106,
												"nodeType": "InlineAssembly",
												"src": "3278:53:10"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "3158:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1099,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:10"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "3203:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1039_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1102,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1039,
														"src": "3203:10:10"
													},
													"referencedDeclaration": 1039,
													"src": "3203:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1039_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:10"
									},
									"scope": 1131,
									"src": "3135:202:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "3513:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:10",
													"nodeType": "YulBlock",
													"src": "3575:38:10",
													"statements": [
														{
															"nativeSrc": "3589:14:10",
															"nodeType": "YulAssignment",
															"src": "3589:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:10",
																"nodeType": "YulIdentifier",
																"src": "3599:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1115,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1111,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:10",
														"valueSize": 1
													}
												],
												"id": 1117,
												"nodeType": "InlineAssembly",
												"src": "3566:47:10"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:10",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "3455:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:10"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "3492:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1042_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1114,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1113,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1042,
														"src": "3492:9:10"
													},
													"referencedDeclaration": 1042,
													"src": "3492:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1042_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:10"
									},
									"scope": 1131,
									"src": "3433:186:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "3816:112:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:10",
													"nodeType": "YulBlock",
													"src": "3878:44:10",
													"statements": [
														{
															"nativeSrc": "3892:20:10",
															"nodeType": "YulAssignment",
															"src": "3892:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:10",
																"nodeType": "YulIdentifier",
																"src": "3902:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1126,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1122,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1128,
												"nodeType": "InlineAssembly",
												"src": "3869:53:10"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3751:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:10"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3795:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1042_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1125,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1124,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1042,
														"src": "3795:9:10"
													},
													"referencedDeclaration": 1042,
													"src": "3795:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1042_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:10"
									},
									"scope": 1131,
									"src": "3729:199:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1132,
							"src": "1245:2685:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:10"
				},
				"id": 10
			},
			"contracts/proxy.sol": {
				"ast": {
					"absolutePath": "contracts/proxy.sol",
					"exportedSymbols": {
						"ERC1967Proxy": [
							206
						],
						"ERC1967Utils": [
							509
						],
						"IERC1967": [
							168
						],
						"ITransparentUpgradeableProxy": [
							624
						],
						"Ownable": [
							147
						],
						"ProxyAdmin": [
							603
						],
						"QuailFinanceProxy": [
							1160
						],
						"TransparentUpgradeableProxy": [
							738
						]
					},
					"id": 1161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
							"file": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1161,
							"sourceUnit": 604,
							"src": "57:66:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
							"file": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1161,
							"sourceUnit": 739,
							"src": "124:83:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1136,
										"name": "TransparentUpgradeableProxy",
										"nameLocations": [
											"380:27:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 738,
										"src": "380:27:11"
									},
									"id": 1137,
									"nodeType": "InheritanceSpecifier",
									"src": "380:27:11"
								}
							],
							"canonicalName": "QuailFinanceProxy",
							"contractDependencies": [
								603
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1160,
							"linearizedBaseContracts": [
								1160,
								738,
								206,
								545
							],
							"name": "QuailFinanceProxy",
							"nameLocation": "359:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "541:43:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "566:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "570:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "566:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "551:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ProxyAdmin_$603_$",
															"typeString": "function (address) returns (contract ProxyAdmin)"
														},
														"typeName": {
															"id": 1152,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1151,
																"name": "ProxyAdmin",
																"nameLocations": [
																	"555:10:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 603,
																"src": "555:10:11"
															},
															"referencedDeclaration": 603,
															"src": "555:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ProxyAdmin_$603",
																"typeString": "contract ProxyAdmin"
															}
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "551:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ProxyAdmin_$603",
														"typeString": "contract ProxyAdmin"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "551:26:11"
											}
										]
									},
									"id": 1159,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1146,
													"name": "_logic",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1139,
													"src": "514:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1147,
													"name": "admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1141,
													"src": "522:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1148,
													"name": "_data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1143,
													"src": "529:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												}
											],
											"id": 1149,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1145,
												"name": "TransparentUpgradeableProxy",
												"nameLocations": [
													"486:27:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 738,
												"src": "486:27:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "486:49:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "434:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "426:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "450:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "442:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "470:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "457:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "457:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:51:11"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:0:11"
									},
									"scope": 1160,
									"src": "414:170:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1161,
							"src": "350:236:11",
							"usedErrors": [
								241,
								246,
								254,
								632,
								751,
								754
							],
							"usedEvents": [
								220,
								227
							]
						}
					],
					"src": "32:555:11"
				},
				"id": 11
			}
		}
	}
}